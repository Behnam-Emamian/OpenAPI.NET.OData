{
  "openapi": "3.0.1",
  "info": {
    "title": "OData Service for namespace microsoft.graph",
    "description": "This OData service is located at https://graph.microsoft.com/beta",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://graph.microsoft.com/beta"
    }
  ],
  "paths": {
    "/schemaExtensions": {
      "get": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Get entities from schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.ListSchemaExtension",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "targetTypes",
                  "targetTypes desc",
                  "properties",
                  "properties desc",
                  "status",
                  "status desc",
                  "owner",
                  "owner desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "targetTypes",
                  "properties",
                  "status",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of schemaExtension",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Add new entity to schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.CreateSchemaExtension",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/schemaExtensions/{id}": {
      "get": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Get entity from schemaExtensions by key",
        "operationId": "schemaExtensions.schemaExtension.GetSchemaExtension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "targetTypes",
                  "properties",
                  "status",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Update entity in schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.UpdateSchemaExtension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Delete entity from schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.DeleteSchemaExtension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects": {
      "get": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Get entities from directoryObjects",
        "operationId": "directoryObjects.directoryObject.ListDirectoryObject",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "String",
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of directoryObject",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Add new entity to directoryObjects",
        "operationId": "directoryObjects.directoryObject.CreateDirectoryObject",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}": {
      "get": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Get entity from directoryObjects by key",
        "operationId": "directoryObjects.directoryObject.GetDirectoryObject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Update entity in directoryObjects",
        "operationId": "directoryObjects.directoryObject.UpdateDirectoryObject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Delete entity from directoryObjects",
        "operationId": "directoryObjects.directoryObject.DeleteDirectoryObject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.user/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "directoryObjects.delta"
        ],
        "summary": "Invoke function delta",
        "operationId": "directoryObjects.0-Delta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.user"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/directoryObjects/microsoft.graph.group/microsoft.graph.delta()",
        "/directoryObjects/microsoft.graph.administrativeUnit/microsoft.graph.delta()",
        "/directoryObjects/microsoft.graph.orgContact/microsoft.graph.delta()"
      ]
    },
    "/directoryObjects/microsoft.graph.group/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "directoryObjects.delta"
        ],
        "summary": "Invoke function delta",
        "operationId": "directoryObjects.1-Delta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.group"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/directoryObjects/microsoft.graph.user/microsoft.graph.delta()",
        "/directoryObjects/microsoft.graph.administrativeUnit/microsoft.graph.delta()",
        "/directoryObjects/microsoft.graph.orgContact/microsoft.graph.delta()"
      ]
    },
    "/directoryObjects/microsoft.graph.administrativeUnit/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "directoryObjects.delta"
        ],
        "summary": "Invoke function delta",
        "operationId": "directoryObjects.2-Delta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.administrativeUnit"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/directoryObjects/microsoft.graph.user/microsoft.graph.delta()",
        "/directoryObjects/microsoft.graph.group/microsoft.graph.delta()",
        "/directoryObjects/microsoft.graph.orgContact/microsoft.graph.delta()"
      ]
    },
    "/directoryObjects/microsoft.graph.orgContact/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "directoryObjects.delta"
        ],
        "summary": "Invoke function delta",
        "operationId": "directoryObjects.3-Delta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.orgContact"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/directoryObjects/microsoft.graph.user/microsoft.graph.delta()",
        "/directoryObjects/microsoft.graph.group/microsoft.graph.delta()",
        "/directoryObjects/microsoft.graph.administrativeUnit/microsoft.graph.delta()"
      ]
    },
    "/directoryObjects/microsoft.graph.getByIds": {
      "post": {
        "tags": [
          "directoryObjects.getByIds"
        ],
        "summary": "Invoke action getByIds",
        "operationId": "directoryObjects.0-GetByIds",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.validateProperties": {
      "post": {
        "tags": [
          "directoryObjects.validateProperties"
        ],
        "summary": "Invoke action validateProperties",
        "operationId": "directoryObjects.0-ValidateProperties",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "entityType": {
                    "type": "string",
                    "nullable": true
                  },
                  "displayName": {
                    "type": "string",
                    "nullable": true
                  },
                  "mailNickname": {
                    "type": "string",
                    "nullable": true
                  },
                  "onBehalfOfUserId": {
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/directoryObjects/{id}/microsoft.graph.group/microsoft.graph.validateProperties"
      ]
    },
    "/directoryObjects/{id}/microsoft.graph.checkMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects.checkMemberGroups"
        ],
        "summary": "Invoke action checkMemberGroups",
        "operationId": "directoryObjects.0-CheckMemberGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.getMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects.getMemberGroups"
        ],
        "summary": "Invoke action getMemberGroups",
        "operationId": "directoryObjects.0-GetMemberGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "securityEnabledOnly": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.getMemberObjects": {
      "post": {
        "tags": [
          "directoryObjects.getMemberObjects"
        ],
        "summary": "Invoke action getMemberObjects",
        "operationId": "directoryObjects.0-GetMemberObjects",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "securityEnabledOnly": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.group/microsoft.graph.validateProperties": {
      "post": {
        "tags": [
          "directoryObjects.validateProperties"
        ],
        "summary": "Invoke action validateProperties",
        "operationId": "directoryObjects.1-ValidateProperties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "nullable": true
                  },
                  "mailNickname": {
                    "type": "string",
                    "nullable": true
                  },
                  "onBehalfOfUserId": {
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/directoryObjects/microsoft.graph.validateProperties"
      ]
    },
    "/directoryObjects/{id}/microsoft.graph.group/microsoft.graph.renew": {
      "post": {
        "tags": [
          "directoryObjects.renew"
        ],
        "summary": "Invoke action renew",
        "operationId": "directoryObjects.0-Renew",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.restore": {
      "post": {
        "tags": [
          "directoryObjects.restore"
        ],
        "summary": "Invoke action restore",
        "operationId": "directoryObjects.0-Restore",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.assignLicense": {
      "post": {
        "tags": [
          "directoryObjects.assignLicense"
        ],
        "summary": "Invoke action assignLicense",
        "operationId": "directoryObjects.0-AssignLicense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addLicenses": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                    }
                  },
                  "removeLicenses": {
                    "type": "array",
                    "items": {
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.changePassword": {
      "post": {
        "tags": [
          "directoryObjects.changePassword"
        ],
        "summary": "Invoke action changePassword",
        "operationId": "directoryObjects.0-ChangePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "nullable": true
                  },
                  "newPassword": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.invalidateAllRefreshTokens": {
      "post": {
        "tags": [
          "directoryObjects.invalidateAllRefreshTokens"
        ],
        "summary": "Invoke action invalidateAllRefreshTokens",
        "operationId": "directoryObjects.0-InvalidateAllRefreshTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.sendMail": {
      "post": {
        "tags": [
          "directoryObjects.sendMail"
        ],
        "summary": "Invoke action sendMail",
        "operationId": "directoryObjects.0-SendMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Message": {
                    "$ref": "#/components/schemas/microsoft.graph.message"
                  },
                  "SaveToSentItems": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.findMeetingTimesOLD": {
      "post": {
        "tags": [
          "directoryObjects.findMeetingTimesOLD"
        ],
        "summary": "Invoke action findMeetingTimesOLD",
        "operationId": "directoryObjects.0-FindMeetingTimesOLD",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Attendees": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "LocationConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.locationConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "TimeConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "MeetingDuration": {
                    "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                    "type": "string",
                    "format": "duration",
                    "nullable": true
                  },
                  "MaxCandidates": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "IsOrganizerOptional": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "ReturnSuggestionHints": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.findMeetingTimes": {
      "post": {
        "tags": [
          "directoryObjects.findMeetingTimes"
        ],
        "summary": "Invoke action findMeetingTimes",
        "operationId": "directoryObjects.0-FindMeetingTimes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Attendees": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "LocationConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.locationConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "TimeConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "MeetingDuration": {
                    "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                    "type": "string",
                    "format": "duration",
                    "nullable": true
                  },
                  "MaxCandidates": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "IsOrganizerOptional": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "ReturnSuggestionReasons": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "MinimumAttendeePercentage": {
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          "-INF",
                          "INF",
                          "NaN"
                        ]
                      }
                    ],
                    "format": "double",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.getMailTips": {
      "post": {
        "tags": [
          "directoryObjects.getMailTips"
        ],
        "summary": "Invoke action getMailTips",
        "operationId": "directoryObjects.0-GetMailTips",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "EmailAddresses": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "MailTipsOptions": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.mailTipsType"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.reminderView(StartDateTime={StartDateTime},EndDateTime={EndDateTime})": {
      "get": {
        "tags": [
          "directoryObjects.reminderView"
        ],
        "summary": "Invoke function reminderView",
        "operationId": "directoryObjects.0-ReminderView",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.reminder"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.findRoomLists()": {
      "get": {
        "tags": [
          "directoryObjects.findRoomLists"
        ],
        "summary": "Invoke function findRoomLists",
        "operationId": "directoryObjects.0-FindRoomLists",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.findRooms(RoomList={RoomList})": {
      "get": {
        "tags": [
          "directoryObjects.findRooms"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "directoryObjects.0-FindRooms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoomList",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.findRooms()"
      ]
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.findRooms()": {
      "get": {
        "tags": [
          "directoryObjects.findRooms"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "directoryObjects.1-FindRooms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.findRooms(RoomList={RoomList})"
      ]
    },
    "/directoryObjects/{id}/microsoft.graph.group/microsoft.graph.subscribeByMail": {
      "post": {
        "tags": [
          "directoryObjects.subscribeByMail"
        ],
        "summary": "Invoke action subscribeByMail",
        "operationId": "directoryObjects.0-SubscribeByMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.group/microsoft.graph.unsubscribeByMail": {
      "post": {
        "tags": [
          "directoryObjects.unsubscribeByMail"
        ],
        "summary": "Invoke action unsubscribeByMail",
        "operationId": "directoryObjects.0-UnsubscribeByMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.group/microsoft.graph.addFavorite": {
      "post": {
        "tags": [
          "directoryObjects.addFavorite"
        ],
        "summary": "Invoke action addFavorite",
        "operationId": "directoryObjects.0-AddFavorite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.group/microsoft.graph.removeFavorite": {
      "post": {
        "tags": [
          "directoryObjects.removeFavorite"
        ],
        "summary": "Invoke action removeFavorite",
        "operationId": "directoryObjects.0-RemoveFavorite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.group/microsoft.graph.resetUnseenCount": {
      "post": {
        "tags": [
          "directoryObjects.resetUnseenCount"
        ],
        "summary": "Invoke action resetUnseenCount",
        "operationId": "directoryObjects.0-ResetUnseenCount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.removeAllDevicesFromManagement": {
      "post": {
        "tags": [
          "directoryObjects.removeAllDevicesFromManagement"
        ],
        "summary": "Invoke action removeAllDevicesFromManagement",
        "operationId": "directoryObjects.0-RemoveAllDevicesFromManagement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.organization/microsoft.graph.setMobileDeviceManagementAuthority": {
      "post": {
        "tags": [
          "directoryObjects.setMobileDeviceManagementAuthority"
        ],
        "summary": "Invoke action setMobileDeviceManagementAuthority",
        "operationId": "directoryObjects.0-SetMobileDeviceManagementAuthority",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.organization/microsoft.graph.getEncryptionPublicKey()": {
      "get": {
        "tags": [
          "directoryObjects.getEncryptionPublicKey"
        ],
        "summary": "Invoke function getEncryptionPublicKey",
        "operationId": "directoryObjects.0-GetEncryptionPublicKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.organization/microsoft.graph.uploadDepToken": {
      "post": {
        "tags": [
          "directoryObjects.uploadDepToken"
        ],
        "summary": "Invoke action uploadDepToken",
        "operationId": "directoryObjects.0-UploadDepToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appleId": {
                    "type": "string",
                    "nullable": true
                  },
                  "depToken": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.organization/microsoft.graph.syncWithAppleDeviceEnrollmentProgram": {
      "post": {
        "tags": [
          "directoryObjects.syncWithAppleDeviceEnrollmentProgram"
        ],
        "summary": "Invoke action syncWithAppleDeviceEnrollmentProgram",
        "operationId": "directoryObjects.0-SyncWithAppleDeviceEnrollmentProgram",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.getManagedAppDiagnosticStatuses()": {
      "get": {
        "tags": [
          "directoryObjects.getManagedAppDiagnosticStatuses"
        ],
        "summary": "Invoke function getManagedAppDiagnosticStatuses",
        "operationId": "directoryObjects.0-GetManagedAppDiagnosticStatuses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.managedAppDiagnosticStatus"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.getManagedAppPolicies()": {
      "get": {
        "tags": [
          "directoryObjects.getManagedAppPolicies"
        ],
        "summary": "Invoke function getManagedAppPolicies",
        "operationId": "directoryObjects.0-GetManagedAppPolicies",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryObjects/{id}/microsoft.graph.user/microsoft.graph.wipeManagedAppRegistrationByDeviceTag": {
      "post": {
        "tags": [
          "directoryObjects.wipeManagedAppRegistrationByDeviceTag"
        ],
        "summary": "Invoke action wipeManagedAppRegistrationByDeviceTag",
        "operationId": "directoryObjects.0-WipeManagedAppRegistrationByDeviceTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deviceTag": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/applications": {
      "get": {
        "tags": [
          "applications.application"
        ],
        "summary": "Get entities from applications",
        "operationId": "applications.application.ListApplication",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "api",
                  "api desc",
                  "allowPublicClient",
                  "allowPublicClient desc",
                  "applicationAliases",
                  "applicationAliases desc",
                  "appRoles",
                  "appRoles desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "installedClients",
                  "installedClients desc",
                  "displayName",
                  "displayName desc",
                  "info",
                  "info desc",
                  "keyCredentials",
                  "keyCredentials desc",
                  "logo",
                  "logo desc",
                  "orgRestrictions",
                  "orgRestrictions desc",
                  "passwordCredentials",
                  "passwordCredentials desc",
                  "preAuthorizedApplications",
                  "preAuthorizedApplications desc",
                  "requiredResourceAccess",
                  "requiredResourceAccess desc",
                  "tags",
                  "tags desc",
                  "web",
                  "web desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "api",
                  "allowPublicClient",
                  "applicationAliases",
                  "appRoles",
                  "createdDateTime",
                  "installedClients",
                  "displayName",
                  "info",
                  "keyCredentials",
                  "logo",
                  "orgRestrictions",
                  "passwordCredentials",
                  "preAuthorizedApplications",
                  "requiredResourceAccess",
                  "tags",
                  "web"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of application",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.application"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "applications.application"
        ],
        "summary": "Add new entity to applications",
        "operationId": "applications.application.CreateApplication",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.application"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.application"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/applications/{id}": {
      "get": {
        "tags": [
          "applications.application"
        ],
        "summary": "Get entity from applications by key",
        "operationId": "applications.application.GetApplication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "api",
                  "allowPublicClient",
                  "applicationAliases",
                  "appRoles",
                  "createdDateTime",
                  "installedClients",
                  "displayName",
                  "info",
                  "keyCredentials",
                  "logo",
                  "orgRestrictions",
                  "passwordCredentials",
                  "preAuthorizedApplications",
                  "requiredResourceAccess",
                  "tags",
                  "web"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.application"
                }
              }
            },
            "links": {
              "extensionProperties": {
                "operationId": "applications.Entity-GetApplication",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "createdOnBehalfOf": {
                "operationId": "applications.Entity-GetApplication",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "owners": {
                "operationId": "applications.Entity-GetApplication",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "policies": {
                "operationId": "applications.Entity-GetApplication",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "synchronization": {
                "operationId": "applications.Entity-GetApplication",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "applications.application"
        ],
        "summary": "Update entity in applications",
        "operationId": "applications.application.UpdateApplication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.application"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "applications.application"
        ],
        "summary": "Delete entity from applications",
        "operationId": "applications.application.DeleteApplication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/administrativeUnits": {
      "get": {
        "tags": [
          "administrativeUnits.administrativeUnit"
        ],
        "summary": "Get entities from administrativeUnits",
        "operationId": "administrativeUnits.administrativeUnit.ListAdministrativeUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "displayName",
                  "displayName desc",
                  "description",
                  "description desc",
                  "visibility",
                  "visibility desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "displayName",
                  "description",
                  "visibility"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of administrativeUnit",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.administrativeUnit"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "administrativeUnits.administrativeUnit"
        ],
        "summary": "Add new entity to administrativeUnits",
        "operationId": "administrativeUnits.administrativeUnit.CreateAdministrativeUnit",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.administrativeUnit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.administrativeUnit"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/administrativeUnits/{id}": {
      "get": {
        "tags": [
          "administrativeUnits.administrativeUnit"
        ],
        "summary": "Get entity from administrativeUnits by key",
        "operationId": "administrativeUnits.administrativeUnit.GetAdministrativeUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "displayName",
                  "description",
                  "visibility"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.administrativeUnit"
                }
              }
            },
            "links": {
              "extensions": {
                "operationId": "administrativeUnits.Entity-GetAdministrativeUnit",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "members": {
                "operationId": "administrativeUnits.Entity-GetAdministrativeUnit",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "scopedRoleMembers": {
                "operationId": "administrativeUnits.Entity-GetAdministrativeUnit",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "administrativeUnits.administrativeUnit"
        ],
        "summary": "Update entity in administrativeUnits",
        "operationId": "administrativeUnits.administrativeUnit.UpdateAdministrativeUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.administrativeUnit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "administrativeUnits.administrativeUnit"
        ],
        "summary": "Delete entity from administrativeUnits",
        "operationId": "administrativeUnits.administrativeUnit.DeleteAdministrativeUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/administrativeUnits/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "administrativeUnits.delta"
        ],
        "summary": "Invoke function delta",
        "operationId": "administrativeUnits.0-Delta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.administrativeUnit"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/allowedDataLocations": {
      "get": {
        "tags": [
          "allowedDataLocations.allowedDataLocation"
        ],
        "summary": "Get entities from allowedDataLocations",
        "operationId": "allowedDataLocations.allowedDataLocation.ListAllowedDataLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "appId",
                  "appId desc",
                  "location",
                  "location desc",
                  "isDefault",
                  "isDefault desc",
                  "domain",
                  "domain desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "appId",
                  "location",
                  "isDefault",
                  "domain"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of allowedDataLocation",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.allowedDataLocation"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "allowedDataLocations.allowedDataLocation"
        ],
        "summary": "Add new entity to allowedDataLocations",
        "operationId": "allowedDataLocations.allowedDataLocation.CreateAllowedDataLocation",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.allowedDataLocation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.allowedDataLocation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/allowedDataLocations/{id}": {
      "get": {
        "tags": [
          "allowedDataLocations.allowedDataLocation"
        ],
        "summary": "Get entity from allowedDataLocations by key",
        "operationId": "allowedDataLocations.allowedDataLocation.GetAllowedDataLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "appId",
                  "location",
                  "isDefault",
                  "domain"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.allowedDataLocation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "allowedDataLocations.allowedDataLocation"
        ],
        "summary": "Update entity in allowedDataLocations",
        "operationId": "allowedDataLocations.allowedDataLocation.UpdateAllowedDataLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.allowedDataLocation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "allowedDataLocations.allowedDataLocation"
        ],
        "summary": "Delete entity from allowedDataLocations",
        "operationId": "allowedDataLocations.allowedDataLocation.DeleteAllowedDataLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/appRoleAssignments": {
      "get": {
        "tags": [
          "appRoleAssignments.appRoleAssignment"
        ],
        "summary": "Get entities from appRoleAssignments",
        "operationId": "appRoleAssignments.appRoleAssignment.ListAppRoleAssignment",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "creationTimestamp",
                  "creationTimestamp desc",
                  "principalDisplayName",
                  "principalDisplayName desc",
                  "principalId",
                  "principalId desc",
                  "principalType",
                  "principalType desc",
                  "resourceDisplayName",
                  "resourceDisplayName desc",
                  "resourceId",
                  "resourceId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "creationTimestamp",
                  "principalDisplayName",
                  "principalId",
                  "principalType",
                  "resourceDisplayName",
                  "resourceId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of appRoleAssignment",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.appRoleAssignment"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "appRoleAssignments.appRoleAssignment"
        ],
        "summary": "Add new entity to appRoleAssignments",
        "operationId": "appRoleAssignments.appRoleAssignment.CreateAppRoleAssignment",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.appRoleAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.appRoleAssignment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/appRoleAssignments/{id}": {
      "get": {
        "tags": [
          "appRoleAssignments.appRoleAssignment"
        ],
        "summary": "Get entity from appRoleAssignments by key",
        "operationId": "appRoleAssignments.appRoleAssignment.GetAppRoleAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "creationTimestamp",
                  "principalDisplayName",
                  "principalId",
                  "principalType",
                  "resourceDisplayName",
                  "resourceId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.appRoleAssignment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "appRoleAssignments.appRoleAssignment"
        ],
        "summary": "Update entity in appRoleAssignments",
        "operationId": "appRoleAssignments.appRoleAssignment.UpdateAppRoleAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.appRoleAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "appRoleAssignments.appRoleAssignment"
        ],
        "summary": "Delete entity from appRoleAssignments",
        "operationId": "appRoleAssignments.appRoleAssignment.DeleteAppRoleAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "contacts.orgContact"
        ],
        "summary": "Get entities from contacts",
        "operationId": "contacts.orgContact.ListOrgContact",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesProvisioningErrors",
                  "onPremisesProvisioningErrors desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesSyncEnabled",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "officeLocation",
                  "postalCode",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of orgContact",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.orgContact"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "contacts.orgContact"
        ],
        "summary": "Add new entity to contacts",
        "operationId": "contacts.orgContact.CreateOrgContact",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.orgContact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.orgContact"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "contacts.orgContact"
        ],
        "summary": "Get entity from contacts by key",
        "operationId": "contacts.orgContact.GetOrgContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesSyncEnabled",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "officeLocation",
                  "postalCode",
                  "proxyAddresses",
                  "state",
                  "streetAddress",
                  "surname"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.orgContact"
                }
              }
            },
            "links": {
              "manager": {
                "operationId": "contacts.Entity-GetOrgContact",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "directReports": {
                "operationId": "contacts.Entity-GetOrgContact",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "memberOf": {
                "operationId": "contacts.Entity-GetOrgContact",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "contacts.orgContact"
        ],
        "summary": "Update entity in contacts",
        "operationId": "contacts.orgContact.UpdateOrgContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.orgContact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "contacts.orgContact"
        ],
        "summary": "Delete entity from contacts",
        "operationId": "contacts.orgContact.DeleteOrgContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/contacts/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "contacts.delta"
        ],
        "summary": "Invoke function delta",
        "operationId": "contacts.0-Delta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.orgContact"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "devices.device"
        ],
        "summary": "Get entities from devices",
        "operationId": "devices.device.ListDevice",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "alternativeSecurityIds",
                  "alternativeSecurityIds desc",
                  "approximateLastSignInDateTime",
                  "approximateLastSignInDateTime desc",
                  "deviceId",
                  "deviceId desc",
                  "deviceMetadata",
                  "deviceMetadata desc",
                  "deviceVersion",
                  "deviceVersion desc",
                  "displayName",
                  "displayName desc",
                  "isCompliant",
                  "isCompliant desc",
                  "isManaged",
                  "isManaged desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "operatingSystem",
                  "operatingSystem desc",
                  "operatingSystemVersion",
                  "operatingSystemVersion desc",
                  "physicalIds",
                  "physicalIds desc",
                  "trustType",
                  "trustType desc",
                  "Name",
                  "Name desc",
                  "Manufacturer",
                  "Manufacturer desc",
                  "Model",
                  "Model desc",
                  "Kind",
                  "Kind desc",
                  "Status",
                  "Status desc",
                  "Platform",
                  "Platform desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "accountEnabled",
                  "alternativeSecurityIds",
                  "approximateLastSignInDateTime",
                  "deviceId",
                  "deviceMetadata",
                  "deviceVersion",
                  "displayName",
                  "isCompliant",
                  "isManaged",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "operatingSystem",
                  "operatingSystemVersion",
                  "physicalIds",
                  "trustType",
                  "Name",
                  "Manufacturer",
                  "Model",
                  "Kind",
                  "Status",
                  "Platform"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "String",
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of device",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.device"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "devices.device"
        ],
        "summary": "Add new entity to devices",
        "operationId": "devices.device.CreateDevice",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.device"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.device"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/devices/{id}": {
      "get": {
        "tags": [
          "devices.device"
        ],
        "summary": "Get entity from devices by key",
        "operationId": "devices.device.GetDevice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "accountEnabled",
                  "alternativeSecurityIds",
                  "approximateLastSignInDateTime",
                  "deviceId",
                  "deviceMetadata",
                  "deviceVersion",
                  "displayName",
                  "isCompliant",
                  "isManaged",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "operatingSystem",
                  "operatingSystemVersion",
                  "physicalIds",
                  "trustType",
                  "Name",
                  "Manufacturer",
                  "Model",
                  "Kind",
                  "Status",
                  "Platform"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.device"
                }
              }
            },
            "links": {
              "extensions": {
                "operationId": "devices.Entity-GetDevice",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "registeredOwners": {
                "operationId": "devices.Entity-GetDevice",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "registeredUsers": {
                "operationId": "devices.Entity-GetDevice",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "commands": {
                "operationId": "devices.Entity-GetDevice",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "devices.device"
        ],
        "summary": "Update entity in devices",
        "operationId": "devices.device.UpdateDevice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.device"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "devices.device"
        ],
        "summary": "Delete entity from devices",
        "operationId": "devices.device.DeleteDevice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domains": {
      "get": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Get entities from domains",
        "operationId": "domains.domain.ListDomain",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "authenticationType",
                  "authenticationType desc",
                  "availabilityStatus",
                  "availabilityStatus desc",
                  "isAdminManaged",
                  "isAdminManaged desc",
                  "isDefault",
                  "isDefault desc",
                  "isInitial",
                  "isInitial desc",
                  "isRoot",
                  "isRoot desc",
                  "isVerified",
                  "isVerified desc",
                  "supportedServices",
                  "supportedServices desc",
                  "state",
                  "state desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "authenticationType",
                  "availabilityStatus",
                  "isAdminManaged",
                  "isDefault",
                  "isInitial",
                  "isRoot",
                  "isVerified",
                  "supportedServices",
                  "state"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "serviceConfigurationRecords",
                  "verificationDnsRecords",
                  "domainNameReferences"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": { }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of domain",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.domain"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Add new entity to domains",
        "operationId": "domains.domain.CreateDomain",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domain"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domain"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domains/{id}": {
      "get": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Get entity from domains by key",
        "operationId": "domains.domain.GetDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "authenticationType",
                  "availabilityStatus",
                  "isAdminManaged",
                  "isDefault",
                  "isInitial",
                  "isRoot",
                  "isVerified",
                  "supportedServices",
                  "state"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "serviceConfigurationRecords",
                  "verificationDnsRecords",
                  "domainNameReferences"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domain"
                }
              }
            },
            "links": {
              "serviceConfigurationRecords": {
                "operationId": "domains.Entity-GetDomain",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "verificationDnsRecords": {
                "operationId": "domains.Entity-GetDomain",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "domainNameReferences": {
                "operationId": "domains.Entity-GetDomain",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Update entity in domains",
        "operationId": "domains.domain.UpdateDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domain"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Delete entity from domains",
        "operationId": "domains.domain.DeleteDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domains/{id}/microsoft.graph.forceDelete": {
      "post": {
        "tags": [
          "domains.forceDelete"
        ],
        "summary": "Invoke action forceDelete",
        "operationId": "domains.0-ForceDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "disableUserAccounts": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domains/{id}/microsoft.graph.verify": {
      "post": {
        "tags": [
          "domains.verify"
        ],
        "summary": "Invoke action verify",
        "operationId": "domains.0-Verify",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domainDnsRecords": {
      "get": {
        "tags": [
          "domainDnsRecords.domainDnsRecord"
        ],
        "summary": "Get entities from domainDnsRecords",
        "operationId": "domainDnsRecords.domainDnsRecord.ListDomainDnsRecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "isOptional",
                  "isOptional desc",
                  "label",
                  "label desc",
                  "recordType",
                  "recordType desc",
                  "supportedService",
                  "supportedService desc",
                  "ttl",
                  "ttl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "isOptional",
                  "label",
                  "recordType",
                  "supportedService",
                  "ttl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of domainDnsRecord",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domainDnsRecords.domainDnsRecord"
        ],
        "summary": "Add new entity to domainDnsRecords",
        "operationId": "domainDnsRecords.domainDnsRecord.CreateDomainDnsRecord",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/domainDnsRecords/{id}": {
      "get": {
        "tags": [
          "domainDnsRecords.domainDnsRecord"
        ],
        "summary": "Get entity from domainDnsRecords by key",
        "operationId": "domainDnsRecords.domainDnsRecord.GetDomainDnsRecord",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "isOptional",
                  "label",
                  "recordType",
                  "supportedService",
                  "ttl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "domainDnsRecords.domainDnsRecord"
        ],
        "summary": "Update entity in domainDnsRecords",
        "operationId": "domainDnsRecords.domainDnsRecord.UpdateDomainDnsRecord",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "domainDnsRecords.domainDnsRecord"
        ],
        "summary": "Delete entity from domainDnsRecords",
        "operationId": "domainDnsRecords.domainDnsRecord.DeleteDomainDnsRecord",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "groups.group"
        ],
        "summary": "Get entities from groups",
        "operationId": "groups.group.ListGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "membershipRule",
                  "membershipRule desc",
                  "membershipRuleProcessingState",
                  "membershipRuleProcessingState desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesProvisioningErrors",
                  "onPremisesProvisioningErrors desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "resourceBehaviorOptions",
                  "resourceBehaviorOptions desc",
                  "resourceProvisioningOptions",
                  "resourceProvisioningOptions desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "theme",
                  "theme desc",
                  "visibility",
                  "visibility desc",
                  "accessType",
                  "accessType desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "isFavorite",
                  "isFavorite desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "unseenCount",
                  "unseenCount desc",
                  "unseenConversationsCount",
                  "unseenConversationsCount desc",
                  "unseenMessagesCount",
                  "unseenMessagesCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "membershipRule",
                  "membershipRuleProcessingState",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "preferredLanguage",
                  "proxyAddresses",
                  "renewedDateTime",
                  "resourceBehaviorOptions",
                  "resourceProvisioningOptions",
                  "securityEnabled",
                  "theme",
                  "visibility",
                  "accessType",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isFavorite",
                  "isSubscribedByMail",
                  "unseenCount",
                  "unseenConversationsCount",
                  "unseenMessagesCount"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "String",
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of group",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.group"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups.group"
        ],
        "summary": "Add new entity to groups",
        "operationId": "groups.group.CreateGroup",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "tags": [
          "groups.group"
        ],
        "summary": "Get entity from groups by key",
        "operationId": "groups.group.GetGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "membershipRule",
                  "membershipRuleProcessingState",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "preferredLanguage",
                  "proxyAddresses",
                  "renewedDateTime",
                  "resourceBehaviorOptions",
                  "resourceProvisioningOptions",
                  "securityEnabled",
                  "theme",
                  "visibility",
                  "accessType",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "isFavorite",
                  "isSubscribedByMail",
                  "unseenCount",
                  "unseenConversationsCount",
                  "unseenMessagesCount"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            },
            "links": {
              "extensions": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "members": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "memberOf": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "createdOnBehalfOf": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "owners": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "settings": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "endpoints": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "threads": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendar": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendarView": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "events": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "conversations": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "photo": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "photos": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "acceptedSenders": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "rejectedSenders": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drive": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drives": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "sites": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "planner": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "onenote": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "team": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "channels": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "groupLifecyclePolicies": {
                "operationId": "groups.Entity-GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups.group"
        ],
        "summary": "Update entity in groups",
        "operationId": "groups.group.UpdateGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "groups.group"
        ],
        "summary": "Delete entity from groups",
        "operationId": "groups.group.DeleteGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups.delta"
        ],
        "summary": "Invoke function delta",
        "operationId": "groups.0-Delta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.group"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups/{id}/microsoft.graph.validateProperties": {
      "post": {
        "tags": [
          "groups.validateProperties"
        ],
        "summary": "Invoke action validateProperties",
        "operationId": "groups.0-ValidateProperties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "nullable": true
                  },
                  "mailNickname": {
                    "type": "string",
                    "nullable": true
                  },
                  "onBehalfOfUserId": {
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups/{id}/microsoft.graph.renew": {
      "post": {
        "tags": [
          "groups.renew"
        ],
        "summary": "Invoke action renew",
        "operationId": "groups.0-Renew",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups/{id}/microsoft.graph.subscribeByMail": {
      "post": {
        "tags": [
          "groups.subscribeByMail"
        ],
        "summary": "Invoke action subscribeByMail",
        "operationId": "groups.0-SubscribeByMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups/{id}/microsoft.graph.unsubscribeByMail": {
      "post": {
        "tags": [
          "groups.unsubscribeByMail"
        ],
        "summary": "Invoke action unsubscribeByMail",
        "operationId": "groups.0-UnsubscribeByMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups/{id}/microsoft.graph.addFavorite": {
      "post": {
        "tags": [
          "groups.addFavorite"
        ],
        "summary": "Invoke action addFavorite",
        "operationId": "groups.0-AddFavorite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups/{id}/microsoft.graph.removeFavorite": {
      "post": {
        "tags": [
          "groups.removeFavorite"
        ],
        "summary": "Invoke action removeFavorite",
        "operationId": "groups.0-RemoveFavorite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groups/{id}/microsoft.graph.resetUnseenCount": {
      "post": {
        "tags": [
          "groups.resetUnseenCount"
        ],
        "summary": "Invoke action resetUnseenCount",
        "operationId": "groups.0-ResetUnseenCount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryRoles": {
      "get": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Get entities from directoryRoles",
        "operationId": "directoryRoles.directoryRole.ListDirectoryRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "roleTemplateId",
                  "roleTemplateId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "description",
                  "displayName",
                  "roleTemplateId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "String",
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of directoryRole",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.directoryRole"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Add new entity to directoryRoles",
        "operationId": "directoryRoles.directoryRole.CreateDirectoryRole",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRole"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryRoles/{id}": {
      "get": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Get entity from directoryRoles by key",
        "operationId": "directoryRoles.directoryRole.GetDirectoryRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "description",
                  "displayName",
                  "roleTemplateId"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRole"
                }
              }
            },
            "links": {
              "members": {
                "operationId": "directoryRoles.Entity-GetDirectoryRole",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "scopedMembers": {
                "operationId": "directoryRoles.Entity-GetDirectoryRole",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Update entity in directoryRoles",
        "operationId": "directoryRoles.directoryRole.UpdateDirectoryRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Delete entity from directoryRoles",
        "operationId": "directoryRoles.directoryRole.DeleteDirectoryRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryRoleTemplates": {
      "get": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Get entities from directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.ListDirectoryRoleTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "description",
                  "displayName"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "String",
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of directoryRoleTemplate",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Add new entity to directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.CreateDirectoryRoleTemplate",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directoryRoleTemplates/{id}": {
      "get": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Get entity from directoryRoleTemplates by key",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.GetDirectoryRoleTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "description",
                  "displayName"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Update entity in directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.UpdateDirectoryRoleTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Delete entity from directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.DeleteDirectoryRoleTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directorySettingTemplates": {
      "get": {
        "tags": [
          "directorySettingTemplates.directorySettingTemplate"
        ],
        "summary": "Get entities from directorySettingTemplates",
        "operationId": "directorySettingTemplates.directorySettingTemplate.ListDirectorySettingTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "displayName",
                  "displayName desc",
                  "description",
                  "description desc",
                  "values",
                  "values desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "displayName",
                  "description",
                  "values"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of directorySettingTemplate",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.directorySettingTemplate"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directorySettingTemplates.directorySettingTemplate"
        ],
        "summary": "Add new entity to directorySettingTemplates",
        "operationId": "directorySettingTemplates.directorySettingTemplate.CreateDirectorySettingTemplate",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directorySettingTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directorySettingTemplate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directorySettingTemplates/{id}": {
      "get": {
        "tags": [
          "directorySettingTemplates.directorySettingTemplate"
        ],
        "summary": "Get entity from directorySettingTemplates by key",
        "operationId": "directorySettingTemplates.directorySettingTemplate.GetDirectorySettingTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "displayName",
                  "description",
                  "values"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directorySettingTemplate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directorySettingTemplates.directorySettingTemplate"
        ],
        "summary": "Update entity in directorySettingTemplates",
        "operationId": "directorySettingTemplates.directorySettingTemplate.UpdateDirectorySettingTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directorySettingTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directorySettingTemplates.directorySettingTemplate"
        ],
        "summary": "Delete entity from directorySettingTemplates",
        "operationId": "directorySettingTemplates.directorySettingTemplate.DeleteDirectorySettingTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/organization": {
      "get": {
        "tags": [
          "organization.organization"
        ],
        "summary": "Get entities from organization",
        "operationId": "organization.organization.ListOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "country",
                  "country desc",
                  "countryLetterCode",
                  "countryLetterCode desc",
                  "displayName",
                  "displayName desc",
                  "isMultipleDataLocationsForServicesEnabled",
                  "isMultipleDataLocationsForServicesEnabled desc",
                  "marketingNotificationEmails",
                  "marketingNotificationEmails desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "securityComplianceNotificationMails",
                  "securityComplianceNotificationMails desc",
                  "securityComplianceNotificationPhones",
                  "securityComplianceNotificationPhones desc",
                  "state",
                  "state desc",
                  "street",
                  "street desc",
                  "technicalNotificationMails",
                  "technicalNotificationMails desc",
                  "verifiedDomains",
                  "verifiedDomains desc",
                  "mobileDeviceManagementAuthority",
                  "mobileDeviceManagementAuthority desc",
                  "certificateConnectorSetting",
                  "certificateConnectorSetting desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "country",
                  "countryLetterCode",
                  "displayName",
                  "isMultipleDataLocationsForServicesEnabled",
                  "marketingNotificationEmails",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "securityComplianceNotificationMails",
                  "securityComplianceNotificationPhones",
                  "state",
                  "street",
                  "technicalNotificationMails",
                  "verifiedDomains",
                  "mobileDeviceManagementAuthority",
                  "certificateConnectorSetting"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "String",
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of organization",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.organization"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "organization.organization"
        ],
        "summary": "Add new entity to organization",
        "operationId": "organization.organization.CreateOrganization",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.organization"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/organization/{id}": {
      "get": {
        "tags": [
          "organization.organization"
        ],
        "summary": "Get entity from organization by key",
        "operationId": "organization.organization.GetOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "country",
                  "countryLetterCode",
                  "displayName",
                  "isMultipleDataLocationsForServicesEnabled",
                  "marketingNotificationEmails",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "postalCode",
                  "preferredLanguage",
                  "provisionedPlans",
                  "securityComplianceNotificationMails",
                  "securityComplianceNotificationPhones",
                  "state",
                  "street",
                  "technicalNotificationMails",
                  "verifiedDomains",
                  "mobileDeviceManagementAuthority",
                  "certificateConnectorSetting"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.organization"
                }
              }
            },
            "links": {
              "extensions": {
                "operationId": "organization.Entity-GetOrganization",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "depOnboardingSettings": {
                "operationId": "organization.Entity-GetOrganization",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "appleVolumePurchaseProgramTokens": {
                "operationId": "organization.Entity-GetOrganization",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "organization.organization"
        ],
        "summary": "Update entity in organization",
        "operationId": "organization.organization.UpdateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "organization.organization"
        ],
        "summary": "Delete entity from organization",
        "operationId": "organization.organization.DeleteOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/organization/{id}/microsoft.graph.setMobileDeviceManagementAuthority": {
      "post": {
        "tags": [
          "organization.setMobileDeviceManagementAuthority"
        ],
        "summary": "Invoke action setMobileDeviceManagementAuthority",
        "operationId": "organization.0-SetMobileDeviceManagementAuthority",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/organization/{id}/microsoft.graph.getEncryptionPublicKey()": {
      "get": {
        "tags": [
          "organization.getEncryptionPublicKey"
        ],
        "summary": "Invoke function getEncryptionPublicKey",
        "operationId": "organization.0-GetEncryptionPublicKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/organization/{id}/microsoft.graph.uploadDepToken": {
      "post": {
        "tags": [
          "organization.uploadDepToken"
        ],
        "summary": "Invoke action uploadDepToken",
        "operationId": "organization.0-UploadDepToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appleId": {
                    "type": "string",
                    "nullable": true
                  },
                  "depToken": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/organization/{id}/microsoft.graph.syncWithAppleDeviceEnrollmentProgram": {
      "post": {
        "tags": [
          "organization.syncWithAppleDeviceEnrollmentProgram"
        ],
        "summary": "Invoke action syncWithAppleDeviceEnrollmentProgram",
        "operationId": "organization.0-SyncWithAppleDeviceEnrollmentProgram",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/oauth2PermissionGrants": {
      "get": {
        "tags": [
          "oauth2PermissionGrants.oAuth2PermissionGrant"
        ],
        "summary": "Get entities from oauth2PermissionGrants",
        "operationId": "oauth2PermissionGrants.oAuth2PermissionGrant.ListOAuth2PermissionGrant",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "clientId",
                  "clientId desc",
                  "consentType",
                  "consentType desc",
                  "expiryTime",
                  "expiryTime desc",
                  "principalId",
                  "principalId desc",
                  "resourceId",
                  "resourceId desc",
                  "scope",
                  "scope desc",
                  "startTime",
                  "startTime desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "clientId",
                  "consentType",
                  "expiryTime",
                  "principalId",
                  "resourceId",
                  "scope",
                  "startTime"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of oAuth2PermissionGrant",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.oAuth2PermissionGrant"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "oauth2PermissionGrants.oAuth2PermissionGrant"
        ],
        "summary": "Add new entity to oauth2PermissionGrants",
        "operationId": "oauth2PermissionGrants.oAuth2PermissionGrant.CreateOAuth2PermissionGrant",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.oAuth2PermissionGrant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.oAuth2PermissionGrant"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/oauth2PermissionGrants/{id}": {
      "get": {
        "tags": [
          "oauth2PermissionGrants.oAuth2PermissionGrant"
        ],
        "summary": "Get entity from oauth2PermissionGrants by key",
        "operationId": "oauth2PermissionGrants.oAuth2PermissionGrant.GetOAuth2PermissionGrant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "clientId",
                  "consentType",
                  "expiryTime",
                  "principalId",
                  "resourceId",
                  "scope",
                  "startTime"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.oAuth2PermissionGrant"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "oauth2PermissionGrants.oAuth2PermissionGrant"
        ],
        "summary": "Update entity in oauth2PermissionGrants",
        "operationId": "oauth2PermissionGrants.oAuth2PermissionGrant.UpdateOAuth2PermissionGrant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.oAuth2PermissionGrant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "oauth2PermissionGrants.oAuth2PermissionGrant"
        ],
        "summary": "Delete entity from oauth2PermissionGrants",
        "operationId": "oauth2PermissionGrants.oAuth2PermissionGrant.DeleteOAuth2PermissionGrant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/scopedRoleMemberships": {
      "get": {
        "tags": [
          "scopedRoleMemberships.scopedRoleMembership"
        ],
        "summary": "Get entities from scopedRoleMemberships",
        "operationId": "scopedRoleMemberships.scopedRoleMembership.ListScopedRoleMembership",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "roleId",
                  "roleId desc",
                  "administrativeUnitId",
                  "administrativeUnitId desc",
                  "roleMemberInfo",
                  "roleMemberInfo desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "roleId",
                  "administrativeUnitId",
                  "roleMemberInfo"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of scopedRoleMembership",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.scopedRoleMembership"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "scopedRoleMemberships.scopedRoleMembership"
        ],
        "summary": "Add new entity to scopedRoleMemberships",
        "operationId": "scopedRoleMemberships.scopedRoleMembership.CreateScopedRoleMembership",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.scopedRoleMembership"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.scopedRoleMembership"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/scopedRoleMemberships/{id}": {
      "get": {
        "tags": [
          "scopedRoleMemberships.scopedRoleMembership"
        ],
        "summary": "Get entity from scopedRoleMemberships by key",
        "operationId": "scopedRoleMemberships.scopedRoleMembership.GetScopedRoleMembership",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "roleId",
                  "administrativeUnitId",
                  "roleMemberInfo"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.scopedRoleMembership"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "scopedRoleMemberships.scopedRoleMembership"
        ],
        "summary": "Update entity in scopedRoleMemberships",
        "operationId": "scopedRoleMemberships.scopedRoleMembership.UpdateScopedRoleMembership",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.scopedRoleMembership"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "scopedRoleMemberships.scopedRoleMembership"
        ],
        "summary": "Delete entity from scopedRoleMemberships",
        "operationId": "scopedRoleMemberships.scopedRoleMembership.DeleteScopedRoleMembership",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/servicePrincipals": {
      "get": {
        "tags": [
          "servicePrincipals.servicePrincipal"
        ],
        "summary": "Get entities from servicePrincipals",
        "operationId": "servicePrincipals.servicePrincipal.ListServicePrincipal",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "addIns",
                  "addIns desc",
                  "appDisplayName",
                  "appDisplayName desc",
                  "appId",
                  "appId desc",
                  "appOwnerOrganizationId",
                  "appOwnerOrganizationId desc",
                  "appRoleAssignmentRequired",
                  "appRoleAssignmentRequired desc",
                  "appRoles",
                  "appRoles desc",
                  "displayName",
                  "displayName desc",
                  "errorUrl",
                  "errorUrl desc",
                  "homepage",
                  "homepage desc",
                  "keyCredentials",
                  "keyCredentials desc",
                  "logoutUrl",
                  "logoutUrl desc",
                  "oauth2Permissions",
                  "oauth2Permissions desc",
                  "passwordCredentials",
                  "passwordCredentials desc",
                  "preferredTokenSigningKeyThumbprint",
                  "preferredTokenSigningKeyThumbprint desc",
                  "publisherName",
                  "publisherName desc",
                  "replyUrls",
                  "replyUrls desc",
                  "samlMetadataUrl",
                  "samlMetadataUrl desc",
                  "servicePrincipalNames",
                  "servicePrincipalNames desc",
                  "tags",
                  "tags desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "accountEnabled",
                  "addIns",
                  "appDisplayName",
                  "appId",
                  "appOwnerOrganizationId",
                  "appRoleAssignmentRequired",
                  "appRoles",
                  "displayName",
                  "errorUrl",
                  "homepage",
                  "keyCredentials",
                  "logoutUrl",
                  "oauth2Permissions",
                  "passwordCredentials",
                  "preferredTokenSigningKeyThumbprint",
                  "publisherName",
                  "replyUrls",
                  "samlMetadataUrl",
                  "servicePrincipalNames",
                  "tags"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of servicePrincipal",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.servicePrincipal"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "servicePrincipals.servicePrincipal"
        ],
        "summary": "Add new entity to servicePrincipals",
        "operationId": "servicePrincipals.servicePrincipal.CreateServicePrincipal",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.servicePrincipal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.servicePrincipal"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/servicePrincipals/{id}": {
      "get": {
        "tags": [
          "servicePrincipals.servicePrincipal"
        ],
        "summary": "Get entity from servicePrincipals by key",
        "operationId": "servicePrincipals.servicePrincipal.GetServicePrincipal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "accountEnabled",
                  "addIns",
                  "appDisplayName",
                  "appId",
                  "appOwnerOrganizationId",
                  "appRoleAssignmentRequired",
                  "appRoles",
                  "displayName",
                  "errorUrl",
                  "homepage",
                  "keyCredentials",
                  "logoutUrl",
                  "oauth2Permissions",
                  "passwordCredentials",
                  "preferredTokenSigningKeyThumbprint",
                  "publisherName",
                  "replyUrls",
                  "samlMetadataUrl",
                  "servicePrincipalNames",
                  "tags"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.servicePrincipal"
                }
              }
            },
            "links": {
              "appRoleAssignedTo": {
                "operationId": "servicePrincipals.Entity-GetServicePrincipal",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "appRoleAssignments": {
                "operationId": "servicePrincipals.Entity-GetServicePrincipal",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "oauth2PermissionGrants": {
                "operationId": "servicePrincipals.Entity-GetServicePrincipal",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "memberOf": {
                "operationId": "servicePrincipals.Entity-GetServicePrincipal",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "createdObjects": {
                "operationId": "servicePrincipals.Entity-GetServicePrincipal",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "licenseDetails": {
                "operationId": "servicePrincipals.Entity-GetServicePrincipal",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "owners": {
                "operationId": "servicePrincipals.Entity-GetServicePrincipal",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "ownedObjects": {
                "operationId": "servicePrincipals.Entity-GetServicePrincipal",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "policies": {
                "operationId": "servicePrincipals.Entity-GetServicePrincipal",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "synchronization": {
                "operationId": "servicePrincipals.Entity-GetServicePrincipal",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "servicePrincipals.servicePrincipal"
        ],
        "summary": "Update entity in servicePrincipals",
        "operationId": "servicePrincipals.servicePrincipal.UpdateServicePrincipal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.servicePrincipal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "servicePrincipals.servicePrincipal"
        ],
        "summary": "Delete entity from servicePrincipals",
        "operationId": "servicePrincipals.servicePrincipal.DeleteServicePrincipal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/settings": {
      "get": {
        "tags": [
          "settings.directorySetting"
        ],
        "summary": "Get entities from settings",
        "operationId": "settings.directorySetting.ListDirectorySetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "displayName",
                  "displayName desc",
                  "templateId",
                  "templateId desc",
                  "values",
                  "values desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "templateId",
                  "values"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of directorySetting",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.directorySetting"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "settings.directorySetting"
        ],
        "summary": "Add new entity to settings",
        "operationId": "settings.directorySetting.CreateDirectorySetting",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directorySetting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directorySetting"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/settings/{id}": {
      "get": {
        "tags": [
          "settings.directorySetting"
        ],
        "summary": "Get entity from settings by key",
        "operationId": "settings.directorySetting.GetDirectorySetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "templateId",
                  "values"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directorySetting"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "settings.directorySetting"
        ],
        "summary": "Update entity in settings",
        "operationId": "settings.directorySetting.UpdateDirectorySetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directorySetting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "settings.directorySetting"
        ],
        "summary": "Delete entity from settings",
        "operationId": "settings.directorySetting.DeleteDirectorySetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/subscribedSkus": {
      "get": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Get entities from subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.ListSubscribedSku",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "capabilityStatus",
                  "capabilityStatus desc",
                  "consumedUnits",
                  "consumedUnits desc",
                  "prepaidUnits",
                  "prepaidUnits desc",
                  "servicePlans",
                  "servicePlans desc",
                  "skuId",
                  "skuId desc",
                  "skuPartNumber",
                  "skuPartNumber desc",
                  "appliesTo",
                  "appliesTo desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "capabilityStatus",
                  "consumedUnits",
                  "prepaidUnits",
                  "servicePlans",
                  "skuId",
                  "skuPartNumber",
                  "appliesTo"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "String",
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of subscribedSku",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Add new entity to subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.CreateSubscribedSku",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/subscribedSkus/{id}": {
      "get": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Get entity from subscribedSkus by key",
        "operationId": "subscribedSkus.subscribedSku.GetSubscribedSku",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "capabilityStatus",
                  "consumedUnits",
                  "prepaidUnits",
                  "servicePlans",
                  "skuId",
                  "skuPartNumber",
                  "appliesTo"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Update entity in subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.UpdateSubscribedSku",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Delete entity from subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.DeleteSubscribedSku",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users.user"
        ],
        "summary": "Get entities from users",
        "operationId": "users.user.ListUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "deviceKeys",
                  "deviceKeys desc",
                  "displayName",
                  "displayName desc",
                  "employeeId",
                  "employeeId desc",
                  "givenName",
                  "givenName desc",
                  "imAddresses",
                  "imAddresses desc",
                  "jobTitle",
                  "jobTitle desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesProvisioningErrors",
                  "onPremisesProvisioningErrors desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "onPremisesDomainName",
                  "onPremisesDomainName desc",
                  "onPremisesSamAccountName",
                  "onPremisesSamAccountName desc",
                  "onPremisesUserPrincipalName",
                  "onPremisesUserPrincipalName desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "officeLocation",
                  "officeLocation desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredDataLocation",
                  "preferredDataLocation desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "refreshTokensValidFromDateTime",
                  "refreshTokensValidFromDateTime desc",
                  "showInAddressList",
                  "showInAddressList desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "aboutMe",
                  "aboutMe desc",
                  "birthday",
                  "birthday desc",
                  "hireDate",
                  "hireDate desc",
                  "interests",
                  "interests desc",
                  "mySite",
                  "mySite desc",
                  "pastProjects",
                  "pastProjects desc",
                  "preferredName",
                  "preferredName desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc",
                  "identityUserRisk",
                  "identityUserRisk desc",
                  "deviceEnrollmentLimit",
                  "deviceEnrollmentLimit desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "deviceKeys",
                  "displayName",
                  "employeeId",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "onPremisesDomainName",
                  "onPremisesSamAccountName",
                  "onPremisesUserPrincipalName",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredDataLocation",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "refreshTokensValidFromDateTime",
                  "showInAddressList",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills",
                  "identityUserRisk",
                  "deviceEnrollmentLimit"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of user",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.user"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users.user"
        ],
        "summary": "Add new entity to users",
        "operationId": "users.user.CreateUser",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users.user"
        ],
        "summary": "Get entity from users by key",
        "operationId": "users.user.GetUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "deviceKeys",
                  "displayName",
                  "employeeId",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "onPremisesDomainName",
                  "onPremisesSamAccountName",
                  "onPremisesUserPrincipalName",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredDataLocation",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "refreshTokensValidFromDateTime",
                  "showInAddressList",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills",
                  "identityUserRisk",
                  "deviceEnrollmentLimit"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            },
            "links": {
              "extensions": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "ownedDevices": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "registeredDevices": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "manager": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "directReports": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "memberOf": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "createdObjects": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "ownedObjects": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "scopedRoleMemberOf": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "licenseDetails": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "activities": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "outlook": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "messages": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "joinedGroups": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "mailFolders": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendar": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendars": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendarGroups": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendarView": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "events": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "people": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "contacts": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "contactFolders": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "inferenceClassification": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "photo": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "photos": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drive": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drives": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "insights": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "planner": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "onenote": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "managedDevices": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "managedAppRegistrations": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "devices": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "joinedTeams": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "deviceManagementTroubleshootingEvents": {
                "operationId": "users.Entity-GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users.user"
        ],
        "summary": "Update entity in users",
        "operationId": "users.user.UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "users.user"
        ],
        "summary": "Delete entity from users",
        "operationId": "users.user.DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.delta"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.0-Delta",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.user"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.assignLicense": {
      "post": {
        "tags": [
          "users.assignLicense"
        ],
        "summary": "Invoke action assignLicense",
        "operationId": "users.0-AssignLicense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addLicenses": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                    }
                  },
                  "removeLicenses": {
                    "type": "array",
                    "items": {
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.changePassword": {
      "post": {
        "tags": [
          "users.changePassword"
        ],
        "summary": "Invoke action changePassword",
        "operationId": "users.0-ChangePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "nullable": true
                  },
                  "newPassword": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.invalidateAllRefreshTokens": {
      "post": {
        "tags": [
          "users.invalidateAllRefreshTokens"
        ],
        "summary": "Invoke action invalidateAllRefreshTokens",
        "operationId": "users.0-InvalidateAllRefreshTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.sendMail": {
      "post": {
        "tags": [
          "users.sendMail"
        ],
        "summary": "Invoke action sendMail",
        "operationId": "users.0-SendMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Message": {
                    "$ref": "#/components/schemas/microsoft.graph.message"
                  },
                  "SaveToSentItems": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.findMeetingTimesOLD": {
      "post": {
        "tags": [
          "users.findMeetingTimesOLD"
        ],
        "summary": "Invoke action findMeetingTimesOLD",
        "operationId": "users.0-FindMeetingTimesOLD",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Attendees": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "LocationConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.locationConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "TimeConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "MeetingDuration": {
                    "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                    "type": "string",
                    "format": "duration",
                    "nullable": true
                  },
                  "MaxCandidates": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "IsOrganizerOptional": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "ReturnSuggestionHints": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.findMeetingTimes": {
      "post": {
        "tags": [
          "users.findMeetingTimes"
        ],
        "summary": "Invoke action findMeetingTimes",
        "operationId": "users.0-FindMeetingTimes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Attendees": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "LocationConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.locationConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "TimeConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "MeetingDuration": {
                    "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                    "type": "string",
                    "format": "duration",
                    "nullable": true
                  },
                  "MaxCandidates": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "IsOrganizerOptional": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "ReturnSuggestionReasons": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "MinimumAttendeePercentage": {
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          "-INF",
                          "INF",
                          "NaN"
                        ]
                      }
                    ],
                    "format": "double",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.getMailTips": {
      "post": {
        "tags": [
          "users.getMailTips"
        ],
        "summary": "Invoke action getMailTips",
        "operationId": "users.0-GetMailTips",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "EmailAddresses": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "MailTipsOptions": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.mailTipsType"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.reminderView(StartDateTime={StartDateTime},EndDateTime={EndDateTime})": {
      "get": {
        "tags": [
          "users.reminderView"
        ],
        "summary": "Invoke function reminderView",
        "operationId": "users.0-ReminderView",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.reminder"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.findRoomLists()": {
      "get": {
        "tags": [
          "users.findRoomLists"
        ],
        "summary": "Invoke function findRoomLists",
        "operationId": "users.0-FindRoomLists",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.findRooms(RoomList={RoomList})": {
      "get": {
        "tags": [
          "users.findRooms"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "users.0-FindRooms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoomList",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/users/{id}/microsoft.graph.findRooms()"
      ]
    },
    "/users/{id}/microsoft.graph.findRooms()": {
      "get": {
        "tags": [
          "users.findRooms"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "users.1-FindRooms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/users/{id}/microsoft.graph.findRooms(RoomList={RoomList})"
      ]
    },
    "/users/{id}/microsoft.graph.removeAllDevicesFromManagement": {
      "post": {
        "tags": [
          "users.removeAllDevicesFromManagement"
        ],
        "summary": "Invoke action removeAllDevicesFromManagement",
        "operationId": "users.0-RemoveAllDevicesFromManagement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.getManagedAppDiagnosticStatuses()": {
      "get": {
        "tags": [
          "users.getManagedAppDiagnosticStatuses"
        ],
        "summary": "Invoke function getManagedAppDiagnosticStatuses",
        "operationId": "users.0-GetManagedAppDiagnosticStatuses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.managedAppDiagnosticStatus"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.getManagedAppPolicies()": {
      "get": {
        "tags": [
          "users.getManagedAppPolicies"
        ],
        "summary": "Invoke function getManagedAppPolicies",
        "operationId": "users.0-GetManagedAppPolicies",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/users/{id}/microsoft.graph.wipeManagedAppRegistrationByDeviceTag": {
      "post": {
        "tags": [
          "users.wipeManagedAppRegistrationByDeviceTag"
        ],
        "summary": "Invoke action wipeManagedAppRegistrationByDeviceTag",
        "operationId": "users.0-WipeManagedAppRegistrationByDeviceTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deviceTag": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/policies": {
      "get": {
        "tags": [
          "policies.policy"
        ],
        "summary": "Get entities from policies",
        "operationId": "policies.policy.ListPolicy",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "alternativeIdentifier",
                  "alternativeIdentifier desc",
                  "definition",
                  "definition desc",
                  "displayName",
                  "displayName desc",
                  "isOrganizationDefault",
                  "isOrganizationDefault desc",
                  "keyCredentials",
                  "keyCredentials desc",
                  "type",
                  "type desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "alternativeIdentifier",
                  "definition",
                  "displayName",
                  "isOrganizationDefault",
                  "keyCredentials",
                  "type"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of policy",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.policy"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "policies.policy"
        ],
        "summary": "Add new entity to policies",
        "operationId": "policies.policy.CreatePolicy",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.policy"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/policies/{id}": {
      "get": {
        "tags": [
          "policies.policy"
        ],
        "summary": "Get entity from policies by key",
        "operationId": "policies.policy.GetPolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "alternativeIdentifier",
                  "definition",
                  "displayName",
                  "isOrganizationDefault",
                  "keyCredentials",
                  "type"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.policy"
                }
              }
            },
            "links": {
              "appliesTo": {
                "operationId": "policies.Entity-GetPolicy",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "policies.policy"
        ],
        "summary": "Update entity in policies",
        "operationId": "policies.policy.UpdatePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "policies.policy"
        ],
        "summary": "Delete entity from policies",
        "operationId": "policies.policy.DeletePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Get entities from contracts",
        "operationId": "contracts.contract.ListContract",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deletedDateTime",
                  "deletedDateTime desc",
                  "contractType",
                  "contractType desc",
                  "customerId",
                  "customerId desc",
                  "defaultDomainName",
                  "defaultDomainName desc",
                  "displayName",
                  "displayName desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "contractType",
                  "customerId",
                  "defaultDomainName",
                  "displayName"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of contract",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.contract"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Add new entity to contracts",
        "operationId": "contracts.contract.CreateContract",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.contract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contract"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/contracts/{id}": {
      "get": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Get entity from contracts by key",
        "operationId": "contracts.contract.GetContract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "contractType",
                  "customerId",
                  "defaultDomainName",
                  "displayName"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contract"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Update entity in contracts",
        "operationId": "contracts.contract.UpdateContract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.contract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Delete entity from contracts",
        "operationId": "contracts.contract.DeleteContract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks": {
      "get": {
        "tags": [
          "workbooks.driveItem"
        ],
        "summary": "Get entities from workbooks",
        "operationId": "workbooks.driveItem.ListDriveItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "audio",
                  "audio desc",
                  "content",
                  "content desc",
                  "cTag",
                  "cTag desc",
                  "deleted",
                  "deleted desc",
                  "file",
                  "file desc",
                  "fileSystemInfo",
                  "fileSystemInfo desc",
                  "folder",
                  "folder desc",
                  "image",
                  "image desc",
                  "location",
                  "location desc",
                  "package",
                  "package desc",
                  "photo",
                  "photo desc",
                  "publication",
                  "publication desc",
                  "remoteItem",
                  "remoteItem desc",
                  "root",
                  "root desc",
                  "searchResult",
                  "searchResult desc",
                  "shared",
                  "shared desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "size",
                  "size desc",
                  "specialFolder",
                  "specialFolder desc",
                  "video",
                  "video desc",
                  "webDavUrl",
                  "webDavUrl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "publication",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "workbook",
                  "activities",
                  "children",
                  "listItem",
                  "permissions",
                  "thumbnails",
                  "versions"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of driveItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks.driveItem"
        ],
        "summary": "Add new entity to workbooks",
        "operationId": "workbooks.driveItem.CreateDriveItem",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.driveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks/{id}": {
      "get": {
        "tags": [
          "workbooks.driveItem"
        ],
        "summary": "Get entity from workbooks by key",
        "operationId": "workbooks.driveItem.GetDriveItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "publication",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "workbook",
                  "activities",
                  "children",
                  "listItem",
                  "permissions",
                  "thumbnails",
                  "versions"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            },
            "links": {
              "workbook": {
                "operationId": "workbooks.Entity-GetDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "activities": {
                "operationId": "workbooks.Entity-GetDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "children": {
                "operationId": "workbooks.Entity-GetDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "listItem": {
                "operationId": "workbooks.Entity-GetDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "permissions": {
                "operationId": "workbooks.Entity-GetDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "thumbnails": {
                "operationId": "workbooks.Entity-GetDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "versions": {
                "operationId": "workbooks.Entity-GetDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "workbooks.driveItem"
        ],
        "summary": "Update entity in workbooks",
        "operationId": "workbooks.driveItem.UpdateDriveItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.driveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "workbooks.driveItem"
        ],
        "summary": "Delete entity from workbooks",
        "operationId": "workbooks.driveItem.DeleteDriveItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks/{id}/microsoft.graph.delta(token={token})": {
      "get": {
        "tags": [
          "workbooks.delta"
        ],
        "summary": "Invoke function delta",
        "operationId": "workbooks.0-Delta",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/workbooks/{id}/microsoft.graph.delta()"
      ]
    },
    "/workbooks/{id}/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "workbooks.delta"
        ],
        "summary": "Invoke function delta",
        "operationId": "workbooks.1-Delta",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/workbooks/{id}/microsoft.graph.delta(token={token})"
      ]
    },
    "/workbooks/{id}/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "workbooks.search"
        ],
        "summary": "Invoke function search",
        "operationId": "workbooks.0-Search",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks/{id}/microsoft.graph.checkin": {
      "post": {
        "tags": [
          "workbooks.checkin"
        ],
        "summary": "Invoke action checkin",
        "operationId": "workbooks.0-Checkin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkInAs": {
                    "type": "string",
                    "nullable": true
                  },
                  "comment": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks/{id}/microsoft.graph.checkout": {
      "post": {
        "tags": [
          "workbooks.checkout"
        ],
        "summary": "Invoke action checkout",
        "operationId": "workbooks.0-Checkout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks/{id}/microsoft.graph.copy": {
      "post": {
        "tags": [
          "workbooks.copy"
        ],
        "summary": "Invoke action copy",
        "operationId": "workbooks.0-Copy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "parentReference": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.itemReference"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks/{id}/microsoft.graph.createLink": {
      "post": {
        "tags": [
          "workbooks.createLink"
        ],
        "summary": "Invoke action createLink",
        "operationId": "workbooks.0-CreateLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string",
                    "nullable": true
                  },
                  "expirationDateTime": {
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "password": {
                    "type": "string",
                    "nullable": true
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.driveRecipient"
                        }
                      ],
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks/{id}/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "workbooks.createUploadSession"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "workbooks.0-CreateUploadSession",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItemUploadableProperties"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks/{id}/microsoft.graph.invite": {
      "post": {
        "tags": [
          "workbooks.invite"
        ],
        "summary": "Invoke action invite",
        "operationId": "workbooks.0-Invite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requireSignIn": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "sendInvitation": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/microsoft.graph.driveRecipient"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/workbooks/{id}/microsoft.graph.validatePermission": {
      "post": {
        "tags": [
          "workbooks.validatePermission"
        ],
        "summary": "Invoke action validatePermission",
        "operationId": "workbooks.0-ValidatePermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "challengeToken": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives": {
      "get": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Get entities from drives",
        "operationId": "drives.drive.ListDrive",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "driveType",
                  "driveType desc",
                  "owner",
                  "owner desc",
                  "quota",
                  "quota desc",
                  "sharePointIds",
                  "sharePointIds desc",
                  "system",
                  "system desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "activities",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of drive",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.drive"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Add new entity to drives",
        "operationId": "drives.drive.CreateDrive",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives/{id}": {
      "get": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Get entity from drives by key",
        "operationId": "drives.drive.GetDrive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "activities",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            },
            "links": {
              "activities": {
                "operationId": "drives.Entity-GetDrive",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "items": {
                "operationId": "drives.Entity-GetDrive",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "list": {
                "operationId": "drives.Entity-GetDrive",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "root": {
                "operationId": "drives.Entity-GetDrive",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "special": {
                "operationId": "drives.Entity-GetDrive",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Update entity in drives",
        "operationId": "drives.drive.UpdateDrive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Delete entity from drives",
        "operationId": "drives.drive.DeleteDrive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives/{id}/microsoft.graph.recent()": {
      "get": {
        "tags": [
          "drives.recent"
        ],
        "summary": "Invoke function recent",
        "operationId": "drives.0-Recent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives/{id}/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "drives.search"
        ],
        "summary": "Invoke function search",
        "operationId": "drives.0-Search",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drives/{id}/microsoft.graph.sharedWithMe()": {
      "get": {
        "tags": [
          "drives.sharedWithMe"
        ],
        "summary": "Invoke function sharedWithMe",
        "operationId": "drives.0-SharedWithMe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shares": {
      "get": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Get entities from shares",
        "operationId": "shares.sharedDriveItem.ListSharedDriveItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "owner",
                  "owner desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of sharedDriveItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Add new entity to shares",
        "operationId": "shares.sharedDriveItem.CreateSharedDriveItem",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shares/{id}": {
      "get": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Get entity from shares by key",
        "operationId": "shares.sharedDriveItem.GetSharedDriveItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
                }
              }
            },
            "links": {
              "driveItem": {
                "operationId": "shares.Entity-GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "items": {
                "operationId": "shares.Entity-GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "list": {
                "operationId": "shares.Entity-GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "listItem": {
                "operationId": "shares.Entity-GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "root": {
                "operationId": "shares.Entity-GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "site": {
                "operationId": "shares.Entity-GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Update entity in shares",
        "operationId": "shares.sharedDriveItem.UpdateSharedDriveItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Delete entity from shares",
        "operationId": "shares.sharedDriveItem.DeleteSharedDriveItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites": {
      "get": {
        "tags": [
          "sites.site"
        ],
        "summary": "Get entities from sites",
        "operationId": "sites.site.ListSite",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "displayName",
                  "displayName desc",
                  "root",
                  "root desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "siteCollection",
                  "siteCollection desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of site",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.site"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites.site"
        ],
        "summary": "Add new entity to sites",
        "operationId": "sites.site.CreateSite",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites/{id}": {
      "get": {
        "tags": [
          "sites.site"
        ],
        "summary": "Get entity from sites by key",
        "operationId": "sites.site.GetSite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "root",
                  "sharepointIds",
                  "siteCollection"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            },
            "links": {
              "columns": {
                "operationId": "sites.Entity-GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "contentTypes": {
                "operationId": "sites.Entity-GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drive": {
                "operationId": "sites.Entity-GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drives": {
                "operationId": "sites.Entity-GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "items": {
                "operationId": "sites.Entity-GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "lists": {
                "operationId": "sites.Entity-GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "sites": {
                "operationId": "sites.Entity-GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "onenote": {
                "operationId": "sites.Entity-GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "sites.site"
        ],
        "summary": "Update entity in sites",
        "operationId": "sites.site.UpdateSite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "sites.site"
        ],
        "summary": "Delete entity from sites",
        "operationId": "sites.site.DeleteSite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sites/{id}/microsoft.graph.getByPath(path={path})": {
      "get": {
        "tags": [
          "sites.getByPath"
        ],
        "summary": "Invoke function getByPath",
        "operationId": "sites.0-GetByPath",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.site"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Get entities from subscriptions",
        "operationId": "subscriptions.subscription.ListSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "resource",
                  "changeType",
                  "clientState",
                  "notificationUrl",
                  "expirationDateTime"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "String",
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of subscription",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.subscription"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Add new entity to subscriptions",
        "operationId": "subscriptions.subscription.CreateSubscription",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscription"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Get entity from subscriptions by key",
        "operationId": "subscriptions.subscription.GetSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "resource",
                  "changeType",
                  "clientState",
                  "notificationUrl",
                  "expirationDateTime"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscription"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Update entity in subscriptions",
        "operationId": "subscriptions.subscription.UpdateSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Delete entity from subscriptions",
        "operationId": "subscriptions.subscription.DeleteSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/identityRiskEvents": {
      "get": {
        "tags": [
          "identityRiskEvents.identityRiskEvent"
        ],
        "summary": "Get entities from identityRiskEvents",
        "operationId": "identityRiskEvents.identityRiskEvent.ListIdentityRiskEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userDisplayName",
                  "userDisplayName desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "riskEventDateTime",
                  "riskEventDateTime desc",
                  "riskEventType",
                  "riskEventType desc",
                  "riskLevel",
                  "riskLevel desc",
                  "riskEventStatus",
                  "riskEventStatus desc",
                  "closedDateTime",
                  "closedDateTime desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "userId",
                  "userId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of identityRiskEvent",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.identityRiskEvent"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "identityRiskEvents.identityRiskEvent"
        ],
        "summary": "Add new entity to identityRiskEvents",
        "operationId": "identityRiskEvents.identityRiskEvent.CreateIdentityRiskEvent",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.identityRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.identityRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/identityRiskEvents/{id}": {
      "get": {
        "tags": [
          "identityRiskEvents.identityRiskEvent"
        ],
        "summary": "Get entity from identityRiskEvents by key",
        "operationId": "identityRiskEvents.identityRiskEvent.GetIdentityRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.identityRiskEvent"
                }
              }
            },
            "links": {
              "impactedUser": {
                "operationId": "identityRiskEvents.Entity-GetIdentityRiskEvent",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "identityRiskEvents.identityRiskEvent"
        ],
        "summary": "Update entity in identityRiskEvents",
        "operationId": "identityRiskEvents.identityRiskEvent.UpdateIdentityRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.identityRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "identityRiskEvents.identityRiskEvent"
        ],
        "summary": "Delete entity from identityRiskEvents",
        "operationId": "identityRiskEvents.identityRiskEvent.DeleteIdentityRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/impossibleTravelRiskEvents": {
      "get": {
        "tags": [
          "impossibleTravelRiskEvents.impossibleTravelRiskEvent"
        ],
        "summary": "Get entities from impossibleTravelRiskEvents",
        "operationId": "impossibleTravelRiskEvents.impossibleTravelRiskEvent.ListImpossibleTravelRiskEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userDisplayName",
                  "userDisplayName desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "riskEventDateTime",
                  "riskEventDateTime desc",
                  "riskEventType",
                  "riskEventType desc",
                  "riskLevel",
                  "riskLevel desc",
                  "riskEventStatus",
                  "riskEventStatus desc",
                  "closedDateTime",
                  "closedDateTime desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "userId",
                  "userId desc",
                  "location",
                  "location desc",
                  "ipAddress",
                  "ipAddress desc",
                  "userAgent",
                  "userAgent desc",
                  "deviceInformation",
                  "deviceInformation desc",
                  "isAtypicalLocation",
                  "isAtypicalLocation desc",
                  "previousSigninDateTime",
                  "previousSigninDateTime desc",
                  "previousLocation",
                  "previousLocation desc",
                  "previousIpAddress",
                  "previousIpAddress desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId",
                  "location",
                  "ipAddress",
                  "userAgent",
                  "deviceInformation",
                  "isAtypicalLocation",
                  "previousSigninDateTime",
                  "previousLocation",
                  "previousIpAddress"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of impossibleTravelRiskEvent",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.impossibleTravelRiskEvent"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "impossibleTravelRiskEvents.impossibleTravelRiskEvent"
        ],
        "summary": "Add new entity to impossibleTravelRiskEvents",
        "operationId": "impossibleTravelRiskEvents.impossibleTravelRiskEvent.CreateImpossibleTravelRiskEvent",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.impossibleTravelRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.impossibleTravelRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/impossibleTravelRiskEvents/{id}": {
      "get": {
        "tags": [
          "impossibleTravelRiskEvents.impossibleTravelRiskEvent"
        ],
        "summary": "Get entity from impossibleTravelRiskEvents by key",
        "operationId": "impossibleTravelRiskEvents.impossibleTravelRiskEvent.GetImpossibleTravelRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId",
                  "location",
                  "ipAddress",
                  "userAgent",
                  "deviceInformation",
                  "isAtypicalLocation",
                  "previousSigninDateTime",
                  "previousLocation",
                  "previousIpAddress"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.impossibleTravelRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "impossibleTravelRiskEvents.impossibleTravelRiskEvent"
        ],
        "summary": "Update entity in impossibleTravelRiskEvents",
        "operationId": "impossibleTravelRiskEvents.impossibleTravelRiskEvent.UpdateImpossibleTravelRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.impossibleTravelRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "impossibleTravelRiskEvents.impossibleTravelRiskEvent"
        ],
        "summary": "Delete entity from impossibleTravelRiskEvents",
        "operationId": "impossibleTravelRiskEvents.impossibleTravelRiskEvent.DeleteImpossibleTravelRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/leakedCredentialsRiskEvents": {
      "get": {
        "tags": [
          "leakedCredentialsRiskEvents.leakedCredentialsRiskEvent"
        ],
        "summary": "Get entities from leakedCredentialsRiskEvents",
        "operationId": "leakedCredentialsRiskEvents.leakedCredentialsRiskEvent.ListLeakedCredentialsRiskEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userDisplayName",
                  "userDisplayName desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "riskEventDateTime",
                  "riskEventDateTime desc",
                  "riskEventType",
                  "riskEventType desc",
                  "riskLevel",
                  "riskLevel desc",
                  "riskEventStatus",
                  "riskEventStatus desc",
                  "closedDateTime",
                  "closedDateTime desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "userId",
                  "userId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of leakedCredentialsRiskEvent",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.leakedCredentialsRiskEvent"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "leakedCredentialsRiskEvents.leakedCredentialsRiskEvent"
        ],
        "summary": "Add new entity to leakedCredentialsRiskEvents",
        "operationId": "leakedCredentialsRiskEvents.leakedCredentialsRiskEvent.CreateLeakedCredentialsRiskEvent",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.leakedCredentialsRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.leakedCredentialsRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/leakedCredentialsRiskEvents/{id}": {
      "get": {
        "tags": [
          "leakedCredentialsRiskEvents.leakedCredentialsRiskEvent"
        ],
        "summary": "Get entity from leakedCredentialsRiskEvents by key",
        "operationId": "leakedCredentialsRiskEvents.leakedCredentialsRiskEvent.GetLeakedCredentialsRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.leakedCredentialsRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "leakedCredentialsRiskEvents.leakedCredentialsRiskEvent"
        ],
        "summary": "Update entity in leakedCredentialsRiskEvents",
        "operationId": "leakedCredentialsRiskEvents.leakedCredentialsRiskEvent.UpdateLeakedCredentialsRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.leakedCredentialsRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "leakedCredentialsRiskEvents.leakedCredentialsRiskEvent"
        ],
        "summary": "Delete entity from leakedCredentialsRiskEvents",
        "operationId": "leakedCredentialsRiskEvents.leakedCredentialsRiskEvent.DeleteLeakedCredentialsRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/anonymousIpRiskEvents": {
      "get": {
        "tags": [
          "anonymousIpRiskEvents.anonymousIpRiskEvent"
        ],
        "summary": "Get entities from anonymousIpRiskEvents",
        "operationId": "anonymousIpRiskEvents.anonymousIpRiskEvent.ListAnonymousIpRiskEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userDisplayName",
                  "userDisplayName desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "riskEventDateTime",
                  "riskEventDateTime desc",
                  "riskEventType",
                  "riskEventType desc",
                  "riskLevel",
                  "riskLevel desc",
                  "riskEventStatus",
                  "riskEventStatus desc",
                  "closedDateTime",
                  "closedDateTime desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "userId",
                  "userId desc",
                  "location",
                  "location desc",
                  "ipAddress",
                  "ipAddress desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId",
                  "location",
                  "ipAddress"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of anonymousIpRiskEvent",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.anonymousIpRiskEvent"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "anonymousIpRiskEvents.anonymousIpRiskEvent"
        ],
        "summary": "Add new entity to anonymousIpRiskEvents",
        "operationId": "anonymousIpRiskEvents.anonymousIpRiskEvent.CreateAnonymousIpRiskEvent",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.anonymousIpRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.anonymousIpRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/anonymousIpRiskEvents/{id}": {
      "get": {
        "tags": [
          "anonymousIpRiskEvents.anonymousIpRiskEvent"
        ],
        "summary": "Get entity from anonymousIpRiskEvents by key",
        "operationId": "anonymousIpRiskEvents.anonymousIpRiskEvent.GetAnonymousIpRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId",
                  "location",
                  "ipAddress"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.anonymousIpRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "anonymousIpRiskEvents.anonymousIpRiskEvent"
        ],
        "summary": "Update entity in anonymousIpRiskEvents",
        "operationId": "anonymousIpRiskEvents.anonymousIpRiskEvent.UpdateAnonymousIpRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.anonymousIpRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "anonymousIpRiskEvents.anonymousIpRiskEvent"
        ],
        "summary": "Delete entity from anonymousIpRiskEvents",
        "operationId": "anonymousIpRiskEvents.anonymousIpRiskEvent.DeleteAnonymousIpRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/suspiciousIpRiskEvents": {
      "get": {
        "tags": [
          "suspiciousIpRiskEvents.suspiciousIpRiskEvent"
        ],
        "summary": "Get entities from suspiciousIpRiskEvents",
        "operationId": "suspiciousIpRiskEvents.suspiciousIpRiskEvent.ListSuspiciousIpRiskEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userDisplayName",
                  "userDisplayName desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "riskEventDateTime",
                  "riskEventDateTime desc",
                  "riskEventType",
                  "riskEventType desc",
                  "riskLevel",
                  "riskLevel desc",
                  "riskEventStatus",
                  "riskEventStatus desc",
                  "closedDateTime",
                  "closedDateTime desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "userId",
                  "userId desc",
                  "location",
                  "location desc",
                  "ipAddress",
                  "ipAddress desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId",
                  "location",
                  "ipAddress"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of suspiciousIpRiskEvent",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.suspiciousIpRiskEvent"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "suspiciousIpRiskEvents.suspiciousIpRiskEvent"
        ],
        "summary": "Add new entity to suspiciousIpRiskEvents",
        "operationId": "suspiciousIpRiskEvents.suspiciousIpRiskEvent.CreateSuspiciousIpRiskEvent",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.suspiciousIpRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.suspiciousIpRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/suspiciousIpRiskEvents/{id}": {
      "get": {
        "tags": [
          "suspiciousIpRiskEvents.suspiciousIpRiskEvent"
        ],
        "summary": "Get entity from suspiciousIpRiskEvents by key",
        "operationId": "suspiciousIpRiskEvents.suspiciousIpRiskEvent.GetSuspiciousIpRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId",
                  "location",
                  "ipAddress"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.suspiciousIpRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "suspiciousIpRiskEvents.suspiciousIpRiskEvent"
        ],
        "summary": "Update entity in suspiciousIpRiskEvents",
        "operationId": "suspiciousIpRiskEvents.suspiciousIpRiskEvent.UpdateSuspiciousIpRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.suspiciousIpRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "suspiciousIpRiskEvents.suspiciousIpRiskEvent"
        ],
        "summary": "Delete entity from suspiciousIpRiskEvents",
        "operationId": "suspiciousIpRiskEvents.suspiciousIpRiskEvent.DeleteSuspiciousIpRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/unfamiliarLocationRiskEvents": {
      "get": {
        "tags": [
          "unfamiliarLocationRiskEvents.unfamiliarLocationRiskEvent"
        ],
        "summary": "Get entities from unfamiliarLocationRiskEvents",
        "operationId": "unfamiliarLocationRiskEvents.unfamiliarLocationRiskEvent.ListUnfamiliarLocationRiskEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userDisplayName",
                  "userDisplayName desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "riskEventDateTime",
                  "riskEventDateTime desc",
                  "riskEventType",
                  "riskEventType desc",
                  "riskLevel",
                  "riskLevel desc",
                  "riskEventStatus",
                  "riskEventStatus desc",
                  "closedDateTime",
                  "closedDateTime desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "userId",
                  "userId desc",
                  "location",
                  "location desc",
                  "ipAddress",
                  "ipAddress desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId",
                  "location",
                  "ipAddress"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of unfamiliarLocationRiskEvent",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.unfamiliarLocationRiskEvent"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "unfamiliarLocationRiskEvents.unfamiliarLocationRiskEvent"
        ],
        "summary": "Add new entity to unfamiliarLocationRiskEvents",
        "operationId": "unfamiliarLocationRiskEvents.unfamiliarLocationRiskEvent.CreateUnfamiliarLocationRiskEvent",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.unfamiliarLocationRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.unfamiliarLocationRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/unfamiliarLocationRiskEvents/{id}": {
      "get": {
        "tags": [
          "unfamiliarLocationRiskEvents.unfamiliarLocationRiskEvent"
        ],
        "summary": "Get entity from unfamiliarLocationRiskEvents by key",
        "operationId": "unfamiliarLocationRiskEvents.unfamiliarLocationRiskEvent.GetUnfamiliarLocationRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId",
                  "location",
                  "ipAddress"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.unfamiliarLocationRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "unfamiliarLocationRiskEvents.unfamiliarLocationRiskEvent"
        ],
        "summary": "Update entity in unfamiliarLocationRiskEvents",
        "operationId": "unfamiliarLocationRiskEvents.unfamiliarLocationRiskEvent.UpdateUnfamiliarLocationRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.unfamiliarLocationRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "unfamiliarLocationRiskEvents.unfamiliarLocationRiskEvent"
        ],
        "summary": "Delete entity from unfamiliarLocationRiskEvents",
        "operationId": "unfamiliarLocationRiskEvents.unfamiliarLocationRiskEvent.DeleteUnfamiliarLocationRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/malwareRiskEvents": {
      "get": {
        "tags": [
          "malwareRiskEvents.malwareRiskEvent"
        ],
        "summary": "Get entities from malwareRiskEvents",
        "operationId": "malwareRiskEvents.malwareRiskEvent.ListMalwareRiskEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userDisplayName",
                  "userDisplayName desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "riskEventDateTime",
                  "riskEventDateTime desc",
                  "riskEventType",
                  "riskEventType desc",
                  "riskLevel",
                  "riskLevel desc",
                  "riskEventStatus",
                  "riskEventStatus desc",
                  "closedDateTime",
                  "closedDateTime desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "userId",
                  "userId desc",
                  "location",
                  "location desc",
                  "ipAddress",
                  "ipAddress desc",
                  "deviceInformation",
                  "deviceInformation desc",
                  "malwareName",
                  "malwareName desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId",
                  "location",
                  "ipAddress",
                  "deviceInformation",
                  "malwareName"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of malwareRiskEvent",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.malwareRiskEvent"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "malwareRiskEvents.malwareRiskEvent"
        ],
        "summary": "Add new entity to malwareRiskEvents",
        "operationId": "malwareRiskEvents.malwareRiskEvent.CreateMalwareRiskEvent",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.malwareRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.malwareRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/malwareRiskEvents/{id}": {
      "get": {
        "tags": [
          "malwareRiskEvents.malwareRiskEvent"
        ],
        "summary": "Get entity from malwareRiskEvents by key",
        "operationId": "malwareRiskEvents.malwareRiskEvent.GetMalwareRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userDisplayName",
                  "userPrincipalName",
                  "riskEventDateTime",
                  "riskEventType",
                  "riskLevel",
                  "riskEventStatus",
                  "closedDateTime",
                  "createdDateTime",
                  "userId",
                  "location",
                  "ipAddress",
                  "deviceInformation",
                  "malwareName"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "impactedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.malwareRiskEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "malwareRiskEvents.malwareRiskEvent"
        ],
        "summary": "Update entity in malwareRiskEvents",
        "operationId": "malwareRiskEvents.malwareRiskEvent.UpdateMalwareRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.malwareRiskEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "malwareRiskEvents.malwareRiskEvent"
        ],
        "summary": "Delete entity from malwareRiskEvents",
        "operationId": "malwareRiskEvents.malwareRiskEvent.DeleteMalwareRiskEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedRoles": {
      "get": {
        "tags": [
          "privilegedRoles.privilegedRole"
        ],
        "summary": "Get entities from privilegedRoles",
        "operationId": "privilegedRoles.privilegedRole.ListPrivilegedRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "name",
                  "name desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "name"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "settings",
                  "assignments",
                  "summary"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of privilegedRole",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.privilegedRole"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "privilegedRoles.privilegedRole"
        ],
        "summary": "Add new entity to privilegedRoles",
        "operationId": "privilegedRoles.privilegedRole.CreatePrivilegedRole",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.privilegedRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.privilegedRole"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedRoles/{id}": {
      "get": {
        "tags": [
          "privilegedRoles.privilegedRole"
        ],
        "summary": "Get entity from privilegedRoles by key",
        "operationId": "privilegedRoles.privilegedRole.GetPrivilegedRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "name"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "settings",
                  "assignments",
                  "summary"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.privilegedRole"
                }
              }
            },
            "links": {
              "settings": {
                "operationId": "privilegedRoles.Entity-GetPrivilegedRole",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "assignments": {
                "operationId": "privilegedRoles.Entity-GetPrivilegedRole",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "summary": {
                "operationId": "privilegedRoles.Entity-GetPrivilegedRole",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedRoles.privilegedRole"
        ],
        "summary": "Update entity in privilegedRoles",
        "operationId": "privilegedRoles.privilegedRole.UpdatePrivilegedRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.privilegedRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "privilegedRoles.privilegedRole"
        ],
        "summary": "Delete entity from privilegedRoles",
        "operationId": "privilegedRoles.privilegedRole.DeletePrivilegedRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedRoles/{id}/microsoft.graph.selfActivate": {
      "post": {
        "tags": [
          "privilegedRoles.selfActivate"
        ],
        "summary": "Invoke action selfActivate",
        "operationId": "privilegedRoles.0-SelfActivate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "nullable": true
                  },
                  "duration": {
                    "type": "string",
                    "nullable": true
                  },
                  "ticketNumber": {
                    "type": "string",
                    "nullable": true
                  },
                  "ticketSystem": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedRoles/{id}/microsoft.graph.selfDeactivate": {
      "post": {
        "tags": [
          "privilegedRoles.selfDeactivate"
        ],
        "summary": "Invoke action selfDeactivate",
        "operationId": "privilegedRoles.0-SelfDeactivate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedRoleAssignments": {
      "get": {
        "tags": [
          "privilegedRoleAssignments.privilegedRoleAssignment"
        ],
        "summary": "Get entities from privilegedRoleAssignments",
        "operationId": "privilegedRoleAssignments.privilegedRoleAssignment.ListPrivilegedRoleAssignment",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userId",
                  "userId desc",
                  "roleId",
                  "roleId desc",
                  "isElevated",
                  "isElevated desc",
                  "expirationDateTime",
                  "expirationDateTime desc",
                  "resultMessage",
                  "resultMessage desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userId",
                  "roleId",
                  "isElevated",
                  "expirationDateTime",
                  "resultMessage"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "roleInfo"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of privilegedRoleAssignment",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.privilegedRoleAssignment"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "privilegedRoleAssignments.privilegedRoleAssignment"
        ],
        "summary": "Add new entity to privilegedRoleAssignments",
        "operationId": "privilegedRoleAssignments.privilegedRoleAssignment.CreatePrivilegedRoleAssignment",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.privilegedRoleAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.privilegedRoleAssignment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedRoleAssignments/{id}": {
      "get": {
        "tags": [
          "privilegedRoleAssignments.privilegedRoleAssignment"
        ],
        "summary": "Get entity from privilegedRoleAssignments by key",
        "operationId": "privilegedRoleAssignments.privilegedRoleAssignment.GetPrivilegedRoleAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userId",
                  "roleId",
                  "isElevated",
                  "expirationDateTime",
                  "resultMessage"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "roleInfo"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.privilegedRoleAssignment"
                }
              }
            },
            "links": {
              "roleInfo": {
                "operationId": "privilegedRoleAssignments.Entity-GetPrivilegedRoleAssignment",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedRoleAssignments.privilegedRoleAssignment"
        ],
        "summary": "Update entity in privilegedRoleAssignments",
        "operationId": "privilegedRoleAssignments.privilegedRoleAssignment.UpdatePrivilegedRoleAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.privilegedRoleAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "privilegedRoleAssignments.privilegedRoleAssignment"
        ],
        "summary": "Delete entity from privilegedRoleAssignments",
        "operationId": "privilegedRoleAssignments.privilegedRoleAssignment.DeletePrivilegedRoleAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedRoleAssignments/microsoft.graph.my()": {
      "get": {
        "tags": [
          "privilegedRoleAssignments.my"
        ],
        "summary": "Invoke function my",
        "operationId": "privilegedRoleAssignments.0-My",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.privilegedRoleAssignment"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedRoleAssignments/{id}/microsoft.graph.makePermanent": {
      "post": {
        "tags": [
          "privilegedRoleAssignments.makePermanent"
        ],
        "summary": "Invoke action makePermanent",
        "operationId": "privilegedRoleAssignments.0-MakePermanent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "nullable": true
                  },
                  "ticketNumber": {
                    "type": "string",
                    "nullable": true
                  },
                  "ticketSystem": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedRoleAssignments/{id}/microsoft.graph.makeEligible": {
      "post": {
        "tags": [
          "privilegedRoleAssignments.makeEligible"
        ],
        "summary": "Invoke action makeEligible",
        "operationId": "privilegedRoleAssignments.0-MakeEligible",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedOperationEvents": {
      "get": {
        "tags": [
          "privilegedOperationEvents.privilegedOperationEvent"
        ],
        "summary": "Get entities from privilegedOperationEvents",
        "operationId": "privilegedOperationEvents.privilegedOperationEvent.ListPrivilegedOperationEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userId",
                  "userId desc",
                  "userName",
                  "userName desc",
                  "userMail",
                  "userMail desc",
                  "roleId",
                  "roleId desc",
                  "roleName",
                  "roleName desc",
                  "expirationDateTime",
                  "expirationDateTime desc",
                  "creationDateTime",
                  "creationDateTime desc",
                  "requestorId",
                  "requestorId desc",
                  "requestorName",
                  "requestorName desc",
                  "tenantId",
                  "tenantId desc",
                  "requestType",
                  "requestType desc",
                  "additionalInformation",
                  "additionalInformation desc",
                  "referenceKey",
                  "referenceKey desc",
                  "referenceSystem",
                  "referenceSystem desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userId",
                  "userName",
                  "userMail",
                  "roleId",
                  "roleName",
                  "expirationDateTime",
                  "creationDateTime",
                  "requestorId",
                  "requestorName",
                  "tenantId",
                  "requestType",
                  "additionalInformation",
                  "referenceKey",
                  "referenceSystem"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of privilegedOperationEvent",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.privilegedOperationEvent"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "privilegedOperationEvents.privilegedOperationEvent"
        ],
        "summary": "Add new entity to privilegedOperationEvents",
        "operationId": "privilegedOperationEvents.privilegedOperationEvent.CreatePrivilegedOperationEvent",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.privilegedOperationEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.privilegedOperationEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedOperationEvents/{id}": {
      "get": {
        "tags": [
          "privilegedOperationEvents.privilegedOperationEvent"
        ],
        "summary": "Get entity from privilegedOperationEvents by key",
        "operationId": "privilegedOperationEvents.privilegedOperationEvent.GetPrivilegedOperationEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userId",
                  "userName",
                  "userMail",
                  "roleId",
                  "roleName",
                  "expirationDateTime",
                  "creationDateTime",
                  "requestorId",
                  "requestorName",
                  "tenantId",
                  "requestType",
                  "additionalInformation",
                  "referenceKey",
                  "referenceSystem"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.privilegedOperationEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedOperationEvents.privilegedOperationEvent"
        ],
        "summary": "Update entity in privilegedOperationEvents",
        "operationId": "privilegedOperationEvents.privilegedOperationEvent.UpdatePrivilegedOperationEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.privilegedOperationEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "privilegedOperationEvents.privilegedOperationEvent"
        ],
        "summary": "Delete entity from privilegedOperationEvents",
        "operationId": "privilegedOperationEvents.privilegedOperationEvent.DeletePrivilegedOperationEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus": {
      "get": {
        "tags": [
          "privilegedSignupStatus.privilegedSignupStatus"
        ],
        "summary": "Get entities from privilegedSignupStatus",
        "operationId": "privilegedSignupStatus.privilegedSignupStatus.ListPrivilegedSignupStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "isRegistered",
                  "isRegistered desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "isRegistered",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of privilegedSignupStatus",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.privilegedSignupStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "privilegedSignupStatus.privilegedSignupStatus"
        ],
        "summary": "Add new entity to privilegedSignupStatus",
        "operationId": "privilegedSignupStatus.privilegedSignupStatus.CreatePrivilegedSignupStatus",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.privilegedSignupStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.privilegedSignupStatus"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus/{id}": {
      "get": {
        "tags": [
          "privilegedSignupStatus.privilegedSignupStatus"
        ],
        "summary": "Get entity from privilegedSignupStatus by key",
        "operationId": "privilegedSignupStatus.privilegedSignupStatus.GetPrivilegedSignupStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "isRegistered",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.privilegedSignupStatus"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedSignupStatus.privilegedSignupStatus"
        ],
        "summary": "Update entity in privilegedSignupStatus",
        "operationId": "privilegedSignupStatus.privilegedSignupStatus.UpdatePrivilegedSignupStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.privilegedSignupStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "privilegedSignupStatus.privilegedSignupStatus"
        ],
        "summary": "Delete entity from privilegedSignupStatus",
        "operationId": "privilegedSignupStatus.privilegedSignupStatus.DeletePrivilegedSignupStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus/microsoft.graph.signUp": {
      "post": {
        "tags": [
          "privilegedSignupStatus.signUp"
        ],
        "summary": "Invoke action signUp",
        "operationId": "privilegedSignupStatus.0-SignUp",
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus/microsoft.graph.isSignedUp()": {
      "get": {
        "tags": [
          "privilegedSignupStatus.isSignedUp"
        ],
        "summary": "Invoke function isSignedUp",
        "operationId": "privilegedSignupStatus.0-IsSignedUp",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus/microsoft.graph.canSignUp()": {
      "get": {
        "tags": [
          "privilegedSignupStatus.canSignUp"
        ],
        "summary": "Invoke function canSignUp",
        "operationId": "privilegedSignupStatus.0-CanSignUp",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedSignupStatus/microsoft.graph.completeSetup": {
      "post": {
        "tags": [
          "privilegedSignupStatus.completeSetup"
        ],
        "summary": "Invoke action completeSetup",
        "operationId": "privilegedSignupStatus.0-CompleteSetup",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantSetupInfo": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.tenantSetupInfo"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedApproval": {
      "get": {
        "tags": [
          "privilegedApproval.privilegedApproval"
        ],
        "summary": "Get entities from privilegedApproval",
        "operationId": "privilegedApproval.privilegedApproval.ListPrivilegedApproval",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userId",
                  "userId desc",
                  "roleId",
                  "roleId desc",
                  "approvalType",
                  "approvalType desc",
                  "approvalState",
                  "approvalState desc",
                  "approvalDuration",
                  "approvalDuration desc",
                  "requestorReason",
                  "requestorReason desc",
                  "approverReason",
                  "approverReason desc",
                  "startDateTime",
                  "startDateTime desc",
                  "endDateTime",
                  "endDateTime desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userId",
                  "roleId",
                  "approvalType",
                  "approvalState",
                  "approvalDuration",
                  "requestorReason",
                  "approverReason",
                  "startDateTime",
                  "endDateTime"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "roleInfo"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of privilegedApproval",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.privilegedApproval"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "privilegedApproval.privilegedApproval"
        ],
        "summary": "Add new entity to privilegedApproval",
        "operationId": "privilegedApproval.privilegedApproval.CreatePrivilegedApproval",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.privilegedApproval"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.privilegedApproval"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedApproval/{id}": {
      "get": {
        "tags": [
          "privilegedApproval.privilegedApproval"
        ],
        "summary": "Get entity from privilegedApproval by key",
        "operationId": "privilegedApproval.privilegedApproval.GetPrivilegedApproval",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userId",
                  "roleId",
                  "approvalType",
                  "approvalState",
                  "approvalDuration",
                  "requestorReason",
                  "approverReason",
                  "startDateTime",
                  "endDateTime"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "roleInfo"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.privilegedApproval"
                }
              }
            },
            "links": {
              "roleInfo": {
                "operationId": "privilegedApproval.Entity-GetPrivilegedApproval",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "privilegedApproval.privilegedApproval"
        ],
        "summary": "Update entity in privilegedApproval",
        "operationId": "privilegedApproval.privilegedApproval.UpdatePrivilegedApproval",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.privilegedApproval"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "privilegedApproval.privilegedApproval"
        ],
        "summary": "Delete entity from privilegedApproval",
        "operationId": "privilegedApproval.privilegedApproval.DeletePrivilegedApproval",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/privilegedApproval/microsoft.graph.myRequests()": {
      "get": {
        "tags": [
          "privilegedApproval.myRequests"
        ],
        "summary": "Invoke function myRequests",
        "operationId": "privilegedApproval.0-MyRequests",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.privilegedApproval"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/invitations": {
      "get": {
        "tags": [
          "invitations.invitation"
        ],
        "summary": "Get entities from invitations",
        "operationId": "invitations.invitation.ListInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "invitedUserDisplayName",
                  "invitedUserDisplayName desc",
                  "invitedUserType",
                  "invitedUserType desc",
                  "invitedUserEmailAddress",
                  "invitedUserEmailAddress desc",
                  "invitedUserMessageInfo",
                  "invitedUserMessageInfo desc",
                  "sendInvitationMessage",
                  "sendInvitationMessage desc",
                  "inviteRedirectUrl",
                  "inviteRedirectUrl desc",
                  "inviteRedeemUrl",
                  "inviteRedeemUrl desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "invitedUserDisplayName",
                  "invitedUserType",
                  "invitedUserEmailAddress",
                  "invitedUserMessageInfo",
                  "sendInvitationMessage",
                  "inviteRedirectUrl",
                  "inviteRedeemUrl",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "invitedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of invitation",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.invitation"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "invitations.invitation"
        ],
        "summary": "Add new entity to invitations",
        "operationId": "invitations.invitation.CreateInvitation",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "String",
            "schema": { }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "String",
            "schema": { }
          }
        ],
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.invitation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.invitation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/invitations/{id}": {
      "get": {
        "tags": [
          "invitations.invitation"
        ],
        "summary": "Get entity from invitations by key",
        "operationId": "invitations.invitation.GetInvitation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "invitedUserDisplayName",
                  "invitedUserType",
                  "invitedUserEmailAddress",
                  "invitedUserMessageInfo",
                  "sendInvitationMessage",
                  "inviteRedirectUrl",
                  "inviteRedeemUrl",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "invitedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.invitation"
                }
              }
            },
            "links": {
              "invitedUser": {
                "operationId": "invitations.Entity-GetInvitation",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "invitations.invitation"
        ],
        "summary": "Update entity in invitations",
        "operationId": "invitations.invitation.UpdateInvitation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.invitation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "invitations.invitation"
        ],
        "summary": "Delete entity from invitations",
        "operationId": "invitations.invitation.DeleteInvitation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/appConfigurationGroupAssignments": {
      "get": {
        "tags": [
          "appConfigurationGroupAssignments.mdmAppConfigGroupAssignment"
        ],
        "summary": "Get entities from appConfigurationGroupAssignments",
        "operationId": "appConfigurationGroupAssignments.mdmAppConfigGroupAssignment.ListMdmAppConfigGroupAssignment",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "appConfiguration",
                  "appConfiguration desc",
                  "targetGroupId",
                  "targetGroupId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "appConfiguration",
                  "targetGroupId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of mdmAppConfigGroupAssignment",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.mdmAppConfigGroupAssignment"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "appConfigurationGroupAssignments.mdmAppConfigGroupAssignment"
        ],
        "summary": "Add new entity to appConfigurationGroupAssignments",
        "operationId": "appConfigurationGroupAssignments.mdmAppConfigGroupAssignment.CreateMdmAppConfigGroupAssignment",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.mdmAppConfigGroupAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.mdmAppConfigGroupAssignment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/appConfigurationGroupAssignments/{id}": {
      "get": {
        "tags": [
          "appConfigurationGroupAssignments.mdmAppConfigGroupAssignment"
        ],
        "summary": "Get entity from appConfigurationGroupAssignments by key",
        "operationId": "appConfigurationGroupAssignments.mdmAppConfigGroupAssignment.GetMdmAppConfigGroupAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "appConfiguration",
                  "targetGroupId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.mdmAppConfigGroupAssignment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "appConfigurationGroupAssignments.mdmAppConfigGroupAssignment"
        ],
        "summary": "Update entity in appConfigurationGroupAssignments",
        "operationId": "appConfigurationGroupAssignments.mdmAppConfigGroupAssignment.UpdateMdmAppConfigGroupAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.mdmAppConfigGroupAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "appConfigurationGroupAssignments.mdmAppConfigGroupAssignment"
        ],
        "summary": "Delete entity from appConfigurationGroupAssignments",
        "operationId": "appConfigurationGroupAssignments.mdmAppConfigGroupAssignment.DeleteMdmAppConfigGroupAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/assignments": {
      "get": {
        "tags": [
          "assignments.managedDeviceMobileAppConfigurationAssignment"
        ],
        "summary": "Get entities from assignments",
        "operationId": "assignments.managedDeviceMobileAppConfigurationAssignment.ListManagedDeviceMobileAppConfigurationAssignment",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "target",
                  "target desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "target"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of managedDeviceMobileAppConfigurationAssignment",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "assignments.managedDeviceMobileAppConfigurationAssignment"
        ],
        "summary": "Add new entity to assignments",
        "operationId": "assignments.managedDeviceMobileAppConfigurationAssignment.CreateManagedDeviceMobileAppConfigurationAssignment",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/assignments/{id}": {
      "get": {
        "tags": [
          "assignments.managedDeviceMobileAppConfigurationAssignment"
        ],
        "summary": "Get entity from assignments by key",
        "operationId": "assignments.managedDeviceMobileAppConfigurationAssignment.GetManagedDeviceMobileAppConfigurationAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "target"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "assignments.managedDeviceMobileAppConfigurationAssignment"
        ],
        "summary": "Update entity in assignments",
        "operationId": "assignments.managedDeviceMobileAppConfigurationAssignment.UpdateManagedDeviceMobileAppConfigurationAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "assignments.managedDeviceMobileAppConfigurationAssignment"
        ],
        "summary": "Delete entity from assignments",
        "operationId": "assignments.managedDeviceMobileAppConfigurationAssignment.DeleteManagedDeviceMobileAppConfigurationAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/vppTokens": {
      "get": {
        "tags": [
          "vppTokens.vppToken"
        ],
        "summary": "Get entities from vppTokens",
        "operationId": "vppTokens.vppToken.ListVppToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "organizationName",
                  "organizationName desc",
                  "vppTokenAccountType",
                  "vppTokenAccountType desc",
                  "appleId",
                  "appleId desc",
                  "expirationDateTime",
                  "expirationDateTime desc",
                  "lastSyncDateTime",
                  "lastSyncDateTime desc",
                  "token",
                  "token desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "state",
                  "state desc",
                  "tokenActionResults",
                  "tokenActionResults desc",
                  "lastSyncStatus",
                  "lastSyncStatus desc",
                  "automaticallyUpdateApps",
                  "automaticallyUpdateApps desc",
                  "countryOrRegion",
                  "countryOrRegion desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "organizationName",
                  "vppTokenAccountType",
                  "appleId",
                  "expirationDateTime",
                  "lastSyncDateTime",
                  "token",
                  "lastModifiedDateTime",
                  "state",
                  "tokenActionResults",
                  "lastSyncStatus",
                  "automaticallyUpdateApps",
                  "countryOrRegion"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of vppToken",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.vppToken"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "vppTokens.vppToken"
        ],
        "summary": "Add new entity to vppTokens",
        "operationId": "vppTokens.vppToken.CreateVppToken",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.vppToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.vppToken"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/vppTokens/{id}": {
      "get": {
        "tags": [
          "vppTokens.vppToken"
        ],
        "summary": "Get entity from vppTokens by key",
        "operationId": "vppTokens.vppToken.GetVppToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "organizationName",
                  "vppTokenAccountType",
                  "appleId",
                  "expirationDateTime",
                  "lastSyncDateTime",
                  "token",
                  "lastModifiedDateTime",
                  "state",
                  "tokenActionResults",
                  "lastSyncStatus",
                  "automaticallyUpdateApps",
                  "countryOrRegion"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.vppToken"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "vppTokens.vppToken"
        ],
        "summary": "Update entity in vppTokens",
        "operationId": "vppTokens.vppToken.UpdateVppToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.vppToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "vppTokens.vppToken"
        ],
        "summary": "Delete entity from vppTokens",
        "operationId": "vppTokens.vppToken.DeleteVppToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/vppTokens/{id}/microsoft.graph.syncLicenses": {
      "post": {
        "tags": [
          "vppTokens.syncLicenses"
        ],
        "summary": "Invoke action syncLicenses",
        "operationId": "vppTokens.0-SyncLicenses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/vppTokens/{id}/microsoft.graph.revokeLicenses": {
      "post": {
        "tags": [
          "vppTokens.revokeLicenses"
        ],
        "summary": "Invoke action revokeLicenses",
        "operationId": "vppTokens.0-RevokeLicenses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/enrollmentConfigurationAssignment": {
      "get": {
        "tags": [
          "enrollmentConfigurationAssignment.enrollmentConfigurationAssignment"
        ],
        "summary": "Get entities from enrollmentConfigurationAssignment",
        "operationId": "enrollmentConfigurationAssignment.enrollmentConfigurationAssignment.ListEnrollmentConfigurationAssignment",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "target",
                  "target desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "target"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of enrollmentConfigurationAssignment",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.enrollmentConfigurationAssignment"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "enrollmentConfigurationAssignment.enrollmentConfigurationAssignment"
        ],
        "summary": "Add new entity to enrollmentConfigurationAssignment",
        "operationId": "enrollmentConfigurationAssignment.enrollmentConfigurationAssignment.CreateEnrollmentConfigurationAssignment",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.enrollmentConfigurationAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.enrollmentConfigurationAssignment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/enrollmentConfigurationAssignment/{id}": {
      "get": {
        "tags": [
          "enrollmentConfigurationAssignment.enrollmentConfigurationAssignment"
        ],
        "summary": "Get entity from enrollmentConfigurationAssignment by key",
        "operationId": "enrollmentConfigurationAssignment.enrollmentConfigurationAssignment.GetEnrollmentConfigurationAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "target"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.enrollmentConfigurationAssignment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "enrollmentConfigurationAssignment.enrollmentConfigurationAssignment"
        ],
        "summary": "Update entity in enrollmentConfigurationAssignment",
        "operationId": "enrollmentConfigurationAssignment.enrollmentConfigurationAssignment.UpdateEnrollmentConfigurationAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.enrollmentConfigurationAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "enrollmentConfigurationAssignment.enrollmentConfigurationAssignment"
        ],
        "summary": "Delete entity from enrollmentConfigurationAssignment",
        "operationId": "enrollmentConfigurationAssignment.enrollmentConfigurationAssignment.DeleteEnrollmentConfigurationAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/commands": {
      "get": {
        "tags": [
          "commands.command"
        ],
        "summary": "Get entities from commands",
        "operationId": "commands.command.ListCommand",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "Status",
                  "Status desc",
                  "Type",
                  "Type desc",
                  "AppServiceName",
                  "AppServiceName desc",
                  "PackageFamilyName",
                  "PackageFamilyName desc",
                  "Error",
                  "Error desc",
                  "Payload",
                  "Payload desc",
                  "PermissionTicket",
                  "PermissionTicket desc",
                  "PostBackUri",
                  "PostBackUri desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "Status",
                  "Type",
                  "AppServiceName",
                  "PackageFamilyName",
                  "Error",
                  "Payload",
                  "PermissionTicket",
                  "PostBackUri"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "responsepayload"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of command",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.command"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "commands.command"
        ],
        "summary": "Add new entity to commands",
        "operationId": "commands.command.CreateCommand",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.command"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.command"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/commands/{id}": {
      "get": {
        "tags": [
          "commands.command"
        ],
        "summary": "Get entity from commands by key",
        "operationId": "commands.command.GetCommand",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "Status",
                  "Type",
                  "AppServiceName",
                  "PackageFamilyName",
                  "Error",
                  "Payload",
                  "PermissionTicket",
                  "PostBackUri"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "responsepayload"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.command"
                }
              }
            },
            "links": {
              "responsepayload": {
                "operationId": "commands.Entity-GetCommand",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "commands.command"
        ],
        "summary": "Update entity in commands",
        "operationId": "commands.command.UpdateCommand",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.command"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "commands.command"
        ],
        "summary": "Delete entity from commands",
        "operationId": "commands.command.DeleteCommand",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/payloadResponse": {
      "get": {
        "tags": [
          "payloadResponse.payloadResponse"
        ],
        "summary": "Get entities from payloadResponse",
        "operationId": "payloadResponse.payloadResponse.ListPayloadResponse",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of payloadResponse",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.payloadResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "payloadResponse.payloadResponse"
        ],
        "summary": "Add new entity to payloadResponse",
        "operationId": "payloadResponse.payloadResponse.CreatePayloadResponse",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.payloadResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.payloadResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/payloadResponse/{id}": {
      "get": {
        "tags": [
          "payloadResponse.payloadResponse"
        ],
        "summary": "Get entity from payloadResponse by key",
        "operationId": "payloadResponse.payloadResponse.GetPayloadResponse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.payloadResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "payloadResponse.payloadResponse"
        ],
        "summary": "Update entity in payloadResponse",
        "operationId": "payloadResponse.payloadResponse.UpdatePayloadResponse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.payloadResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "payloadResponse.payloadResponse"
        ],
        "summary": "Delete entity from payloadResponse",
        "operationId": "payloadResponse.payloadResponse.DeletePayloadResponse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/team": {
      "get": {
        "tags": [
          "team.team"
        ],
        "summary": "Get entities from team",
        "operationId": "team.team.ListTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "memberSettings",
                  "memberSettings desc",
                  "messagingSettings",
                  "messagingSettings desc",
                  "funSettings",
                  "funSettings desc",
                  "guestSettings",
                  "guestSettings desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "memberSettings",
                  "messagingSettings",
                  "funSettings",
                  "guestSettings"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "channels"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of team",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.team"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "team.team"
        ],
        "summary": "Add new entity to team",
        "operationId": "team.team.CreateTeam",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.team"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.team"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/team/{id}": {
      "get": {
        "tags": [
          "team.team"
        ],
        "summary": "Get entity from team by key",
        "operationId": "team.team.GetTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "memberSettings",
                  "messagingSettings",
                  "funSettings",
                  "guestSettings"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "channels"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.team"
                }
              }
            },
            "links": {
              "channels": {
                "operationId": "team.Entity-GetTeam",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "team.team"
        ],
        "summary": "Update entity in team",
        "operationId": "team.team.UpdateTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.team"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "team.team"
        ],
        "summary": "Delete entity from team",
        "operationId": "team.team.DeleteTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/channels": {
      "get": {
        "tags": [
          "channels.channel"
        ],
        "summary": "Get entities from channels",
        "operationId": "channels.channel.ListChannel",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "displayName",
                  "displayName desc",
                  "description",
                  "description desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "description"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "chatThreads"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of channel",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.channel"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "channels.channel"
        ],
        "summary": "Add new entity to channels",
        "operationId": "channels.channel.CreateChannel",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.channel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.channel"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/channels/{id}": {
      "get": {
        "tags": [
          "channels.channel"
        ],
        "summary": "Get entity from channels by key",
        "operationId": "channels.channel.GetChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "description"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "chatThreads"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.channel"
                }
              }
            },
            "links": {
              "chatThreads": {
                "operationId": "channels.Entity-GetChannel",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "channels.channel"
        ],
        "summary": "Update entity in channels",
        "operationId": "channels.channel.UpdateChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.channel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "channels.channel"
        ],
        "summary": "Delete entity from channels",
        "operationId": "channels.channel.DeleteChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/chatThreads": {
      "get": {
        "tags": [
          "chatThreads.chatThread"
        ],
        "summary": "Get entities from chatThreads",
        "operationId": "chatThreads.chatThread.ListChatThread",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "chatMessages",
                  "rootMessage"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of chatThread",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.chatThread"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "chatThreads.chatThread"
        ],
        "summary": "Add new entity to chatThreads",
        "operationId": "chatThreads.chatThread.CreateChatThread",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.chatThread"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.chatThread"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/chatThreads/{id}": {
      "get": {
        "tags": [
          "chatThreads.chatThread"
        ],
        "summary": "Get entity from chatThreads by key",
        "operationId": "chatThreads.chatThread.GetChatThread",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "chatMessages",
                  "rootMessage"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.chatThread"
                }
              }
            },
            "links": {
              "chatMessages": {
                "operationId": "chatThreads.Entity-GetChatThread",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "rootMessage": {
                "operationId": "chatThreads.Entity-GetChatThread",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "chatThreads.chatThread"
        ],
        "summary": "Update entity in chatThreads",
        "operationId": "chatThreads.chatThread.UpdateChatThread",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.chatThread"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "chatThreads.chatThread"
        ],
        "summary": "Delete entity from chatThreads",
        "operationId": "chatThreads.chatThread.DeleteChatThread",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groupLifecyclePolicies": {
      "get": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Get entities from groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.ListGroupLifecyclePolicy",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "groupLifetimeInDays",
                  "groupLifetimeInDays desc",
                  "managedGroupTypes",
                  "managedGroupTypes desc",
                  "alternateNotificationEmails",
                  "alternateNotificationEmails desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "groupLifetimeInDays",
                  "managedGroupTypes",
                  "alternateNotificationEmails"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of groupLifecyclePolicy",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Add new entity to groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.CreateGroupLifecyclePolicy",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groupLifecyclePolicies/{id}": {
      "get": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Get entity from groupLifecyclePolicies by key",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.GetGroupLifecyclePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "groupLifetimeInDays",
                  "managedGroupTypes",
                  "alternateNotificationEmails"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Update entity in groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.UpdateGroupLifecyclePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Delete entity from groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.DeleteGroupLifecyclePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groupLifecyclePolicies/microsoft.graph.renewGroup": {
      "post": {
        "tags": [
          "groupLifecyclePolicies.renewGroup"
        ],
        "summary": "Invoke action renewGroup",
        "operationId": "groupLifecyclePolicies.0-RenewGroup",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groupLifecyclePolicies/{id}/microsoft.graph.addGroup": {
      "post": {
        "tags": [
          "groupLifecyclePolicies.addGroup"
        ],
        "summary": "Invoke action addGroup",
        "operationId": "groupLifecyclePolicies.0-AddGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/groupLifecyclePolicies/{id}/microsoft.graph.removeGroup": {
      "post": {
        "tags": [
          "groupLifecyclePolicies.removeGroup"
        ],
        "summary": "Invoke action removeGroup",
        "operationId": "groupLifecyclePolicies.0-RemoveGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/identityProviders": {
      "get": {
        "tags": [
          "identityProviders.IdentityProvider"
        ],
        "summary": "Get entities from identityProviders",
        "operationId": "identityProviders.IdentityProvider.ListIdentityProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "type",
                  "type desc",
                  "name",
                  "name desc",
                  "clientId",
                  "clientId desc",
                  "clientSecret",
                  "clientSecret desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "type",
                  "name",
                  "clientId",
                  "clientSecret"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of IdentityProvider",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.IdentityProvider"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "identityProviders.IdentityProvider"
        ],
        "summary": "Add new entity to identityProviders",
        "operationId": "identityProviders.IdentityProvider.CreateIdentityProvider",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.IdentityProvider"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.IdentityProvider"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/identityProviders/{id}": {
      "get": {
        "tags": [
          "identityProviders.IdentityProvider"
        ],
        "summary": "Get entity from identityProviders by key",
        "operationId": "identityProviders.IdentityProvider.GetIdentityProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "type",
                  "name",
                  "clientId",
                  "clientSecret"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.IdentityProvider"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "identityProviders.IdentityProvider"
        ],
        "summary": "Update entity in identityProviders",
        "operationId": "identityProviders.IdentityProvider.UpdateIdentityProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.IdentityProvider"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "identityProviders.IdentityProvider"
        ],
        "summary": "Delete entity from identityProviders",
        "operationId": "identityProviders.IdentityProvider.DeleteIdentityProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/functions": {
      "get": {
        "tags": [
          "functions.attributeMappingFunctionSchema"
        ],
        "summary": "Get entities from functions",
        "operationId": "functions.attributeMappingFunctionSchema.ListAttributeMappingFunctionSchema",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "parameters",
                  "parameters desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "parameters"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of attributeMappingFunctionSchema",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.attributeMappingFunctionSchema"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "functions.attributeMappingFunctionSchema"
        ],
        "summary": "Add new entity to functions",
        "operationId": "functions.attributeMappingFunctionSchema.CreateAttributeMappingFunctionSchema",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.attributeMappingFunctionSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attributeMappingFunctionSchema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/functions/{id}": {
      "get": {
        "tags": [
          "functions.attributeMappingFunctionSchema"
        ],
        "summary": "Get entity from functions by key",
        "operationId": "functions.attributeMappingFunctionSchema.GetAttributeMappingFunctionSchema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "parameters"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attributeMappingFunctionSchema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "functions.attributeMappingFunctionSchema"
        ],
        "summary": "Update entity in functions",
        "operationId": "functions.attributeMappingFunctionSchema.UpdateAttributeMappingFunctionSchema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.attributeMappingFunctionSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "functions.attributeMappingFunctionSchema"
        ],
        "summary": "Delete entity from functions",
        "operationId": "functions.attributeMappingFunctionSchema.DeleteAttributeMappingFunctionSchema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/filterOperators": {
      "get": {
        "tags": [
          "filterOperators.filterOperatorSchema"
        ],
        "summary": "Get entities from filterOperators",
        "operationId": "filterOperators.filterOperatorSchema.ListFilterOperatorSchema",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "arity",
                  "arity desc",
                  "multivaluedComparisonType",
                  "multivaluedComparisonType desc",
                  "supportedAttributeTypes",
                  "supportedAttributeTypes desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "arity",
                  "multivaluedComparisonType",
                  "supportedAttributeTypes"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of filterOperatorSchema",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.filterOperatorSchema"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "filterOperators.filterOperatorSchema"
        ],
        "summary": "Add new entity to filterOperators",
        "operationId": "filterOperators.filterOperatorSchema.CreateFilterOperatorSchema",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.filterOperatorSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.filterOperatorSchema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/filterOperators/{id}": {
      "get": {
        "tags": [
          "filterOperators.filterOperatorSchema"
        ],
        "summary": "Get entity from filterOperators by key",
        "operationId": "filterOperators.filterOperatorSchema.GetFilterOperatorSchema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "arity",
                  "multivaluedComparisonType",
                  "supportedAttributeTypes"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.filterOperatorSchema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "filterOperators.filterOperatorSchema"
        ],
        "summary": "Update entity in filterOperators",
        "operationId": "filterOperators.filterOperatorSchema.UpdateFilterOperatorSchema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.filterOperatorSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "filterOperators.filterOperatorSchema"
        ],
        "summary": "Delete entity from filterOperators",
        "operationId": "filterOperators.filterOperatorSchema.DeleteFilterOperatorSchema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": [
          "me.user"
        ],
        "summary": "Get me",
        "operationId": "me.user.GetUser",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedDateTime",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyName",
                  "country",
                  "department",
                  "deviceKeys",
                  "displayName",
                  "employeeId",
                  "givenName",
                  "imAddresses",
                  "jobTitle",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "onPremisesDomainName",
                  "onPremisesSamAccountName",
                  "onPremisesUserPrincipalName",
                  "passwordPolicies",
                  "passwordProfile",
                  "officeLocation",
                  "postalCode",
                  "preferredDataLocation",
                  "preferredLanguage",
                  "provisionedPlans",
                  "proxyAddresses",
                  "refreshTokensValidFromDateTime",
                  "showInAddressList",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "mailboxSettings",
                  "aboutMe",
                  "birthday",
                  "hireDate",
                  "interests",
                  "mySite",
                  "pastProjects",
                  "preferredName",
                  "responsibilities",
                  "schools",
                  "skills",
                  "identityUserRisk",
                  "deviceEnrollmentLimit"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me.user"
        ],
        "summary": "Update me",
        "operationId": "me.user.UpdateUser",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.assignLicense": {
      "post": {
        "tags": [
          "me.assignLicense"
        ],
        "summary": "Invoke action assignLicense",
        "operationId": "me.0-AssignLicense",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addLicenses": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                    }
                  },
                  "removeLicenses": {
                    "type": "array",
                    "items": {
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.changePassword": {
      "post": {
        "tags": [
          "me.changePassword"
        ],
        "summary": "Invoke action changePassword",
        "operationId": "me.0-ChangePassword",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "nullable": true
                  },
                  "newPassword": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.invalidateAllRefreshTokens": {
      "post": {
        "tags": [
          "me.invalidateAllRefreshTokens"
        ],
        "summary": "Invoke action invalidateAllRefreshTokens",
        "operationId": "me.0-InvalidateAllRefreshTokens",
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.sendMail": {
      "post": {
        "tags": [
          "me.sendMail"
        ],
        "summary": "Invoke action sendMail",
        "operationId": "me.0-SendMail",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Message": {
                    "$ref": "#/components/schemas/microsoft.graph.message"
                  },
                  "SaveToSentItems": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.findMeetingTimesOLD": {
      "post": {
        "tags": [
          "me.findMeetingTimesOLD"
        ],
        "summary": "Invoke action findMeetingTimesOLD",
        "operationId": "me.0-FindMeetingTimesOLD",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Attendees": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "LocationConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.locationConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "TimeConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "MeetingDuration": {
                    "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                    "type": "string",
                    "format": "duration",
                    "nullable": true
                  },
                  "MaxCandidates": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "IsOrganizerOptional": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "ReturnSuggestionHints": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.findMeetingTimes": {
      "post": {
        "tags": [
          "me.findMeetingTimes"
        ],
        "summary": "Invoke action findMeetingTimes",
        "operationId": "me.0-FindMeetingTimes",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Attendees": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "LocationConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.locationConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "TimeConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "MeetingDuration": {
                    "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                    "type": "string",
                    "format": "duration",
                    "nullable": true
                  },
                  "MaxCandidates": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "IsOrganizerOptional": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "ReturnSuggestionReasons": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "MinimumAttendeePercentage": {
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          "-INF",
                          "INF",
                          "NaN"
                        ]
                      }
                    ],
                    "format": "double",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.getMailTips": {
      "post": {
        "tags": [
          "me.getMailTips"
        ],
        "summary": "Invoke action getMailTips",
        "operationId": "me.0-GetMailTips",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "EmailAddresses": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "MailTipsOptions": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.mailTipsType"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.reminderView(StartDateTime={StartDateTime},EndDateTime={EndDateTime})": {
      "get": {
        "tags": [
          "me.reminderView"
        ],
        "summary": "Invoke function reminderView",
        "operationId": "me.0-ReminderView",
        "parameters": [
          {
            "name": "StartDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.reminder"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.findRoomLists()": {
      "get": {
        "tags": [
          "me.findRoomLists"
        ],
        "summary": "Invoke function findRoomLists",
        "operationId": "me.0-FindRoomLists",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.findRooms(RoomList={RoomList})": {
      "get": {
        "tags": [
          "me.findRooms"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "me.0-FindRooms",
        "parameters": [
          {
            "name": "RoomList",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/me/microsoft.graph.findRooms()"
      ]
    },
    "/me/microsoft.graph.findRooms()": {
      "get": {
        "tags": [
          "me.findRooms"
        ],
        "summary": "Invoke function findRooms",
        "operationId": "me.1-FindRooms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/me/microsoft.graph.findRooms(RoomList={RoomList})"
      ]
    },
    "/me/microsoft.graph.removeAllDevicesFromManagement": {
      "post": {
        "tags": [
          "me.removeAllDevicesFromManagement"
        ],
        "summary": "Invoke action removeAllDevicesFromManagement",
        "operationId": "me.0-RemoveAllDevicesFromManagement",
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.getManagedAppDiagnosticStatuses()": {
      "get": {
        "tags": [
          "me.getManagedAppDiagnosticStatuses"
        ],
        "summary": "Invoke function getManagedAppDiagnosticStatuses",
        "operationId": "me.0-GetManagedAppDiagnosticStatuses",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.managedAppDiagnosticStatus"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.getManagedAppPolicies()": {
      "get": {
        "tags": [
          "me.getManagedAppPolicies"
        ],
        "summary": "Invoke function getManagedAppPolicies",
        "operationId": "me.0-GetManagedAppPolicies",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.wipeManagedAppRegistrationByDeviceTag": {
      "post": {
        "tags": [
          "me.wipeManagedAppRegistrationByDeviceTag"
        ],
        "summary": "Invoke action wipeManagedAppRegistrationByDeviceTag",
        "operationId": "me.0-WipeManagedAppRegistrationByDeviceTag",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deviceTag": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/directory": {
      "get": {
        "tags": [
          "directory.directory"
        ],
        "summary": "Get directory",
        "operationId": "directory.directory.GetDirectory",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "deletedItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directory"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directory.directory"
        ],
        "summary": "Update directory",
        "operationId": "directory.directory.UpdateDirectory",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive": {
      "get": {
        "tags": [
          "drive.drive"
        ],
        "summary": "Get drive",
        "operationId": "drive.drive.GetDrive",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharePointIds",
                  "system"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "activities",
                  "items",
                  "list",
                  "root",
                  "special"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drive.drive"
        ],
        "summary": "Update drive",
        "operationId": "drive.drive.UpdateDrive",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.recent()": {
      "get": {
        "tags": [
          "drive.recent"
        ],
        "summary": "Invoke function recent",
        "operationId": "drive.0-Recent",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "drive.search"
        ],
        "summary": "Invoke function search",
        "operationId": "drive.0-Search",
        "parameters": [
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.sharedWithMe()": {
      "get": {
        "tags": [
          "drive.sharedWithMe"
        ],
        "summary": "Invoke function sharedWithMe",
        "operationId": "drive.0-SharedWithMe",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/planner": {
      "get": {
        "tags": [
          "planner.planner"
        ],
        "summary": "The **planner** resource is available at the root of the graph.",
        "operationId": "planner.planner.GetPlanner",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "tasks",
                  "plans",
                  "buckets"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.planner"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "planner.planner"
        ],
        "summary": "Update planner",
        "operationId": "planner.planner.UpdatePlanner",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.planner"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/deviceManagement": {
      "get": {
        "tags": [
          "deviceManagement.deviceManagement"
        ],
        "summary": "Get deviceManagement",
        "operationId": "deviceManagement.deviceManagement.GetDeviceManagement",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "subscriptionState",
                  "subscriptions",
                  "adminConsent",
                  "deviceProtectionOverview",
                  "settings",
                  "maximumDepTokens",
                  "intuneAccountId",
                  "intuneBrand"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "termsAndConditions",
                  "androidForWorkSettings",
                  "androidForWorkAppConfigurationSchemas",
                  "androidForWorkEnrollmentProfiles",
                  "enrollmentProfiles",
                  "importedDeviceIdentities",
                  "importedAppleDeviceIdentities",
                  "remoteActionAudits",
                  "applePushNotificationCertificate",
                  "deviceManagementScripts",
                  "managedDeviceOverview",
                  "detectedApps",
                  "managedDevices",
                  "windowsMalwareInformation",
                  "deviceConfigurations",
                  "deviceCompliancePolicies",
                  "deviceSetupConfigurations",
                  "softwareUpdateStatusSummary",
                  "deviceCompliancePolicyDeviceStateSummary",
                  "deviceCompliancePolicySettingStateSummaries",
                  "deviceConfigurationDeviceStateSummaries",
                  "deviceConfigurationUserStateSummaries",
                  "cartToClassAssociations",
                  "iosUpdateStatuses",
                  "ndesConnectors",
                  "deviceCategories",
                  "exchangeConnectors",
                  "deviceEnrollmentConfigurations",
                  "exchangeOnPremisesPolicy",
                  "exchangeOnPremisesPolicies",
                  "conditionalAccessSettings",
                  "mobileThreatDefenseConnectors",
                  "deviceManagementPartners",
                  "depOnboardingSettings",
                  "notificationMessageTemplates",
                  "roleDefinitions",
                  "roleAssignments",
                  "resourceOperations",
                  "telecomExpenseManagementPartners",
                  "windowsAutopilotSettings",
                  "windowsAutopilotDeviceIdentities",
                  "windowsAutopilotDeploymentProfiles",
                  "remoteAssistancePartners",
                  "windowsInformationProtectionAppLearningSummaries",
                  "auditEvents",
                  "troubleshootingEvents"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagement"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceManagement.deviceManagement"
        ],
        "summary": "Update deviceManagement",
        "operationId": "deviceManagement.deviceManagement.UpdateDeviceManagement",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.deviceManagement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/deviceManagement/microsoft.graph.verifyWindowsEnrollmentAutoDiscovery(domainName={domainName})": {
      "get": {
        "tags": [
          "deviceManagement.verifyWindowsEnrollmentAutoDiscovery"
        ],
        "summary": "Invoke function verifyWindowsEnrollmentAutoDiscovery",
        "operationId": "deviceManagement.0-VerifyWindowsEnrollmentAutoDiscovery",
        "parameters": [
          {
            "name": "domainName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/deviceManagement/microsoft.graph.getEffectivePermissions()": {
      "get": {
        "tags": [
          "deviceManagement.getEffectivePermissions"
        ],
        "summary": "Invoke function getEffectivePermissions",
        "operationId": "deviceManagement.0-GetEffectivePermissions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/deviceManagement/microsoft.graph.getEffectivePermissions(scope={scope})"
      ]
    },
    "/deviceManagement/microsoft.graph.getEffectivePermissions(scope={scope})": {
      "get": {
        "tags": [
          "deviceManagement.getEffectivePermissions"
        ],
        "summary": "Invoke function getEffectivePermissions",
        "operationId": "deviceManagement.1-GetEffectivePermissions",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.rolePermission"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/deviceManagement/microsoft.graph.getEffectivePermissions()"
      ]
    },
    "/deviceAppManagement": {
      "get": {
        "tags": [
          "deviceAppManagement.deviceAppManagement"
        ],
        "summary": "Get deviceAppManagement",
        "operationId": "deviceAppManagement.deviceAppManagement.GetDeviceAppManagement",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "microsoftStoreForBusinessLastSuccessfulSyncDateTime",
                  "isEnabledForMicrosoftStoreForBusiness",
                  "microsoftStoreForBusinessLanguage",
                  "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "windowsManagementApp",
                  "mobileApps",
                  "mobileAppCategories",
                  "enterpriseCodeSigningCertificates",
                  "iosLobAppProvisioningConfigurations",
                  "symantecCodeSigningCertificate",
                  "mobileAppConfigurations",
                  "sideLoadingKeys",
                  "vppTokens",
                  "managedAppPolicies",
                  "iosManagedAppProtections",
                  "androidManagedAppProtections",
                  "defaultManagedAppProtections",
                  "targetedManagedAppConfigurations",
                  "mdmWindowsInformationProtectionPolicies",
                  "windowsInformationProtectionPolicies",
                  "managedAppRegistrations",
                  "managedAppStatuses",
                  "managedEBooks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceAppManagement"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "deviceAppManagement.deviceAppManagement"
        ],
        "summary": "Update deviceAppManagement",
        "operationId": "deviceAppManagement.deviceAppManagement.UpdateDeviceAppManagement",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.deviceAppManagement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/deviceAppManagement/microsoft.graph.syncMicrosoftStoreForBusinessApps": {
      "post": {
        "tags": [
          "deviceAppManagement.syncMicrosoftStoreForBusinessApps"
        ],
        "summary": "Invoke action syncMicrosoftStoreForBusinessApps",
        "operationId": "deviceAppManagement.0-SyncMicrosoftStoreForBusinessApps",
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "reports.reportRoot"
        ],
        "summary": "Get reports",
        "operationId": "reports.reportRoot.GetReportRoot",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.reportRoot"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "reports.reportRoot"
        ],
        "summary": "Update reports",
        "operationId": "reports.reportRoot.UpdateReportRoot",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.reportRoot"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.deviceConfigurationUserActivity()": {
      "get": {
        "tags": [
          "reports.deviceConfigurationUserActivity"
        ],
        "summary": "Invoke function deviceConfigurationUserActivity",
        "operationId": "reports.0-DeviceConfigurationUserActivity",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.deviceConfigurationDeviceActivity()": {
      "get": {
        "tags": [
          "reports.deviceConfigurationDeviceActivity"
        ],
        "summary": "Invoke function deviceConfigurationDeviceActivity",
        "operationId": "reports.0-DeviceConfigurationDeviceActivity",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActivationsUserDetail()": {
      "get": {
        "tags": [
          "reports.getOffice365ActivationsUserDetail"
        ],
        "summary": "Invoke function getOffice365ActivationsUserDetail",
        "operationId": "reports.0-GetOffice365ActivationsUserDetail",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365ActivationsUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActivationCounts()": {
      "get": {
        "tags": [
          "reports.getOffice365ActivationCounts"
        ],
        "summary": "Invoke function getOffice365ActivationCounts",
        "operationId": "reports.0-GetOffice365ActivationCounts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365ActivationCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActivationsUserCounts()": {
      "get": {
        "tags": [
          "reports.getOffice365ActivationsUserCounts"
        ],
        "summary": "Invoke function getOffice365ActivationsUserCounts",
        "operationId": "reports.0-GetOffice365ActivationsUserCounts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365ActivationsUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActiveUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getOffice365ActiveUserDetail"
        ],
        "summary": "Invoke function getOffice365ActiveUserDetail",
        "operationId": "reports.0-GetOffice365ActiveUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365ActiveUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getOffice365ActiveUserDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getOffice365ActiveUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getOffice365ActiveUserDetail"
        ],
        "summary": "Invoke function getOffice365ActiveUserDetail",
        "operationId": "reports.1-GetOffice365ActiveUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365ActiveUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getOffice365ActiveUserDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getOffice365ServicesUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getOffice365ServicesUserCounts"
        ],
        "summary": "Invoke function getOffice365ServicesUserCounts",
        "operationId": "reports.0-GetOffice365ServicesUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365ServicesUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365ActiveUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getOffice365ActiveUserCounts"
        ],
        "summary": "Invoke function getOffice365ActiveUserCounts",
        "operationId": "reports.0-GetOffice365ActiveUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365ActiveUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getOffice365GroupsActivityDetail"
        ],
        "summary": "Invoke function getOffice365GroupsActivityDetail",
        "operationId": "reports.0-GetOffice365GroupsActivityDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365GroupsActivityDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getOffice365GroupsActivityDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getOffice365GroupsActivityDetail"
        ],
        "summary": "Invoke function getOffice365GroupsActivityDetail",
        "operationId": "reports.1-GetOffice365GroupsActivityDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365GroupsActivityDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getOffice365GroupsActivityDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getOffice365GroupsActivityCounts"
        ],
        "summary": "Invoke function getOffice365GroupsActivityCounts",
        "operationId": "reports.0-GetOffice365GroupsActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365GroupsActivityCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityGroupCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getOffice365GroupsActivityGroupCounts"
        ],
        "summary": "Invoke function getOffice365GroupsActivityGroupCounts",
        "operationId": "reports.0-GetOffice365GroupsActivityGroupCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365GroupsActivityGroupCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityStorage(period={period})": {
      "get": {
        "tags": [
          "reports.getOffice365GroupsActivityStorage"
        ],
        "summary": "Invoke function getOffice365GroupsActivityStorage",
        "operationId": "reports.0-GetOffice365GroupsActivityStorage",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365GroupsActivityStorage"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOffice365GroupsActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getOffice365GroupsActivityFileCounts"
        ],
        "summary": "Invoke function getOffice365GroupsActivityFileCounts",
        "operationId": "reports.0-GetOffice365GroupsActivityFileCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.office365GroupsActivityFileCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getEmailActivityUserDetail"
        ],
        "summary": "Invoke function getEmailActivityUserDetail",
        "operationId": "reports.0-GetEmailActivityUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getEmailActivityUserDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getEmailActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getEmailActivityUserDetail"
        ],
        "summary": "Invoke function getEmailActivityUserDetail",
        "operationId": "reports.1-GetEmailActivityUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getEmailActivityUserDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getEmailActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getEmailActivityCounts"
        ],
        "summary": "Invoke function getEmailActivityCounts",
        "operationId": "reports.0-GetEmailActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailActivitySummary"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getEmailActivityUserCounts"
        ],
        "summary": "Invoke function getEmailActivityUserCounts",
        "operationId": "reports.0-GetEmailActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailActivitySummary"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getEmailAppUsageUserDetail"
        ],
        "summary": "Invoke function getEmailAppUsageUserDetail",
        "operationId": "reports.0-GetEmailAppUsageUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAppUsageUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getEmailAppUsageUserDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getEmailAppUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getEmailAppUsageUserDetail"
        ],
        "summary": "Invoke function getEmailAppUsageUserDetail",
        "operationId": "reports.1-GetEmailAppUsageUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAppUsageUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getEmailAppUsageUserDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getEmailAppUsageAppsUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getEmailAppUsageAppsUserCounts"
        ],
        "summary": "Invoke function getEmailAppUsageAppsUserCounts",
        "operationId": "reports.0-GetEmailAppUsageAppsUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAppUsageAppsUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getEmailAppUsageUserCounts"
        ],
        "summary": "Invoke function getEmailAppUsageUserCounts",
        "operationId": "reports.0-GetEmailAppUsageUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAppUsageUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getEmailAppUsageVersionsUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getEmailAppUsageVersionsUserCounts"
        ],
        "summary": "Invoke function getEmailAppUsageVersionsUserCounts",
        "operationId": "reports.0-GetEmailAppUsageVersionsUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.emailAppUsageVersionsUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getMailboxUsageDetail"
        ],
        "summary": "Invoke function getMailboxUsageDetail",
        "operationId": "reports.0-GetMailboxUsageDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.mailboxUsageDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageMailboxCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getMailboxUsageMailboxCounts"
        ],
        "summary": "Invoke function getMailboxUsageMailboxCounts",
        "operationId": "reports.0-GetMailboxUsageMailboxCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.mailboxUsageMailboxCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageQuotaStatusMailboxCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getMailboxUsageQuotaStatusMailboxCounts"
        ],
        "summary": "Invoke function getMailboxUsageQuotaStatusMailboxCounts",
        "operationId": "reports.0-GetMailboxUsageQuotaStatusMailboxCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.mailboxUsageQuotaStatusMailboxCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getMailboxUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports.getMailboxUsageStorage"
        ],
        "summary": "Invoke function getMailboxUsageStorage",
        "operationId": "reports.0-GetMailboxUsageStorage",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.mailboxUsageStorage"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getOneDriveActivityUserDetail"
        ],
        "summary": "Invoke function getOneDriveActivityUserDetail",
        "operationId": "reports.0-GetOneDriveActivityUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.oneDriveActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getOneDriveActivityUserDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getOneDriveActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getOneDriveActivityUserDetail"
        ],
        "summary": "Invoke function getOneDriveActivityUserDetail",
        "operationId": "reports.1-GetOneDriveActivityUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.oneDriveActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getOneDriveActivityUserDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getOneDriveActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getOneDriveActivityUserCounts"
        ],
        "summary": "Invoke function getOneDriveActivityUserCounts",
        "operationId": "reports.0-GetOneDriveActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.siteActivitySummary"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getOneDriveActivityFileCounts"
        ],
        "summary": "Invoke function getOneDriveActivityFileCounts",
        "operationId": "reports.0-GetOneDriveActivityFileCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.siteActivitySummary"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageAccountDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getOneDriveUsageAccountDetail"
        ],
        "summary": "Invoke function getOneDriveUsageAccountDetail",
        "operationId": "reports.0-GetOneDriveUsageAccountDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.oneDriveUsageAccountDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getOneDriveUsageAccountDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getOneDriveUsageAccountDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getOneDriveUsageAccountDetail"
        ],
        "summary": "Invoke function getOneDriveUsageAccountDetail",
        "operationId": "reports.1-GetOneDriveUsageAccountDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.oneDriveUsageAccountDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getOneDriveUsageAccountDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getOneDriveUsageAccountCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getOneDriveUsageAccountCounts"
        ],
        "summary": "Invoke function getOneDriveUsageAccountCounts",
        "operationId": "reports.0-GetOneDriveUsageAccountCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.oneDriveUsageAccountCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getOneDriveUsageFileCounts"
        ],
        "summary": "Invoke function getOneDriveUsageFileCounts",
        "operationId": "reports.0-GetOneDriveUsageFileCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.oneDriveUsageFileCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getOneDriveUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports.getOneDriveUsageStorage"
        ],
        "summary": "Invoke function getOneDriveUsageStorage",
        "operationId": "reports.0-GetOneDriveUsageStorage",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.siteUsageStorage"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getSharePointActivityUserDetail"
        ],
        "summary": "Invoke function getSharePointActivityUserDetail",
        "operationId": "reports.0-GetSharePointActivityUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.sharePointActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getSharePointActivityUserDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getSharePointActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getSharePointActivityUserDetail"
        ],
        "summary": "Invoke function getSharePointActivityUserDetail",
        "operationId": "reports.1-GetSharePointActivityUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.sharePointActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getSharePointActivityUserDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getSharePointActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSharePointActivityFileCounts"
        ],
        "summary": "Invoke function getSharePointActivityFileCounts",
        "operationId": "reports.0-GetSharePointActivityFileCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.siteActivitySummary"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSharePointActivityUserCounts"
        ],
        "summary": "Invoke function getSharePointActivityUserCounts",
        "operationId": "reports.0-GetSharePointActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.sharePointActivityUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointActivityPages(period={period})": {
      "get": {
        "tags": [
          "reports.getSharePointActivityPages"
        ],
        "summary": "Invoke function getSharePointActivityPages",
        "operationId": "reports.0-GetSharePointActivityPages",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.sharePointActivityPages"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getSharePointSiteUsageDetail"
        ],
        "summary": "Invoke function getSharePointSiteUsageDetail",
        "operationId": "reports.0-GetSharePointSiteUsageDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.sharePointSiteUsageDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getSharePointSiteUsageDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getSharePointSiteUsageDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getSharePointSiteUsageDetail"
        ],
        "summary": "Invoke function getSharePointSiteUsageDetail",
        "operationId": "reports.1-GetSharePointSiteUsageDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.sharePointSiteUsageDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getSharePointSiteUsageDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getSharePointSiteUsageFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSharePointSiteUsageFileCounts"
        ],
        "summary": "Invoke function getSharePointSiteUsageFileCounts",
        "operationId": "reports.0-GetSharePointSiteUsageFileCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.sharePointSiteUsageFileCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageSiteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSharePointSiteUsageSiteCounts"
        ],
        "summary": "Invoke function getSharePointSiteUsageSiteCounts",
        "operationId": "reports.0-GetSharePointSiteUsageSiteCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.sharePointSiteUsageSiteCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports.getSharePointSiteUsageStorage"
        ],
        "summary": "Invoke function getSharePointSiteUsageStorage",
        "operationId": "reports.0-GetSharePointSiteUsageStorage",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.siteUsageStorage"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSharePointSiteUsagePages(period={period})": {
      "get": {
        "tags": [
          "reports.getSharePointSiteUsagePages"
        ],
        "summary": "Invoke function getSharePointSiteUsagePages",
        "operationId": "reports.0-GetSharePointSiteUsagePages",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.sharePointSiteUsagePages"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessActivityUserDetail"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserDetail",
        "operationId": "reports.0-GetSkypeForBusinessActivityUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getSkypeForBusinessActivityUserDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessActivityUserDetail"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserDetail",
        "operationId": "reports.1-GetSkypeForBusinessActivityUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getSkypeForBusinessActivityUserDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessActivityCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityCounts",
        "operationId": "reports.0-GetSkypeForBusinessActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessActivityCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessActivityUserCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserCounts",
        "operationId": "reports.0-GetSkypeForBusinessActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessActivityUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessPeerToPeerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessPeerToPeerActivityCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityCounts",
        "operationId": "reports.0-GetSkypeForBusinessPeerToPeerActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessPeerToPeerActivityCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessPeerToPeerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessPeerToPeerActivityUserCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityUserCounts",
        "operationId": "reports.0-GetSkypeForBusinessPeerToPeerActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessPeerToPeerActivityUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessPeerToPeerActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessPeerToPeerActivityMinuteCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityMinuteCounts",
        "operationId": "reports.0-GetSkypeForBusinessPeerToPeerActivityMinuteCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessPeerToPeerActivityMinuteCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessOrganizerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessOrganizerActivityCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityCounts",
        "operationId": "reports.0-GetSkypeForBusinessOrganizerActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessOrganizerActivityCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessOrganizerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessOrganizerActivityUserCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityUserCounts",
        "operationId": "reports.0-GetSkypeForBusinessOrganizerActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessOrganizerActivityUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessOrganizerActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessOrganizerActivityMinuteCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityMinuteCounts",
        "operationId": "reports.0-GetSkypeForBusinessOrganizerActivityMinuteCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessOrganizerActivityMinuteCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessParticipantActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessParticipantActivityCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityCounts",
        "operationId": "reports.0-GetSkypeForBusinessParticipantActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessParticipantActivityCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessParticipantActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessParticipantActivityUserCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityUserCounts",
        "operationId": "reports.0-GetSkypeForBusinessParticipantActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessParticipantActivityUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessParticipantActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessParticipantActivityMinuteCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityMinuteCounts",
        "operationId": "reports.0-GetSkypeForBusinessParticipantActivityMinuteCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessParticipantActivityMinuteCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessDeviceUsageUserDetail"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserDetail",
        "operationId": "reports.0-GetSkypeForBusinessDeviceUsageUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessDeviceUsageUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageUserDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessDeviceUsageUserDetail"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserDetail",
        "operationId": "reports.1-GetSkypeForBusinessDeviceUsageUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessDeviceUsageUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageUserDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessDeviceUsageDistributionUserCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageDistributionUserCounts",
        "operationId": "reports.0-GetSkypeForBusinessDeviceUsageDistributionUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessDeviceUsageDistributionUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getSkypeForBusinessDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getSkypeForBusinessDeviceUsageUserCounts"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserCounts",
        "operationId": "reports.0-GetSkypeForBusinessDeviceUsageUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.skypeForBusinessDeviceUsageUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getYammerActivityUserDetail"
        ],
        "summary": "Invoke function getYammerActivityUserDetail",
        "operationId": "reports.0-GetYammerActivityUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getYammerActivityUserDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getYammerActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getYammerActivityUserDetail"
        ],
        "summary": "Invoke function getYammerActivityUserDetail",
        "operationId": "reports.1-GetYammerActivityUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getYammerActivityUserDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getYammerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getYammerActivityCounts"
        ],
        "summary": "Invoke function getYammerActivityCounts",
        "operationId": "reports.0-GetYammerActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerActivitySummary"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getYammerActivityUserCounts"
        ],
        "summary": "Invoke function getYammerActivityUserCounts",
        "operationId": "reports.0-GetYammerActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerActivitySummary"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getYammerDeviceUsageUserDetail"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserDetail",
        "operationId": "reports.0-GetYammerDeviceUsageUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerDeviceUsageUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getYammerDeviceUsageUserDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getYammerDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getYammerDeviceUsageUserDetail"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserDetail",
        "operationId": "reports.1-GetYammerDeviceUsageUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerDeviceUsageUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getYammerDeviceUsageUserDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getYammerDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getYammerDeviceUsageDistributionUserCounts"
        ],
        "summary": "Invoke function getYammerDeviceUsageDistributionUserCounts",
        "operationId": "reports.0-GetYammerDeviceUsageDistributionUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerDeviceUsageDistributionUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getYammerDeviceUsageUserCounts"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserCounts",
        "operationId": "reports.0-GetYammerDeviceUsageUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerDeviceUsageUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerGroupsActivityDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getYammerGroupsActivityDetail"
        ],
        "summary": "Invoke function getYammerGroupsActivityDetail",
        "operationId": "reports.0-GetYammerGroupsActivityDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerGroupsActivityDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getYammerGroupsActivityDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getYammerGroupsActivityDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getYammerGroupsActivityDetail"
        ],
        "summary": "Invoke function getYammerGroupsActivityDetail",
        "operationId": "reports.1-GetYammerGroupsActivityDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerGroupsActivityDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getYammerGroupsActivityDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getYammerGroupsActivityGroupCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getYammerGroupsActivityGroupCounts"
        ],
        "summary": "Invoke function getYammerGroupsActivityGroupCounts",
        "operationId": "reports.0-GetYammerGroupsActivityGroupCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerGroupsActivityGroupCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getYammerGroupsActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getYammerGroupsActivityCounts"
        ],
        "summary": "Invoke function getYammerGroupsActivityCounts",
        "operationId": "reports.0-GetYammerGroupsActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.yammerGroupsActivityCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsUserActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getTeamsUserActivityUserDetail"
        ],
        "summary": "Invoke function getTeamsUserActivityUserDetail",
        "operationId": "reports.0-GetTeamsUserActivityUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.teamsUserActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getTeamsUserActivityUserDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getTeamsUserActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getTeamsUserActivityUserDetail"
        ],
        "summary": "Invoke function getTeamsUserActivityUserDetail",
        "operationId": "reports.1-GetTeamsUserActivityUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.teamsUserActivityUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getTeamsUserActivityUserDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getTeamsUserActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getTeamsUserActivityCounts"
        ],
        "summary": "Invoke function getTeamsUserActivityCounts",
        "operationId": "reports.0-GetTeamsUserActivityCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.teamsUserActivityCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsUserActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getTeamsUserActivityUserCounts"
        ],
        "summary": "Invoke function getTeamsUserActivityUserCounts",
        "operationId": "reports.0-GetTeamsUserActivityUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.teamsUserActivityUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.getTeamsDeviceUsageUserDetail"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserDetail",
        "operationId": "reports.0-GetTeamsDeviceUsageUserDetail",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.teamsDeviceUsageUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getTeamsDeviceUsageUserDetail(period={period})"
      ]
    },
    "/reports/microsoft.graph.getTeamsDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.getTeamsDeviceUsageUserDetail"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserDetail",
        "operationId": "reports.1-GetTeamsDeviceUsageUserDetail",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.teamsDeviceUsageUserDetail"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "x-ms-additionalPath": [
        "/reports/microsoft.graph.getTeamsDeviceUsageUserDetail(date={date})"
      ]
    },
    "/reports/microsoft.graph.getTeamsDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getTeamsDeviceUsageUserCounts"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserCounts",
        "operationId": "reports.0-GetTeamsDeviceUsageUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.teamsDeviceUsageUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTeamsDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.getTeamsDeviceUsageDistributionUserCounts"
        ],
        "summary": "Invoke function getTeamsDeviceUsageDistributionUserCounts",
        "operationId": "reports.0-GetTeamsDeviceUsageDistributionUserCounts",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/microsoft.graph.teamsDeviceUsageDistributionUserCounts"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/reports/microsoft.graph.getTenantSecureScores(period={period})": {
      "get": {
        "tags": [
          "reports.getTenantSecureScores"
        ],
        "summary": "Invoke function getTenantSecureScores",
        "operationId": "reports.0-GetTenantSecureScores",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/education": {
      "get": {
        "tags": [
          "education.educationRoot"
        ],
        "summary": "Here is a JSON representation of the resource.",
        "operationId": "education.educationRoot.GetEducationRoot",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "synchronizationProfiles",
                  "classes",
                  "schools",
                  "users",
                  "me"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.educationRoot"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "education.educationRoot"
        ],
        "summary": "Update education",
        "operationId": "education.educationRoot.UpdateEducationRoot",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.educationRoot"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "microsoft.graph.entity": {
        "title": "entity",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Read-only."
          }
        },
        "example": {
          "id": "String (identifier)"
        }
      },
      "microsoft.graph.extension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "extension",
            "type": "object"
          }
        ],
        "example": {
          "id": "String (identifier)"
        }
      },
      "microsoft.graph.directoryObject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "directoryObject",
            "type": "object",
            "properties": {
              "deletedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.user": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "user",
            "type": "object",
            "properties": {
              "accountEnabled": {
                "type": "boolean",
                "description": "true if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter.",
                "nullable": true
              },
              "assignedLicenses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                },
                "description": "The licenses that are assigned to the user. Not nullable."
              },
              "assignedPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.assignedPlan"
                },
                "description": "The plans that are assigned to the user. Read-only. Not nullable."
              },
              "businessPhones": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The telephone numbers for the user. NOTE: Although this is a string collection, only one number can be set for this property."
              },
              "city": {
                "type": "string",
                "description": "The city in which the user is located. Supports $filter.",
                "nullable": true
              },
              "companyName": {
                "type": "string",
                "description": "The company name which the user is associated. Read-only.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "The country/region in which the user is located; for example, 'US' or 'UK'. Supports $filter.",
                "nullable": true
              },
              "department": {
                "type": "string",
                "description": "The name for the department in which the user works. Supports $filter.",
                "nullable": true
              },
              "deviceKeys": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceKey"
                }
              },
              "displayName": {
                "type": "string",
                "description": "The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial and last name. This property is required when a user is created and it cannot be cleared during updates. Supports $filter and $orderby.",
                "nullable": true
              },
              "employeeId": {
                "type": "string",
                "nullable": true
              },
              "givenName": {
                "type": "string",
                "description": "The given name (first name) of the user. Supports $filter.",
                "nullable": true
              },
              "imAddresses": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only."
              },
              "jobTitle": {
                "type": "string",
                "description": "The user’s job title. Supports $filter.",
                "nullable": true
              },
              "mail": {
                "type": "string",
                "description": "The SMTP address for the user, for example, 'jeff@contoso.onmicrosoft.com'. Read-Only. Supports $filter.",
                "nullable": true
              },
              "mailNickname": {
                "type": "string",
                "description": "The mail alias for the user. This property must be specified when a user is created. Supports $filter.",
                "nullable": true
              },
              "mobilePhone": {
                "type": "string",
                "description": "The primary cellular telephone number for the user.",
                "nullable": true
              },
              "onPremisesImmutableId": {
                "type": "string",
                "description": "This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user’s userPrincipalName (UPN) property. Important: The $ and  characters cannot be used when specifying this property. Supports $filter.",
                "nullable": true
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Indicates the last time at which the object was synced with the on-premises directory; for example: '2013-02-16T03:04:54Z'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesProvisioningErrors": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.onPremisesProvisioningError"
                    }
                  ],
                  "nullable": true
                }
              },
              "onPremisesSecurityIdentifier": {
                "type": "string",
                "description": "Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only.",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "description": "true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only",
                "nullable": true
              },
              "onPremisesDomainName": {
                "type": "string",
                "nullable": true
              },
              "onPremisesSamAccountName": {
                "type": "string",
                "nullable": true
              },
              "onPremisesUserPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "passwordPolicies": {
                "type": "string",
                "description": "Specifies password policies for the user. This value is an enumeration with one possible value being 'DisableStrongPassword', which allows weaker passwords than the default policy to be specified. 'DisablePasswordExpiration' can also be specified. The two may be specified together; for example: 'DisablePasswordExpiration, DisableStrongPassword'.",
                "nullable": true
              },
              "passwordProfile": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.passwordProfile"
                  }
                ],
                "description": "Specifies the password profile for the user. The profile contains the user’s password. This property is required when a user is created. The password in the profile must satisfy minimum requirements as specified by the passwordPolicies property. By default, a strong password is required.",
                "nullable": true
              },
              "officeLocation": {
                "type": "string",
                "description": "The office location in the user's place of business.",
                "nullable": true
              },
              "postalCode": {
                "type": "string",
                "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.",
                "nullable": true
              },
              "preferredDataLocation": {
                "type": "string",
                "nullable": true
              },
              "preferredLanguage": {
                "type": "string",
                "description": "The preferred language for the user. Should follow ISO 639-1 Code; for example 'en-US'.",
                "nullable": true
              },
              "provisionedPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.provisionedPlan"
                },
                "description": "The plans that are provisioned for the user. Read-only. Not nullable."
              },
              "proxyAddresses": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com'] The any operator is required for filter expressions on multi-valued properties. Read-only, Not nullable. Supports $filter."
              },
              "refreshTokensValidFromDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "showInAddressList": {
                "type": "boolean",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "The state or province in the user's address. Supports $filter.",
                "nullable": true
              },
              "streetAddress": {
                "type": "string",
                "description": "The street address of the user's place of business.",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "description": "The user's surname (family name or last name). Supports $filter.",
                "nullable": true
              },
              "usageLocation": {
                "type": "string",
                "description": "A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries.  Examples include: 'US', 'JP', and 'GB'. Not nullable. Supports $filter.",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant’s collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization. Supports $filter and $orderby.",
                "nullable": true
              },
              "userType": {
                "type": "string",
                "description": "A string value that can be used to classify user types in your directory, such as 'Member' and 'Guest'. Supports $filter.",
                "nullable": true
              },
              "mailboxSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mailboxSettings"
                  }
                ],
                "description": "Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale and time zone.",
                "nullable": true
              },
              "aboutMe": {
                "type": "string",
                "description": "A freeform text entry field for the user to describe themselves.",
                "nullable": true
              },
              "birthday": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time"
              },
              "hireDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The hire date of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time"
              },
              "interests": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list for the user to describe their interests."
              },
              "mySite": {
                "type": "string",
                "description": "The URL for the user's personal site.",
                "nullable": true
              },
              "pastProjects": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list for the user to enumerate their past projects."
              },
              "preferredName": {
                "type": "string",
                "description": "The preferred name for the user.",
                "nullable": true
              },
              "responsibilities": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list for the user to enumerate their responsibilities."
              },
              "schools": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list for the user to enumerate the schools they have attended."
              },
              "skills": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list for the user to enumerate their skills."
              },
              "identityUserRisk": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identityUserRisk"
                  }
                ],
                "nullable": true
              },
              "deviceEnrollmentLimit": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.",
                "format": "int32"
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "ownedDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "registeredDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "manager": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                  }
                ],
                "nullable": true
              },
              "directReports": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "memberOf": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "createdObjects": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "ownedObjects": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "scopedRoleMemberOf": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.scopedRoleMembership"
                }
              },
              "licenseDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.licenseDetails"
                }
              },
              "activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.activity"
                }
              },
              "outlook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.outlookUser"
                  }
                ],
                "nullable": true
              },
              "messages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              },
              "joinedGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              },
              "mailFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              },
              "calendar": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  }
                ],
                "nullable": true
              },
              "calendars": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              },
              "calendarGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              },
              "calendarView": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "people": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.person"
                }
              },
              "contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              },
              "contactFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              },
              "inferenceClassification": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.inferenceClassification"
                  }
                ],
                "nullable": true
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                  }
                ],
                "nullable": true
              },
              "photos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "drives": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              },
              "insights": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.officeGraphInsights"
                  }
                ],
                "nullable": true
              },
              "planner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerUser"
                  }
                ],
                "nullable": true
              },
              "onenote": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenote"
                  }
                ],
                "nullable": true
              },
              "managedDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDevice"
                }
              },
              "managedAppRegistrations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
                }
              },
              "devices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.device"
                }
              },
              "joinedTeams": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              },
              "deviceManagementTroubleshootingEvents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "accountEnabled": true,
          "assignedLicenses": [
            {
              "@odata.type": "microsoft.graph.assignedLicense"
            }
          ],
          "assignedPlans": [
            {
              "@odata.type": "microsoft.graph.assignedPlan"
            }
          ],
          "businessPhones": [
            "String"
          ],
          "city": "String",
          "companyName": "String",
          "country": "String",
          "department": "String",
          "deviceKeys": [
            {
              "@odata.type": "microsoft.graph.deviceKey"
            }
          ],
          "displayName": "String",
          "employeeId": "String",
          "givenName": "String",
          "imAddresses": [
            "String"
          ],
          "jobTitle": "String",
          "mail": "String",
          "mailNickname": "String",
          "mobilePhone": "String",
          "onPremisesImmutableId": "String",
          "onPremisesLastSyncDateTime": "DateTimeOffset (timestamp)",
          "onPremisesProvisioningErrors": [
            {
              "@odata.type": "microsoft.graph.onPremisesProvisioningError"
            }
          ],
          "onPremisesSecurityIdentifier": "String",
          "onPremisesSyncEnabled": true,
          "onPremisesDomainName": "String",
          "onPremisesSamAccountName": "String",
          "onPremisesUserPrincipalName": "String",
          "passwordPolicies": "String",
          "passwordProfile": {
            "@odata.type": "microsoft.graph.passwordProfile"
          },
          "officeLocation": "String",
          "postalCode": "String",
          "preferredDataLocation": "String",
          "preferredLanguage": "String",
          "provisionedPlans": [
            {
              "@odata.type": "microsoft.graph.provisionedPlan"
            }
          ],
          "proxyAddresses": [
            "String"
          ],
          "refreshTokensValidFromDateTime": "DateTimeOffset (timestamp)",
          "showInAddressList": true,
          "state": "String",
          "streetAddress": "String",
          "surname": "String",
          "usageLocation": "String",
          "userPrincipalName": "String",
          "userType": "String",
          "mailboxSettings": {
            "@odata.type": "microsoft.graph.mailboxSettings"
          },
          "aboutMe": "String",
          "birthday": "DateTimeOffset (timestamp)",
          "hireDate": "DateTimeOffset (timestamp)",
          "interests": [
            "String"
          ],
          "mySite": "String",
          "pastProjects": [
            "String"
          ],
          "preferredName": "String",
          "responsibilities": [
            "String"
          ],
          "schools": [
            "String"
          ],
          "skills": [
            "String"
          ],
          "identityUserRisk": {
            "@odata.type": "microsoft.graph.identityUserRisk"
          },
          "deviceEnrollmentLimit": "Int32",
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "ownedDevices": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "registeredDevices": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "manager": {
            "@odata.type": "microsoft.graph.directoryObject"
          },
          "directReports": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "memberOf": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "createdObjects": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "ownedObjects": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "scopedRoleMemberOf": [
            {
              "@odata.type": "microsoft.graph.scopedRoleMembership"
            }
          ],
          "licenseDetails": [
            {
              "@odata.type": "microsoft.graph.licenseDetails"
            }
          ],
          "activities": [
            {
              "@odata.type": "microsoft.graph.activity"
            }
          ],
          "outlook": {
            "@odata.type": "microsoft.graph.outlookUser"
          },
          "messages": [
            {
              "@odata.type": "microsoft.graph.message"
            }
          ],
          "joinedGroups": [
            {
              "@odata.type": "microsoft.graph.group"
            }
          ],
          "mailFolders": [
            {
              "@odata.type": "microsoft.graph.mailFolder"
            }
          ],
          "calendar": {
            "@odata.type": "microsoft.graph.calendar"
          },
          "calendars": [
            {
              "@odata.type": "microsoft.graph.calendar"
            }
          ],
          "calendarGroups": [
            {
              "@odata.type": "microsoft.graph.calendarGroup"
            }
          ],
          "calendarView": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "events": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "people": [
            {
              "@odata.type": "microsoft.graph.person"
            }
          ],
          "contacts": [
            {
              "@odata.type": "microsoft.graph.contact"
            }
          ],
          "contactFolders": [
            {
              "@odata.type": "microsoft.graph.contactFolder"
            }
          ],
          "inferenceClassification": {
            "@odata.type": "microsoft.graph.inferenceClassification"
          },
          "photo": {
            "@odata.type": "microsoft.graph.profilePhoto"
          },
          "photos": [
            {
              "@odata.type": "microsoft.graph.profilePhoto"
            }
          ],
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "drives": [
            {
              "@odata.type": "microsoft.graph.drive"
            }
          ],
          "insights": {
            "@odata.type": "microsoft.graph.officeGraphInsights"
          },
          "planner": {
            "@odata.type": "microsoft.graph.plannerUser"
          },
          "onenote": {
            "@odata.type": "microsoft.graph.onenote"
          },
          "managedDevices": [
            {
              "@odata.type": "microsoft.graph.managedDevice"
            }
          ],
          "managedAppRegistrations": [
            {
              "@odata.type": "microsoft.graph.managedAppRegistration"
            }
          ],
          "devices": [
            {
              "@odata.type": "microsoft.graph.device"
            }
          ],
          "joinedTeams": [
            {
              "@odata.type": "microsoft.graph.group"
            }
          ],
          "deviceManagementTroubleshootingEvents": [
            {
              "@odata.type": "microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          ]
        }
      },
      "microsoft.graph.assignedLicense": {
        "title": "assignedLicense",
        "type": "object",
        "properties": {
          "disabledPlans": {
            "type": "array",
            "items": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "description": "A collection of the unique identifiers for plans that have been disabled."
          },
          "skuId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "The unique identifier for the SKU.",
            "format": "uuid",
            "nullable": true
          }
        },
        "example": {
          "disabledPlans": [
            "Guid"
          ],
          "skuId": "Guid"
        }
      },
      "microsoft.graph.assignedPlan": {
        "title": "assignedPlan",
        "type": "object",
        "properties": {
          "assignedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The date and time at which the plan was assigned; for example: 2013-01-02T19:32:30Z. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
            "format": "date-time",
            "nullable": true
          },
          "capabilityStatus": {
            "type": "string",
            "description": "For example, 'Enabled'.",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "The name of the service; for example, 'Exchange'.",
            "nullable": true
          },
          "servicePlanId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "A GUID that identifies the service plan.",
            "format": "uuid",
            "nullable": true
          }
        },
        "example": {
          "assignedDateTime": "DateTimeOffset (timestamp)",
          "capabilityStatus": "String",
          "service": "String",
          "servicePlanId": "Guid"
        }
      },
      "microsoft.graph.deviceKey": {
        "title": "deviceKey",
        "type": "object",
        "properties": {
          "keyType": {
            "type": "string",
            "nullable": true
          },
          "keyMaterial": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "deviceId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "example": {
          "keyType": "String",
          "keyMaterial": "Binary",
          "deviceId": "Guid"
        }
      },
      "microsoft.graph.onPremisesProvisioningError": {
        "title": "onPremisesProvisioningError",
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "propertyCausingError": {
            "type": "string",
            "nullable": true
          },
          "occurredDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "value": "String",
          "category": "String",
          "propertyCausingError": "String",
          "occurredDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.passwordProfile": {
        "title": "passwordProfile",
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "The password for the user. This property is required when a user is created. It can be updated, but the user will be required to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies property. By default, a strong password is required.",
            "nullable": true
          },
          "forceChangePasswordNextSignIn": {
            "type": "boolean",
            "description": "true if the user must change her password on the next login; otherwise false.",
            "nullable": true
          }
        },
        "example": {
          "password": "String",
          "forceChangePasswordNextSignIn": true
        }
      },
      "microsoft.graph.provisionedPlan": {
        "title": "provisionedPlan",
        "type": "object",
        "properties": {
          "capabilityStatus": {
            "type": "string",
            "description": "For example, 'Enabled'.",
            "nullable": true
          },
          "provisioningStatus": {
            "type": "string",
            "description": "For example, 'Success'.",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "The name of the service; for example, 'AccessControlS2S'",
            "nullable": true
          }
        },
        "example": {
          "capabilityStatus": "String",
          "provisioningStatus": "String",
          "service": "String"
        }
      },
      "microsoft.graph.scopedRoleMembership": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "scopedRoleMembership",
            "type": "object",
            "properties": {
              "roleId": {
                "type": "string"
              },
              "administrativeUnitId": {
                "type": "string"
              },
              "roleMemberInfo": {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "roleId": "String",
          "administrativeUnitId": "String",
          "roleMemberInfo": {
            "@odata.type": "microsoft.graph.identity"
          }
        }
      },
      "microsoft.graph.licenseDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "licenseDetails",
            "type": "object",
            "properties": {
              "servicePlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.servicePlanInfo"
                },
                "description": "Information about the service plans assigned with the license. Read-only, Not nullable"
              },
              "skuId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "Unique identifier (GUID) for the service SKU. Equal to the skuId property on the related SubscribedSku object. Read-only",
                "format": "uuid",
                "nullable": true
              },
              "skuPartNumber": {
                "type": "string",
                "description": "Unique SKU display name. Equal to the skuPartNumber on the related SubscribedSku object; for example: 'AAD_Premium'. Read-only",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "servicePlans": [
            {
              "@odata.type": "microsoft.graph.servicePlanInfo"
            }
          ],
          "skuId": "Guid",
          "skuPartNumber": "String"
        }
      },
      "microsoft.graph.activity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "activity",
            "type": "object",
            "properties": {
              "visualElements": {
                "$ref": "#/components/schemas/microsoft.graph.visualInfo"
              },
              "activitySourceHost": {
                "type": "string"
              },
              "activationUrl": {
                "type": "string"
              },
              "appActivityId": {
                "type": "string"
              },
              "appDisplayName": {
                "type": "string",
                "nullable": true
              },
              "contentUrl": {
                "type": "string",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "fallbackUrl": {
                "type": "string",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "userTimezone": {
                "type": "string",
                "nullable": true
              },
              "contentInfo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              },
              "historyItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.historyItem"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "visualElements": {
            "@odata.type": "microsoft.graph.visualInfo"
          },
          "activitySourceHost": "String",
          "activationUrl": "String",
          "appActivityId": "String",
          "appDisplayName": "String",
          "contentUrl": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "fallbackUrl": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "userTimezone": "String",
          "contentInfo": {
            "@odata.type": "microsoft.graph.Json"
          },
          "historyItems": [
            {
              "@odata.type": "microsoft.graph.historyItem"
            }
          ]
        }
      },
      "microsoft.graph.mailboxSettings": {
        "title": "mailboxSettings",
        "type": "object",
        "properties": {
          "automaticRepliesSetting": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.automaticRepliesSetting"
              }
            ],
            "description": "Configuration settings to automatically notify the sender of an incoming email with a message from the signed-in user.",
            "nullable": true
          },
          "archiveFolder": {
            "type": "string",
            "description": "Folder ID of an archive folder for the user.",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "description": "The default time zone for the user's mailbox.",
            "nullable": true
          },
          "language": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.localeInfo"
              }
            ],
            "description": "The locale information for the user, including the preferred language and country/region.",
            "nullable": true
          },
          "workingHours": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.workingHours"
              }
            ],
            "description": "The days of the week and hours in a specific time zone that the user works.",
            "nullable": true
          }
        },
        "example": {
          "automaticRepliesSetting": {
            "@odata.type": "microsoft.graph.automaticRepliesSetting"
          },
          "archiveFolder": "String",
          "timeZone": "String",
          "language": {
            "@odata.type": "microsoft.graph.localeInfo"
          },
          "workingHours": {
            "@odata.type": "microsoft.graph.workingHours"
          }
        }
      },
      "microsoft.graph.automaticRepliesSetting": {
        "title": "automaticRepliesSetting",
        "type": "object",
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.automaticRepliesStatus"
              }
            ],
            "description": "Configurations status for automatic replies. Possible values are: disabled, alwaysEnabled, scheduled.",
            "nullable": true
          },
          "externalAudience": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalAudienceScope"
              }
            ],
            "description": "The set of audience external to the signed-in user's organization who will receive the ExternalReplyMessage, if Status is AlwaysEnabled or Scheduled. Possible values are: none, contactsOnly, all.",
            "nullable": true
          },
          "scheduledStartDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that automatic replies are set to begin, if Status is set to Scheduled.",
            "nullable": true
          },
          "scheduledEndDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that automatic replies are set to end, if Status is set to Scheduled.",
            "nullable": true
          },
          "internalReplyMessage": {
            "type": "string",
            "description": "The automatic reply to send to the audience internal to the signed-in user's organization, if Status is AlwaysEnabled or Scheduled.",
            "nullable": true
          },
          "externalReplyMessage": {
            "type": "string",
            "description": "The automatic reply to send to the specified external audience, if Status is AlwaysEnabled or Scheduled.",
            "nullable": true
          }
        },
        "example": {
          "status": {
            "@odata.type": "microsoft.graph.automaticRepliesStatus"
          },
          "externalAudience": {
            "@odata.type": "microsoft.graph.externalAudienceScope"
          },
          "scheduledStartDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "scheduledEndDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "internalReplyMessage": "String",
          "externalReplyMessage": "String"
        }
      },
      "microsoft.graph.dateTimeTimeZone": {
        "title": "dateTimeTimeZone",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "A single point of time in a combined date and time representation (<date>T<time>)."
          },
          "timeZone": {
            "type": "string",
            "description": "One of the following time zone names.",
            "nullable": true
          }
        },
        "example": {
          "dateTime": "String",
          "timeZone": "String"
        }
      },
      "microsoft.graph.localeInfo": {
        "title": "localeInfo",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "description": "A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'. The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in ISO 3166-1 alpha-2.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "A name representing the user's locale in natural language, for example, 'English (United States)'.",
            "nullable": true
          }
        },
        "example": {
          "locale": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.workingHours": {
        "title": "workingHours",
        "type": "object",
        "properties": {
          "daysOfWeek": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
                }
              ],
              "nullable": true
            },
            "description": "The days of the week on which the user works."
          },
          "startTime": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
            "type": "string",
            "description": "The time of the day that the user starts working.",
            "format": "time",
            "nullable": true
          },
          "endTime": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
            "type": "string",
            "description": "The time of the day that the user stops working.",
            "format": "time",
            "nullable": true
          },
          "timeZone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.timeZoneBase"
              }
            ],
            "description": "The time zone to which the working hours apply.",
            "nullable": true
          }
        },
        "example": {
          "daysOfWeek": [
            {
              "@odata.type": "microsoft.graph.dayOfWeek"
            }
          ],
          "startTime": "TimeOfDay (timestamp)",
          "endTime": "TimeOfDay (timestamp)",
          "timeZone": {
            "@odata.type": "microsoft.graph.timeZoneBase"
          }
        }
      },
      "microsoft.graph.timeZoneBase": {
        "title": "timeZoneBase",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of a time zone. It can be a standard time zone name such as 'Hawaii-Aleutian Standard Time', or 'Customized Time Zone' for a custom time zone.",
            "nullable": true
          }
        },
        "example": {
          "name": "String"
        }
      },
      "microsoft.graph.outlookUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "outlookUser",
            "type": "object",
            "properties": {
              "masterCategories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.outlookCategory"
                }
              },
              "taskGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.outlookTaskGroup"
                }
              },
              "taskFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.outlookTaskFolder"
                }
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.outlookTask"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "masterCategories": [
            {
              "@odata.type": "microsoft.graph.outlookCategory"
            }
          ],
          "taskGroups": [
            {
              "@odata.type": "microsoft.graph.outlookTaskGroup"
            }
          ],
          "taskFolders": [
            {
              "@odata.type": "microsoft.graph.outlookTaskFolder"
            }
          ],
          "tasks": [
            {
              "@odata.type": "microsoft.graph.outlookTask"
            }
          ]
        }
      },
      "microsoft.graph.outlookItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "outlookItem",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "changeKey": {
                "type": "string",
                "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
                "nullable": true
              },
              "categories": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The categories associated with the item"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "changeKey": "String",
          "categories": [
            "String"
          ]
        }
      },
      "microsoft.graph.message": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "message",
            "type": "object",
            "properties": {
              "receivedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the message was received.",
                "format": "date-time",
                "nullable": true
              },
              "sentDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the message was sent.",
                "format": "date-time",
                "nullable": true
              },
              "hasAttachments": {
                "type": "boolean",
                "description": "Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>.",
                "nullable": true
              },
              "internetMessageId": {
                "type": "string",
                "description": "The message ID in the format specified by RFC2822.",
                "nullable": true
              },
              "internetMessageHeaders": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.internetMessageHeader"
                    }
                  ],
                  "nullable": true
                },
                "description": "The collection of message headers, defined by RFC5322, that provide details of the network path taken by a message from the sender to the recipient. Read-only."
              },
              "subject": {
                "type": "string",
                "description": "The subject of the message.",
                "nullable": true
              },
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "description": "The body of the message. It can be in HTML or text format.",
                "nullable": true
              },
              "bodyPreview": {
                "type": "string",
                "description": "The first 255 characters of the message body. It is in text format.",
                "nullable": true
              },
              "importance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.importance"
                  }
                ],
                "description": "The importance of the message: Low, Normal, High.",
                "nullable": true
              },
              "parentFolderId": {
                "type": "string",
                "description": "The unique identifier for the message's parent mailFolder.",
                "nullable": true
              },
              "sender": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "description": "The account that is actually used to generate the message.",
                "nullable": true
              },
              "from": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "description": "The mailbox owner and sender of the message.",
                "nullable": true
              },
              "toRecipients": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                },
                "description": "The To: recipients for the message."
              },
              "ccRecipients": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                },
                "description": "The Cc: recipients for the message."
              },
              "bccRecipients": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                },
                "description": "The Bcc: recipients for the message."
              },
              "replyTo": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                },
                "description": "The email addresses to use when replying."
              },
              "conversationId": {
                "type": "string",
                "description": "The ID of the conversation the email belongs to.",
                "nullable": true
              },
              "conversationIndex": {
                "type": "string",
                "format": "base64url",
                "nullable": true
              },
              "uniqueBody": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "description": "The part of the body of the message that is unique to the current message. uniqueBody is not returned by default but can be retrieved for a given message by use of the ?$select=uniqueBody query. It can be in HTML or text format.",
                "nullable": true
              },
              "isDeliveryReceiptRequested": {
                "type": "boolean",
                "description": "Indicates whether a read receipt is requested for the message.",
                "nullable": true
              },
              "isReadReceiptRequested": {
                "type": "boolean",
                "description": "Indicates whether a read receipt is requested for the message.",
                "nullable": true
              },
              "isRead": {
                "type": "boolean",
                "description": "Indicates whether the message has been read.",
                "nullable": true
              },
              "isDraft": {
                "type": "boolean",
                "description": "Indicates whether the message is a draft. A message is a draft if it hasn't been sent yet.",
                "nullable": true
              },
              "webLink": {
                "type": "string",
                "description": "The URL to open the message in Outlook Web App.You can append an ispopout argument to the end of the URL to change how the message is displayed. If ispopout is not present or if it is set to 1, then the message is shown in a popout window. If ispopout is set to 0, then the browser will show the message in the Outlook Web App review pane.The message will open in the browser if you are logged in to your mailbox via Outlook Web App. You will be prompted to login if you are not already logged in with the browser.This URL can be accessed from within an iFrame.",
                "nullable": true
              },
              "mentionsPreview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mentionsPreview"
                  }
                ],
                "nullable": true
              },
              "inferenceClassification": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationType"
                  }
                ],
                "description": "The classification of the message for the user, based on inferred relevance or importance, or on an explicit override. Possible values are: focused or other.",
                "nullable": true
              },
              "unsubscribeData": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "unsubscribeEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "flag": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.followupFlag"
                  }
                ],
                "description": "The flag value that indicates the status, start date, due date, or completion date for the message.",
                "nullable": true
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "mentions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mention"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "changeKey": "String",
          "categories": [
            "String"
          ],
          "receivedDateTime": "DateTimeOffset (timestamp)",
          "sentDateTime": "DateTimeOffset (timestamp)",
          "hasAttachments": true,
          "internetMessageId": "String",
          "internetMessageHeaders": [
            {
              "@odata.type": "microsoft.graph.internetMessageHeader"
            }
          ],
          "subject": "String",
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "bodyPreview": "String",
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "parentFolderId": "String",
          "sender": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "from": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "toRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "bccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "replyTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "conversationId": "String",
          "conversationIndex": "Binary",
          "uniqueBody": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "isDeliveryReceiptRequested": true,
          "isReadReceiptRequested": true,
          "isRead": true,
          "isDraft": true,
          "webLink": "String",
          "mentionsPreview": {
            "@odata.type": "microsoft.graph.mentionsPreview"
          },
          "inferenceClassification": {
            "@odata.type": "microsoft.graph.inferenceClassificationType"
          },
          "unsubscribeData": [
            "String"
          ],
          "unsubscribeEnabled": true,
          "flag": {
            "@odata.type": "microsoft.graph.followupFlag"
          },
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "mentions": [
            {
              "@odata.type": "microsoft.graph.mention"
            }
          ]
        }
      },
      "microsoft.graph.group": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "group",
            "type": "object",
            "properties": {
              "classification": {
                "type": "string",
                "description": "Describes a classification for the group (such as low, medium or high business impact). Valid values for this property are defined by creating a ClassificationList setting value, based on the template definition.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Timestamp of when the group was created. The value cannot be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "An optional description for the group.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name for the group. This property is required when a group is created and it cannot be cleared during updates. Supports $filter and $orderby.",
                "nullable": true
              },
              "groupTypes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Specifies the type of group to create. Possible values are Unified to create an Office 365 group, or DynamicMembership for dynamic groups.  For all other group types, like security-enabled groups and email-enabled security groups, do not set this property. Supports $filter."
              },
              "mail": {
                "type": "string",
                "description": "The SMTP address for the group, for example, 'serviceadmins@contoso.onmicrosoft.com'. Read-only. Supports $filter.",
                "nullable": true
              },
              "mailEnabled": {
                "type": "boolean",
                "description": "Specifies whether the group is mail-enabled. If the securityEnabled property is also true, the group is a mail-enabled security group; otherwise, the group is a Microsoft Exchange distribution group.",
                "nullable": true
              },
              "mailNickname": {
                "type": "string",
                "description": "The mail alias for the group, unique in the organization. This property must be specified when a group is created. Supports $filter.",
                "nullable": true
              },
              "membershipRule": {
                "type": "string",
                "nullable": true
              },
              "membershipRuleProcessingState": {
                "type": "string",
                "nullable": true
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Indicates the last time at which the group was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only. Supports $filter.",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesProvisioningErrors": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.onPremisesProvisioningError"
                    }
                  ],
                  "nullable": true
                }
              },
              "onPremisesSecurityIdentifier": {
                "type": "string",
                "description": "Contains the on-premises security identifier (SID) for the group that was synchronized from on-premises to the cloud. Read-only.",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "description": "true if this group is synced from an on-premises directory; false if this group was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only. Supports $filter.",
                "nullable": true
              },
              "preferredLanguage": {
                "type": "string",
                "nullable": true
              },
              "proxyAddresses": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The any operator is required for filter expressions on multi-valued properties. Read-only. Not nullable. Supports $filter."
              },
              "renewedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Timestamp of when the group was last renewed. This cannot be modified directly and is only updated via the renew service action. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "resourceBehaviorOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "resourceProvisioningOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "securityEnabled": {
                "type": "boolean",
                "description": "Specifies whether the group is a security group. If the mailEnabled property is also true, the group is a mail-enabled security group; otherwise it is a security group. Must be false for Office 365 groups. Supports $filter.",
                "nullable": true
              },
              "theme": {
                "type": "string",
                "nullable": true
              },
              "visibility": {
                "type": "string",
                "description": "Specifies the visibility of an Office 365 group. Possible values are: Private, Public, or empty (which is interpreted as Public).",
                "nullable": true
              },
              "accessType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.groupAccessType"
                  }
                ],
                "nullable": true
              },
              "allowExternalSenders": {
                "type": "boolean",
                "description": "Default is false. Indicates if people external to the organization can send messages to the group.",
                "nullable": true
              },
              "autoSubscribeNewMembers": {
                "type": "boolean",
                "description": "Default is false. Indicates if new members added to the group will be auto-subscribed to receive email notifications. You can set this property in a PATCH request for the group; do not set it in the initial POST request that creates the group.",
                "nullable": true
              },
              "isFavorite": {
                "type": "boolean",
                "nullable": true
              },
              "isSubscribedByMail": {
                "type": "boolean",
                "description": "Default value is true. Indicates whether the current user is subscribed to receive email conversations.",
                "nullable": true
              },
              "unseenCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of posts that the current  user has not seen since his last visit.",
                "format": "int32",
                "nullable": true
              },
              "unseenConversationsCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "unseenMessagesCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "memberOf": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "createdOnBehalfOf": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                  }
                ],
                "nullable": true
              },
              "owners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "settings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directorySetting"
                }
              },
              "endpoints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.endpoint"
                }
              },
              "threads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.conversationThread"
                }
              },
              "calendar": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  }
                ],
                "nullable": true
              },
              "calendarView": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "conversations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.conversation"
                }
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                  }
                ],
                "nullable": true
              },
              "photos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              },
              "acceptedSenders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "rejectedSenders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "drives": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              },
              "sites": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              },
              "planner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerGroup"
                  }
                ],
                "nullable": true
              },
              "onenote": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenote"
                  }
                ],
                "nullable": true
              },
              "team": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.team"
                  }
                ],
                "nullable": true
              },
              "channels": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.channel"
                }
              },
              "groupLifecyclePolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "classification": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "groupTypes": [
            "String"
          ],
          "mail": "String",
          "mailEnabled": true,
          "mailNickname": "String",
          "membershipRule": "String",
          "membershipRuleProcessingState": "String",
          "onPremisesLastSyncDateTime": "DateTimeOffset (timestamp)",
          "onPremisesProvisioningErrors": [
            {
              "@odata.type": "microsoft.graph.onPremisesProvisioningError"
            }
          ],
          "onPremisesSecurityIdentifier": "String",
          "onPremisesSyncEnabled": true,
          "preferredLanguage": "String",
          "proxyAddresses": [
            "String"
          ],
          "renewedDateTime": "DateTimeOffset (timestamp)",
          "resourceBehaviorOptions": [
            "String"
          ],
          "resourceProvisioningOptions": [
            "String"
          ],
          "securityEnabled": true,
          "theme": "String",
          "visibility": "String",
          "accessType": {
            "@odata.type": "microsoft.graph.groupAccessType"
          },
          "allowExternalSenders": true,
          "autoSubscribeNewMembers": true,
          "isFavorite": true,
          "isSubscribedByMail": true,
          "unseenCount": "Int32",
          "unseenConversationsCount": "Int32",
          "unseenMessagesCount": "Int32",
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "members": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "memberOf": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "createdOnBehalfOf": {
            "@odata.type": "microsoft.graph.directoryObject"
          },
          "owners": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "settings": [
            {
              "@odata.type": "microsoft.graph.directorySetting"
            }
          ],
          "endpoints": [
            {
              "@odata.type": "microsoft.graph.endpoint"
            }
          ],
          "threads": [
            {
              "@odata.type": "microsoft.graph.conversationThread"
            }
          ],
          "calendar": {
            "@odata.type": "microsoft.graph.calendar"
          },
          "calendarView": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "events": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "conversations": [
            {
              "@odata.type": "microsoft.graph.conversation"
            }
          ],
          "photo": {
            "@odata.type": "microsoft.graph.profilePhoto"
          },
          "photos": [
            {
              "@odata.type": "microsoft.graph.profilePhoto"
            }
          ],
          "acceptedSenders": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "rejectedSenders": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "drives": [
            {
              "@odata.type": "microsoft.graph.drive"
            }
          ],
          "sites": [
            {
              "@odata.type": "microsoft.graph.site"
            }
          ],
          "planner": {
            "@odata.type": "microsoft.graph.plannerGroup"
          },
          "onenote": {
            "@odata.type": "microsoft.graph.onenote"
          },
          "team": {
            "@odata.type": "microsoft.graph.team"
          },
          "channels": [
            {
              "@odata.type": "microsoft.graph.channel"
            }
          ],
          "groupLifecyclePolicies": [
            {
              "@odata.type": "microsoft.graph.groupLifecyclePolicy"
            }
          ]
        }
      },
      "microsoft.graph.mailFolder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mailFolder",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The mailFolder's display name.",
                "nullable": true
              },
              "parentFolderId": {
                "type": "string",
                "description": "The unique identifier for the mailFolder's parent mailFolder.",
                "nullable": true
              },
              "childFolderCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of immediate child mailFolders in the current mailFolder.",
                "format": "int32",
                "nullable": true
              },
              "unreadItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of items in the mailFolder marked as unread.",
                "format": "int32",
                "nullable": true
              },
              "totalItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of items in the mailFolder.",
                "format": "int32",
                "nullable": true
              },
              "wellKnownName": {
                "type": "string",
                "nullable": true
              },
              "messages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              },
              "messageRules": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.messageRule"
                }
              },
              "childFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              },
              "userConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.userConfiguration"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "parentFolderId": "String",
          "childFolderCount": "Int32",
          "unreadItemCount": "Int32",
          "totalItemCount": "Int32",
          "wellKnownName": "String",
          "messages": [
            {
              "@odata.type": "microsoft.graph.message"
            }
          ],
          "messageRules": [
            {
              "@odata.type": "microsoft.graph.messageRule"
            }
          ],
          "childFolders": [
            {
              "@odata.type": "microsoft.graph.mailFolder"
            }
          ],
          "userConfigurations": [
            {
              "@odata.type": "microsoft.graph.userConfiguration"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.calendar": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "calendar",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The calendar name.",
                "nullable": true
              },
              "color": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarColor"
                  }
                ],
                "description": "Specifies the color theme to distinguish the calendar from other calendars in a UI. The property values are: LightBlue=0, LightGreen=1, LightOrange=2, LightGray=3, LightYellow=4, LightTeal=5, LightPink=6, LightBrown=7, LightRed=8, MaxColor=9, Auto=-1",
                "nullable": true
              },
              "hexColor": {
                "type": "string",
                "nullable": true
              },
              "isDefaultCalendar": {
                "type": "boolean",
                "nullable": true
              },
              "changeKey": {
                "type": "string",
                "description": "Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
                "nullable": true
              },
              "canShare": {
                "type": "boolean",
                "description": "True if the user has the permission to share the calendar, false otherwise. Only the user who created the calendar can share it.",
                "nullable": true
              },
              "canViewPrivateItems": {
                "type": "boolean",
                "description": "True if the user can read calendar items that have been marked private, false otherwise.",
                "nullable": true
              },
              "isShared": {
                "type": "boolean",
                "nullable": true
              },
              "isSharedWithMe": {
                "type": "boolean",
                "nullable": true
              },
              "canEdit": {
                "type": "boolean",
                "description": "True if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who has been shared a calendar and granted write access.",
                "nullable": true
              },
              "owner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                ],
                "description": "If set, this represents the user who created or added the calendar. For a calendar that the user created or added, the owner property is set to the user. For a calendar shared with the user, the owner property is set to the person who shared that calendar with the user.",
                "nullable": true
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "calendarView": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "name": "String",
          "color": {
            "@odata.type": "microsoft.graph.calendarColor"
          },
          "hexColor": "String",
          "isDefaultCalendar": true,
          "changeKey": "String",
          "canShare": true,
          "canViewPrivateItems": true,
          "isShared": true,
          "isSharedWithMe": true,
          "canEdit": true,
          "owner": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "events": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "calendarView": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.calendarGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "calendarGroup",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The group name.",
                "nullable": true
              },
              "classId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "The class identifier. Read-only.",
                "format": "uuid",
                "nullable": true
              },
              "changeKey": {
                "type": "string",
                "description": "Identifies the version of the calendar group. Every time the calendar group is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
                "nullable": true
              },
              "calendars": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "name": "String",
          "classId": "Guid",
          "changeKey": "String",
          "calendars": [
            {
              "@odata.type": "microsoft.graph.calendar"
            }
          ]
        }
      },
      "microsoft.graph.event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "event",
            "type": "object",
            "properties": {
              "originalStartTimeZone": {
                "type": "string",
                "description": "The start time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook.",
                "nullable": true
              },
              "originalEndTimeZone": {
                "type": "string",
                "description": "The end time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook.",
                "nullable": true
              },
              "responseStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.responseStatus"
                  }
                ],
                "description": "Indicates the type of response sent in response to an event message.",
                "nullable": true
              },
              "iCalUId": {
                "type": "string",
                "description": "A unique identifier that is shared by all instances of an event across different calendars.",
                "nullable": true
              },
              "reminderMinutesBeforeStart": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of minutes before the event start time that the reminder alert occurs.",
                "format": "int32",
                "nullable": true
              },
              "isReminderOn": {
                "type": "boolean",
                "description": "Set to true if an alert is set to remind the user of the event.",
                "nullable": true
              },
              "hasAttachments": {
                "type": "boolean",
                "description": "Set to true if the event has attachments.",
                "nullable": true
              },
              "subject": {
                "type": "string",
                "description": "The text of the event's subject line.",
                "nullable": true
              },
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "description": "The body of the message associated with the event. It can be in HTML or text format.",
                "nullable": true
              },
              "bodyPreview": {
                "type": "string",
                "description": "The preview of the message associated with the event. It is in text format.",
                "nullable": true
              },
              "importance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.importance"
                  }
                ],
                "description": "The importance of the event. Possible values are: low, normal, high.",
                "nullable": true
              },
              "sensitivity": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sensitivity"
                  }
                ],
                "description": "Possible values are: normal, personal, private, confidential.",
                "nullable": true
              },
              "start": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "description": "The date, time, and time zone that the event starts.",
                "nullable": true
              },
              "originalStart": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "end": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "description": "The date, time, and time zone that the event ends.",
                "nullable": true
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.location"
                  }
                ],
                "description": "The location of the event.",
                "nullable": true
              },
              "locations": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.location"
                    }
                  ],
                  "nullable": true
                },
                "description": "The locations where the event is held or attended from. The location and locations properties always correspond with each other. If you update the location property, any prior locations in the locations collection would be removed and replaced by the new location value."
              },
              "isAllDay": {
                "type": "boolean",
                "description": "Set to true if the event lasts all day.",
                "nullable": true
              },
              "isCancelled": {
                "type": "boolean",
                "description": "Set to true if the event has been canceled.",
                "nullable": true
              },
              "isOrganizer": {
                "type": "boolean",
                "description": "Set to true if the message sender is also the organizer.",
                "nullable": true
              },
              "recurrence": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.patternedRecurrence"
                  }
                ],
                "description": "The recurrence pattern for the event.",
                "nullable": true
              },
              "responseRequested": {
                "type": "boolean",
                "description": "Set to true if the sender would like a response when the event is accepted or declined.",
                "nullable": true
              },
              "seriesMasterId": {
                "type": "string",
                "description": "The ID for the recurring series master item, if this event is part of a recurring series.",
                "nullable": true
              },
              "showAs": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.freeBusyStatus"
                  }
                ],
                "description": "The status to show. Possible values are: free, tentative, busy, oof, workingElsewhere, unknown.",
                "nullable": true
              },
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.eventType"
                  }
                ],
                "description": "The event type. Possible values are: singleInstance, occurrence, exception, seriesMaster. Read-only.",
                "nullable": true
              },
              "attendees": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.attendee"
                    }
                  ],
                  "nullable": true
                },
                "description": "The collection of attendees for the event."
              },
              "organizer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "description": "The organizer of the event.",
                "nullable": true
              },
              "webLink": {
                "type": "string",
                "description": "The URL to open the event in Outlook Web App.The event will open in the browser if you are logged in to your mailbox via Outlook Web App. You will be prompted to login if you are not already logged in with the browser.This URL can be accessed from within an iFrame.",
                "nullable": true
              },
              "onlineMeetingUrl": {
                "type": "string",
                "description": "A URL for an online meeting.",
                "nullable": true
              },
              "creationOptions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.eventCreationOptions"
                  }
                ],
                "nullable": true
              },
              "calendar": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  }
                ],
                "nullable": true
              },
              "instances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "changeKey": "String",
          "categories": [
            "String"
          ],
          "originalStartTimeZone": "String",
          "originalEndTimeZone": "String",
          "responseStatus": {
            "@odata.type": "microsoft.graph.responseStatus"
          },
          "iCalUId": "String",
          "reminderMinutesBeforeStart": "Int32",
          "isReminderOn": true,
          "hasAttachments": true,
          "subject": "String",
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "bodyPreview": "String",
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "sensitivity": {
            "@odata.type": "microsoft.graph.sensitivity"
          },
          "start": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "originalStart": "DateTimeOffset (timestamp)",
          "end": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "location": {
            "@odata.type": "microsoft.graph.location"
          },
          "locations": [
            {
              "@odata.type": "microsoft.graph.location"
            }
          ],
          "isAllDay": true,
          "isCancelled": true,
          "isOrganizer": true,
          "recurrence": {
            "@odata.type": "microsoft.graph.patternedRecurrence"
          },
          "responseRequested": true,
          "seriesMasterId": "String",
          "showAs": {
            "@odata.type": "microsoft.graph.freeBusyStatus"
          },
          "type": {
            "@odata.type": "microsoft.graph.eventType"
          },
          "attendees": [
            {
              "@odata.type": "microsoft.graph.attendee"
            }
          ],
          "organizer": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "webLink": "String",
          "onlineMeetingUrl": "String",
          "creationOptions": {
            "@odata.type": "microsoft.graph.eventCreationOptions"
          },
          "calendar": {
            "@odata.type": "microsoft.graph.calendar"
          },
          "instances": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.person": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "person",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The person's display name.",
                "nullable": true
              },
              "givenName": {
                "type": "string",
                "description": "The person's given name.",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "description": "The person's surname.",
                "nullable": true
              },
              "birthday": {
                "type": "string",
                "description": "The person's birthday.",
                "nullable": true
              },
              "personNotes": {
                "type": "string",
                "description": "Free-form notes that the user has taken about this person.",
                "nullable": true
              },
              "isFavorite": {
                "type": "boolean",
                "description": "true if the user has flagged this person as a favorite.",
                "nullable": true
              },
              "emailAddresses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.rankedEmailAddress"
                    }
                  ],
                  "nullable": true
                }
              },
              "phones": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.phone"
                    }
                  ],
                  "nullable": true
                },
                "description": "The person's phone numbers."
              },
              "postalAddresses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.location"
                    }
                  ],
                  "nullable": true
                },
                "description": "The person's addresses."
              },
              "websites": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.website"
                    }
                  ],
                  "nullable": true
                },
                "description": "The person's websites."
              },
              "title": {
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "type": "string",
                "description": "The name of the person's company.",
                "nullable": true
              },
              "yomiCompany": {
                "type": "string",
                "description": "The phonetic Japanese name of the person's company.",
                "nullable": true
              },
              "department": {
                "type": "string",
                "description": "The person's department.",
                "nullable": true
              },
              "officeLocation": {
                "type": "string",
                "description": "The location of the person's office.",
                "nullable": true
              },
              "profession": {
                "type": "string",
                "description": "The person's profession.",
                "nullable": true
              },
              "sources": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.personDataSource"
                    }
                  ],
                  "nullable": true
                }
              },
              "mailboxType": {
                "type": "string",
                "nullable": true
              },
              "personType": {
                "type": "string",
                "description": "The type of person.",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "The user principal name (UPN) of the person. The UPN is an Internet-style login name for the person based on the Internet standard RFC 822. By convention, this should map to the person's email name. The general format is alias@domain.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "givenName": "String",
          "surname": "String",
          "birthday": "String",
          "personNotes": "String",
          "isFavorite": true,
          "emailAddresses": [
            {
              "@odata.type": "microsoft.graph.rankedEmailAddress"
            }
          ],
          "phones": [
            {
              "@odata.type": "microsoft.graph.phone"
            }
          ],
          "postalAddresses": [
            {
              "@odata.type": "microsoft.graph.location"
            }
          ],
          "websites": [
            {
              "@odata.type": "microsoft.graph.website"
            }
          ],
          "title": "String",
          "companyName": "String",
          "yomiCompany": "String",
          "department": "String",
          "officeLocation": "String",
          "profession": "String",
          "sources": [
            {
              "@odata.type": "microsoft.graph.personDataSource"
            }
          ],
          "mailboxType": "String",
          "personType": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.contact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "contact",
            "type": "object",
            "properties": {
              "parentFolderId": {
                "type": "string",
                "description": "The ID of the contact's parent folder.",
                "nullable": true
              },
              "birthday": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "fileAs": {
                "type": "string",
                "description": "The name the contact is filed under.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The contact's display name.",
                "nullable": true
              },
              "givenName": {
                "type": "string",
                "description": "The contact's given name.",
                "nullable": true
              },
              "initials": {
                "type": "string",
                "description": "The contact's initials.",
                "nullable": true
              },
              "middleName": {
                "type": "string",
                "description": "The contact's middle name.",
                "nullable": true
              },
              "nickName": {
                "type": "string",
                "description": "The contact's nickname.",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "description": "The contact's surname.",
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "The contact's title.",
                "nullable": true
              },
              "yomiGivenName": {
                "type": "string",
                "description": "The phonetic Japanese given name (first name) of the contact.",
                "nullable": true
              },
              "yomiSurname": {
                "type": "string",
                "description": "The phonetic Japanese surname (last name)  of the contact.",
                "nullable": true
              },
              "yomiCompanyName": {
                "type": "string",
                "description": "The phonetic Japanese company name of the contact.",
                "nullable": true
              },
              "generation": {
                "type": "string",
                "description": "The contact's generation.",
                "nullable": true
              },
              "emailAddresses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                    }
                  ],
                  "nullable": true
                },
                "description": "The contact's email addresses."
              },
              "websites": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.website"
                    }
                  ],
                  "nullable": true
                }
              },
              "imAddresses": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The contact's instant messaging (IM) addresses."
              },
              "jobTitle": {
                "type": "string",
                "description": "The contact’s job title.",
                "nullable": true
              },
              "companyName": {
                "type": "string",
                "description": "The name of the contact's company.",
                "nullable": true
              },
              "department": {
                "type": "string",
                "description": "The contact's department.",
                "nullable": true
              },
              "officeLocation": {
                "type": "string",
                "description": "The location of the contact's office.",
                "nullable": true
              },
              "profession": {
                "type": "string",
                "description": "The contact's profession.",
                "nullable": true
              },
              "assistantName": {
                "type": "string",
                "description": "The name of the contact's assistant.",
                "nullable": true
              },
              "manager": {
                "type": "string",
                "description": "The name of the contact's manager.",
                "nullable": true
              },
              "phones": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.phone"
                    }
                  ],
                  "nullable": true
                }
              },
              "postalAddresses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                    }
                  ],
                  "nullable": true
                }
              },
              "spouseName": {
                "type": "string",
                "description": "The name of the contact's spouse/partner.",
                "nullable": true
              },
              "personalNotes": {
                "type": "string",
                "description": "The user's notes about the contact.",
                "nullable": true
              },
              "children": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The names of the contact's children."
              },
              "weddingAnniversary": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "gender": {
                "type": "string",
                "nullable": true
              },
              "isFavorite": {
                "type": "boolean",
                "nullable": true
              },
              "flag": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.followupFlag"
                  }
                ],
                "description": "The flag value that indicates the status, start date, due date, or completion date for the message.",
                "nullable": true
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "changeKey": "String",
          "categories": [
            "String"
          ],
          "parentFolderId": "String",
          "birthday": "DateTimeOffset (timestamp)",
          "fileAs": "String",
          "displayName": "String",
          "givenName": "String",
          "initials": "String",
          "middleName": "String",
          "nickName": "String",
          "surname": "String",
          "title": "String",
          "yomiGivenName": "String",
          "yomiSurname": "String",
          "yomiCompanyName": "String",
          "generation": "String",
          "emailAddresses": [
            {
              "@odata.type": "microsoft.graph.emailAddress"
            }
          ],
          "websites": [
            {
              "@odata.type": "microsoft.graph.website"
            }
          ],
          "imAddresses": [
            "String"
          ],
          "jobTitle": "String",
          "companyName": "String",
          "department": "String",
          "officeLocation": "String",
          "profession": "String",
          "assistantName": "String",
          "manager": "String",
          "phones": [
            {
              "@odata.type": "microsoft.graph.phone"
            }
          ],
          "postalAddresses": [
            {
              "@odata.type": "microsoft.graph.physicalAddress"
            }
          ],
          "spouseName": "String",
          "personalNotes": "String",
          "children": [
            "String"
          ],
          "weddingAnniversary": "Date (timestamp)",
          "gender": "String",
          "isFavorite": true,
          "flag": {
            "@odata.type": "microsoft.graph.followupFlag"
          },
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "photo": {
            "@odata.type": "microsoft.graph.profilePhoto"
          }
        }
      },
      "microsoft.graph.contactFolder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "contactFolder",
            "type": "object",
            "properties": {
              "parentFolderId": {
                "type": "string",
                "description": "The ID of the folder's parent folder.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The folder's display name.",
                "nullable": true
              },
              "wellKnownName": {
                "type": "string",
                "nullable": true
              },
              "contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              },
              "childFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "parentFolderId": "String",
          "displayName": "String",
          "wellKnownName": "String",
          "contacts": [
            {
              "@odata.type": "microsoft.graph.contact"
            }
          ],
          "childFolders": [
            {
              "@odata.type": "microsoft.graph.contactFolder"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.inferenceClassification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "inferenceClassification",
            "type": "object",
            "properties": {
              "overrides": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationOverride"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "overrides": [
            {
              "@odata.type": "microsoft.graph.inferenceClassificationOverride"
            }
          ]
        }
      },
      "microsoft.graph.profilePhoto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "profilePhoto",
            "type": "object",
            "properties": {
              "height": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The height of the photo. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "width": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The width of the photo. Read-only.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "height": "Int32",
          "width": "Int32"
        }
      },
      "microsoft.graph.baseItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "baseItem",
            "type": "object",
            "properties": {
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user, device, or application which created the item. Read-only.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time of item creation. Read-only.",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "description": "Provides a user-visible description of the item. Optional.",
                "nullable": true
              },
              "eTag": {
                "type": "string",
                "description": "ETag for the item. Read-only.",
                "nullable": true
              },
              "lastModifiedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user, device, and application which last modified the item. Read-only.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time the item was last modified. Read-only.",
                "format": "date-time"
              },
              "name": {
                "type": "string",
                "description": "The name of the item. Read-write.",
                "nullable": true
              },
              "parentReference": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemReference"
                  }
                ],
                "description": "Parent information, if the item has a parent. Read-write.",
                "nullable": true
              },
              "webUrl": {
                "type": "string",
                "description": "URL that displays the resource in the browser. Read-only.",
                "nullable": true
              },
              "createdByUser": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              },
              "lastModifiedByUser": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "eTag": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "String",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          }
        }
      },
      "microsoft.graph.drive": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "drive",
            "type": "object",
            "properties": {
              "driveType": {
                "type": "string",
                "description": "Describes the type of drive represented by this resource. OneDrive personal drives will return personal. OneDrive for Business will return business. SharePoint document libraries will return documentLibrary. Read-only.",
                "nullable": true
              },
              "owner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Optional. The user account that owns the drive. Read-only.",
                "nullable": true
              },
              "quota": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.quota"
                  }
                ],
                "description": "Optional. Information about the drive's storage space quota. Read-only.",
                "nullable": true
              },
              "sharePointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "nullable": true
              },
              "system": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.systemFacet"
                  }
                ],
                "description": "If present, indicates that this is a system-managed drive. Read-only.",
                "nullable": true
              },
              "activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.itemActivity"
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              },
              "list": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.list"
                  }
                ],
                "nullable": true
              },
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "special": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "eTag": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "String",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "driveType": "String",
          "owner": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "quota": {
            "@odata.type": "microsoft.graph.quota"
          },
          "sharePointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "system": {
            "@odata.type": "microsoft.graph.systemFacet"
          },
          "activities": [
            {
              "@odata.type": "microsoft.graph.itemActivity"
            }
          ],
          "items": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ],
          "list": {
            "@odata.type": "microsoft.graph.list"
          },
          "root": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "special": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ]
        }
      },
      "microsoft.graph.officeGraphInsights": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "officeGraphInsights",
            "type": "object",
            "properties": {
              "trending": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.trending"
                }
              },
              "shared": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.sharedInsight"
                }
              },
              "used": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.usedInsight"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "trending": [
            {
              "@odata.type": "microsoft.graph.trending"
            }
          ],
          "shared": [
            {
              "@odata.type": "microsoft.graph.sharedInsight"
            }
          ],
          "used": [
            {
              "@odata.type": "microsoft.graph.usedInsight"
            }
          ]
        }
      },
      "microsoft.graph.plannerUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerUser",
            "type": "object",
            "properties": {
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              },
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ],
          "plans": [
            {
              "@odata.type": "microsoft.graph.plannerPlan"
            }
          ]
        }
      },
      "microsoft.graph.onenote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "onenote",
            "type": "object",
            "properties": {
              "notebooks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.notebook"
                }
              },
              "sections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                }
              },
              "sectionGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                }
              },
              "pages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenotePage"
                }
              },
              "resources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteResource"
                }
              },
              "operations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteOperation"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "notebooks": [
            {
              "@odata.type": "microsoft.graph.notebook"
            }
          ],
          "sections": [
            {
              "@odata.type": "microsoft.graph.onenoteSection"
            }
          ],
          "sectionGroups": [
            {
              "@odata.type": "microsoft.graph.sectionGroup"
            }
          ],
          "pages": [
            {
              "@odata.type": "microsoft.graph.onenotePage"
            }
          ],
          "resources": [
            {
              "@odata.type": "microsoft.graph.onenoteResource"
            }
          ],
          "operations": [
            {
              "@odata.type": "microsoft.graph.onenoteOperation"
            }
          ]
        }
      },
      "microsoft.graph.identityUserRisk": {
        "title": "identityUserRisk",
        "type": "object",
        "properties": {
          "level": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.userRiskLevel"
              }
            ],
            "nullable": true
          },
          "lastChangedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "level": {
            "@odata.type": "microsoft.graph.userRiskLevel"
          },
          "lastChangedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.managedDevice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDevice",
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "description": "Unique Identifier for the user associated with the device",
                "nullable": true
              },
              "deviceName": {
                "type": "string",
                "description": "Name of the device",
                "nullable": true
              },
              "hardwareInformation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.hardwareInformation"
                  }
                ],
                "description": "The hardward details for the device.  Includes information such as storage space, manufacturer, serial number, etc.",
                "nullable": true
              },
              "ownerType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.ownerType"
                  }
                ],
                "description": "Ownership of the device. Can be 'company' or 'personal'"
              },
              "deviceActionResults": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.deviceActionResult"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of ComplexType deviceActionResult objects."
              },
              "managementState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managementState"
                  }
                ],
                "description": "Management state of the device."
              },
              "enrolledDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Enrollment time of the device.",
                "format": "date-time"
              },
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time that the device last completed a successful sync with Intune.",
                "format": "date-time"
              },
              "chassisType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.chassisType"
                  }
                ],
                "description": "Chassis type of the device."
              },
              "operatingSystem": {
                "type": "string",
                "description": "Operating system of the device. Windows, iOS, etc.",
                "nullable": true
              },
              "deviceType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceType"
                  }
                ],
                "description": "Platform of the device."
              },
              "complianceState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceState"
                  }
                ],
                "description": "Compliance state of the device."
              },
              "jailBroken": {
                "type": "string",
                "description": "whether the device is jail broken or rooted.",
                "nullable": true
              },
              "managementAgent": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managementAgentType"
                  }
                ],
                "description": "Management channel of the device. Intune, EAS, etc."
              },
              "osVersion": {
                "type": "string",
                "description": "Operating system version of the device.",
                "nullable": true
              },
              "easActivated": {
                "type": "boolean",
                "description": "Whether the device is Exchange ActiveSync activated."
              },
              "easDeviceId": {
                "type": "string",
                "description": "Exchange ActiveSync Id of the device.",
                "nullable": true
              },
              "easActivationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Exchange ActivationSync activation time of the device.",
                "format": "date-time"
              },
              "aadRegistered": {
                "type": "boolean",
                "description": "Whether the device is Azure Active Directory registered.",
                "nullable": true
              },
              "azureADRegistered": {
                "type": "boolean",
                "description": "Whether the device is Azure Active Directory registered.",
                "nullable": true
              },
              "deviceEnrollmentType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentType"
                  }
                ],
                "description": "Enrollment type of the device."
              },
              "lostModeState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.lostModeState"
                  }
                ],
                "description": "Indicates if Lost mode is enabled or disabled"
              },
              "activationLockBypassCode": {
                "type": "string",
                "description": "Code that allows the Activation Lock on a device to be bypassed.",
                "nullable": true
              },
              "emailAddress": {
                "type": "string",
                "description": "Email(s) for the user associated with the device",
                "nullable": true
              },
              "azureActiveDirectoryDeviceId": {
                "type": "string",
                "description": "The unique identifier for the Azure Active Directory device. Read only.",
                "nullable": true
              },
              "deviceRegistrationState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceRegistrationState"
                  }
                ],
                "description": "Device registration state."
              },
              "deviceCategoryDisplayName": {
                "type": "string",
                "description": "Device category display name",
                "nullable": true
              },
              "isSupervised": {
                "type": "boolean",
                "description": "Device supervised status"
              },
              "exchangeLastSuccessfulSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last time the device contacted Exchange.",
                "format": "date-time"
              },
              "exchangeAccessState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeAccessState"
                  }
                ],
                "description": "The Access State of the device in Exchange."
              },
              "exchangeAccessStateReason": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeAccessStateReason"
                  }
                ],
                "description": "The reason for the device's access state in Exchange."
              },
              "remoteAssistanceSessionUrl": {
                "type": "string",
                "description": "Url that allows a Remote Assistance session to be established with the device.",
                "nullable": true
              },
              "remoteAssistanceSessionErrorString": {
                "type": "string",
                "description": "An error string that identifies issues when creating Remote Assistance session objects.",
                "nullable": true
              },
              "isEncrypted": {
                "type": "boolean",
                "description": "Device encryption status"
              },
              "userPrincipalName": {
                "type": "string",
                "description": "Device user principal name",
                "nullable": true
              },
              "model": {
                "type": "string",
                "description": "Model of the device",
                "nullable": true
              },
              "manufacturer": {
                "type": "string",
                "description": "Manufacturer of the device",
                "nullable": true
              },
              "imei": {
                "type": "string",
                "description": "IMEI",
                "nullable": true
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time"
              },
              "serialNumber": {
                "type": "string",
                "description": "SerialNumber",
                "nullable": true
              },
              "phoneNumber": {
                "type": "string",
                "description": "Phone number of the device",
                "nullable": true
              },
              "androidSecurityPatchLevel": {
                "type": "string",
                "description": "Android security patch level",
                "nullable": true
              },
              "userDisplayName": {
                "type": "string",
                "description": "User display name",
                "nullable": true
              },
              "configurationManagerClientEnabledFeatures": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.configurationManagerClientEnabledFeatures"
                  }
                ],
                "description": "ConfigrMgr client enabled features",
                "nullable": true
              },
              "wiFiMacAddress": {
                "type": "string",
                "description": "Wi-Fi MAC",
                "nullable": true
              },
              "deviceHealthAttestationState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceHealthAttestationState"
                  }
                ],
                "description": "The device health attestation state.",
                "nullable": true
              },
              "subscriberCarrier": {
                "type": "string",
                "description": "Subscriber Carrier",
                "nullable": true
              },
              "meid": {
                "type": "string",
                "description": "MEID",
                "nullable": true
              },
              "totalStorageSpaceInBytes": {
                "type": "integer",
                "description": "Total Storage in Bytes",
                "format": "int64"
              },
              "freeStorageSpaceInBytes": {
                "type": "integer",
                "description": "Free Storage in Bytes",
                "format": "int64"
              },
              "managedDeviceName": {
                "type": "string",
                "description": "Automatically generated name to identify a device. Can be overwritten to a user friendly name.",
                "nullable": true
              },
              "partnerReportedThreatState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedDevicePartnerReportedHealthState"
                  }
                ],
                "description": "Indicates the threat state of a device when a Mobile Threat Defense partner is in use by the account and device. Read Only."
              },
              "deviceConfigurationStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationState"
                }
              },
              "detectedApps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.detectedApp"
                }
              },
              "deviceCategory": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceCategory"
                  }
                ],
                "nullable": true
              },
              "windowsProtectionState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsProtectionState"
                  }
                ],
                "nullable": true
              },
              "deviceCompliancePolicyStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicyState"
                }
              }
            },
            "description": "Devices that are managed or pre-enrolled through Intune"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userId": "String",
          "deviceName": "String",
          "hardwareInformation": {
            "@odata.type": "microsoft.graph.hardwareInformation"
          },
          "ownerType": {
            "@odata.type": "microsoft.graph.ownerType"
          },
          "deviceActionResults": [
            {
              "@odata.type": "microsoft.graph.deviceActionResult"
            }
          ],
          "managementState": {
            "@odata.type": "microsoft.graph.managementState"
          },
          "enrolledDateTime": "DateTimeOffset (timestamp)",
          "lastSyncDateTime": "DateTimeOffset (timestamp)",
          "chassisType": {
            "@odata.type": "microsoft.graph.chassisType"
          },
          "operatingSystem": "String",
          "deviceType": {
            "@odata.type": "microsoft.graph.deviceType"
          },
          "complianceState": {
            "@odata.type": "microsoft.graph.complianceState"
          },
          "jailBroken": "String",
          "managementAgent": {
            "@odata.type": "microsoft.graph.managementAgentType"
          },
          "osVersion": "String",
          "easActivated": true,
          "easDeviceId": "String",
          "easActivationDateTime": "DateTimeOffset (timestamp)",
          "aadRegistered": true,
          "azureADRegistered": true,
          "deviceEnrollmentType": {
            "@odata.type": "microsoft.graph.deviceEnrollmentType"
          },
          "lostModeState": {
            "@odata.type": "microsoft.graph.lostModeState"
          },
          "activationLockBypassCode": "String",
          "emailAddress": "String",
          "azureActiveDirectoryDeviceId": "String",
          "deviceRegistrationState": {
            "@odata.type": "microsoft.graph.deviceRegistrationState"
          },
          "deviceCategoryDisplayName": "String",
          "isSupervised": true,
          "exchangeLastSuccessfulSyncDateTime": "DateTimeOffset (timestamp)",
          "exchangeAccessState": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeAccessState"
          },
          "exchangeAccessStateReason": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeAccessStateReason"
          },
          "remoteAssistanceSessionUrl": "String",
          "remoteAssistanceSessionErrorString": "String",
          "isEncrypted": true,
          "userPrincipalName": "String",
          "model": "String",
          "manufacturer": "String",
          "imei": "String",
          "complianceGracePeriodExpirationDateTime": "DateTimeOffset (timestamp)",
          "serialNumber": "String",
          "phoneNumber": "String",
          "androidSecurityPatchLevel": "String",
          "userDisplayName": "String",
          "configurationManagerClientEnabledFeatures": {
            "@odata.type": "microsoft.graph.configurationManagerClientEnabledFeatures"
          },
          "wiFiMacAddress": "String",
          "deviceHealthAttestationState": {
            "@odata.type": "microsoft.graph.deviceHealthAttestationState"
          },
          "subscriberCarrier": "String",
          "meid": "String",
          "totalStorageSpaceInBytes": "Int64",
          "freeStorageSpaceInBytes": "Int64",
          "managedDeviceName": "String",
          "partnerReportedThreatState": {
            "@odata.type": "microsoft.graph.managedDevicePartnerReportedHealthState"
          },
          "deviceConfigurationStates": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationState"
            }
          ],
          "detectedApps": [
            {
              "@odata.type": "microsoft.graph.detectedApp"
            }
          ],
          "deviceCategory": {
            "@odata.type": "microsoft.graph.deviceCategory"
          },
          "windowsProtectionState": {
            "@odata.type": "microsoft.graph.windowsProtectionState"
          },
          "deviceCompliancePolicyStates": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyState"
            }
          ]
        }
      },
      "microsoft.graph.managedAppRegistration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedAppRegistration",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time of creation",
                "format": "date-time"
              },
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time of last the app synced with management service.",
                "format": "date-time"
              },
              "applicationVersion": {
                "type": "string",
                "description": "App version",
                "nullable": true
              },
              "managementSdkVersion": {
                "type": "string",
                "description": "App management SDK version",
                "nullable": true
              },
              "platformVersion": {
                "type": "string",
                "description": "Operating System version",
                "nullable": true
              },
              "deviceType": {
                "type": "string",
                "description": "Host device type",
                "nullable": true
              },
              "deviceTag": {
                "type": "string",
                "description": "App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.",
                "nullable": true
              },
              "deviceName": {
                "type": "string",
                "description": "Host device name",
                "nullable": true
              },
              "flaggedReasons": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.managedAppFlaggedReason"
                    }
                  ]
                },
                "description": "Zero or more reasons an app registration is flagged. E.g. app running on rooted device"
              },
              "userId": {
                "type": "string",
                "description": "The user Id to who this app registration belongs.",
                "nullable": true
              },
              "appIdentifier": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileAppIdentifier"
                  }
                ],
                "description": "The app package Identifier",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              },
              "appliedPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
                }
              },
              "intendedPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
                }
              },
              "operations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppOperation"
                }
              }
            },
            "description": "The ManagedAppEntity is the base entity type for all other entity types under app management workflow."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastSyncDateTime": "DateTimeOffset (timestamp)",
          "applicationVersion": "String",
          "managementSdkVersion": "String",
          "platformVersion": "String",
          "deviceType": "String",
          "deviceTag": "String",
          "deviceName": "String",
          "flaggedReasons": [
            {
              "@odata.type": "microsoft.graph.managedAppFlaggedReason"
            }
          ],
          "userId": "String",
          "appIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "version": "String",
          "appliedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "intendedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "operations": [
            {
              "@odata.type": "microsoft.graph.managedAppOperation"
            }
          ]
        }
      },
      "microsoft.graph.device": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "device",
            "type": "object",
            "properties": {
              "accountEnabled": {
                "type": "boolean",
                "description": "true if the account is enabled; otherwise, false. Required.",
                "nullable": true
              },
              "alternativeSecurityIds": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.alternativeSecurityId"
                },
                "description": "For internal use only. Not nullable."
              },
              "approximateLastSignInDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z' Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "description": "Unique identifier set by Azure Device Registration Service at the time of registration.",
                "nullable": true
              },
              "deviceMetadata": {
                "type": "string",
                "description": "For interal use only. Set to null.",
                "nullable": true
              },
              "deviceVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "For interal use only.",
                "format": "int32",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name for the device. Required.",
                "nullable": true
              },
              "isCompliant": {
                "type": "boolean",
                "description": "true if the device complies with Mobile Device Management (MDM) policies; otherwise, false. Read-only.",
                "nullable": true
              },
              "isManaged": {
                "type": "boolean",
                "description": "true if the device is managed by a Mobile Device Management (MDM) app; otherwise, false.",
                "nullable": true
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time at which the object was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z' Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "description": "true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only.",
                "nullable": true
              },
              "operatingSystem": {
                "type": "string",
                "description": "The type of operating system on the device. Required.",
                "nullable": true
              },
              "operatingSystemVersion": {
                "type": "string",
                "description": "The version of the operating system on the device. Required.",
                "nullable": true
              },
              "physicalIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "For interal use only. Not nullable."
              },
              "trustType": {
                "type": "string",
                "description": "Type of trust for the joined device. Read-only. Possible values: Workplace - indicates bring your own personal devicesAzureAd - Cloud only joined devicesServerAd - on-premises domain joined devices joined to Azure AD. For more details, see Introduction to device management in Azure Active Directory",
                "nullable": true
              },
              "Name": {
                "type": "string",
                "nullable": true
              },
              "Manufacturer": {
                "type": "string",
                "nullable": true
              },
              "Model": {
                "type": "string",
                "nullable": true
              },
              "Kind": {
                "type": "string",
                "nullable": true
              },
              "Status": {
                "type": "string",
                "nullable": true
              },
              "Platform": {
                "type": "string",
                "nullable": true
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "registeredOwners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "registeredUsers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "commands": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.command"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "accountEnabled": true,
          "alternativeSecurityIds": [
            {
              "@odata.type": "microsoft.graph.alternativeSecurityId"
            }
          ],
          "approximateLastSignInDateTime": "DateTimeOffset (timestamp)",
          "deviceId": "String",
          "deviceMetadata": "String",
          "deviceVersion": "Int32",
          "displayName": "String",
          "isCompliant": true,
          "isManaged": true,
          "onPremisesLastSyncDateTime": "DateTimeOffset (timestamp)",
          "onPremisesSyncEnabled": true,
          "operatingSystem": "String",
          "operatingSystemVersion": "String",
          "physicalIds": [
            "String"
          ],
          "trustType": "String",
          "Name": "String",
          "Manufacturer": "String",
          "Model": "String",
          "Kind": "String",
          "Status": "String",
          "Platform": "String",
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "registeredOwners": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "registeredUsers": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "commands": [
            {
              "@odata.type": "microsoft.graph.command"
            }
          ]
        }
      },
      "microsoft.graph.deviceManagementTroubleshootingEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementTroubleshootingEvent",
            "type": "object",
            "properties": {
              "eventDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Time when the event occurred .",
                "format": "date-time"
              },
              "correlationId": {
                "type": "string",
                "description": "Id used for tracing the failure in the service.",
                "nullable": true
              }
            },
            "description": "Event representing an general failure."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "eventDateTime": "DateTimeOffset (timestamp)",
          "correlationId": "String"
        }
      },
      "microsoft.graph.directorySetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "directorySetting",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "templateId": {
                "type": "string",
                "nullable": true
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.settingValue"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "templateId": "String",
          "values": [
            {
              "@odata.type": "microsoft.graph.settingValue"
            }
          ]
        }
      },
      "microsoft.graph.endpoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "endpoint",
            "type": "object",
            "properties": {
              "capability": {
                "type": "string"
              },
              "providerId": {
                "type": "string",
                "nullable": true
              },
              "providerName": {
                "type": "string",
                "nullable": true
              },
              "uri": {
                "type": "string"
              },
              "providerResourceId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "capability": "String",
          "providerId": "String",
          "providerName": "String",
          "uri": "String",
          "providerResourceId": "String"
        }
      },
      "microsoft.graph.conversationThread": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "conversationThread",
            "type": "object",
            "properties": {
              "toRecipients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                },
                "description": "The To: recipients for the thread."
              },
              "topic": {
                "type": "string",
                "description": "The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated."
              },
              "hasAttachments": {
                "type": "boolean",
                "description": "Indicates whether any of the posts within this thread has at least one attachment."
              },
              "lastDeliveredDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time"
              },
              "uniqueSenders": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "All the users that sent a message to this thread."
              },
              "ccRecipients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                },
                "description": "The Cc: recipients for the thread."
              },
              "preview": {
                "type": "string",
                "description": "A short summary from the body of the latest post in this converstaion."
              },
              "isLocked": {
                "type": "boolean",
                "description": "Indicates if the thread is locked."
              },
              "posts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.post"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "toRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "topic": "String",
          "hasAttachments": true,
          "lastDeliveredDateTime": "DateTimeOffset (timestamp)",
          "uniqueSenders": [
            "String"
          ],
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "preview": "String",
          "isLocked": true,
          "posts": [
            {
              "@odata.type": "microsoft.graph.post"
            }
          ]
        }
      },
      "microsoft.graph.conversation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "conversation",
            "type": "object",
            "properties": {
              "topic": {
                "type": "string",
                "description": "The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated."
              },
              "hasAttachments": {
                "type": "boolean",
                "description": "Indicates whether any of the posts within this Conversation has at least one attachment."
              },
              "lastDeliveredDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time"
              },
              "uniqueSenders": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "All the users that sent a message to this Conversation."
              },
              "preview": {
                "type": "string",
                "description": "A short summary from the body of the latest post in this converstaion."
              },
              "threads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.conversationThread"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "topic": "String",
          "hasAttachments": true,
          "lastDeliveredDateTime": "DateTimeOffset (timestamp)",
          "uniqueSenders": [
            "String"
          ],
          "preview": "String",
          "threads": [
            {
              "@odata.type": "microsoft.graph.conversationThread"
            }
          ]
        }
      },
      "microsoft.graph.site": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "site",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The full title for the site. Read-only.",
                "nullable": true
              },
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.root"
                  }
                ],
                "description": "If present, indicates that this is the root site in the site collection. Read-only.",
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only.",
                "nullable": true
              },
              "siteCollection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.siteCollection"
                  }
                ],
                "description": "Provides details about the site's site collection. Available only on the root site. Read-only.",
                "nullable": true
              },
              "columns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                }
              },
              "contentTypes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contentType"
                }
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "drives": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.baseItem"
                }
              },
              "lists": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.list"
                }
              },
              "sites": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              },
              "onenote": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenote"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "eTag": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "String",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "displayName": "String",
          "root": {
            "@odata.type": "microsoft.graph.root"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "siteCollection": {
            "@odata.type": "microsoft.graph.siteCollection"
          },
          "columns": [
            {
              "@odata.type": "microsoft.graph.columnDefinition"
            }
          ],
          "contentTypes": [
            {
              "@odata.type": "microsoft.graph.contentType"
            }
          ],
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "drives": [
            {
              "@odata.type": "microsoft.graph.drive"
            }
          ],
          "items": [
            {
              "@odata.type": "microsoft.graph.baseItem"
            }
          ],
          "lists": [
            {
              "@odata.type": "microsoft.graph.list"
            }
          ],
          "sites": [
            {
              "@odata.type": "microsoft.graph.site"
            }
          ],
          "onenote": {
            "@odata.type": "microsoft.graph.onenote"
          }
        }
      },
      "microsoft.graph.plannerGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerGroup",
            "type": "object",
            "properties": {
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "plans": [
            {
              "@odata.type": "microsoft.graph.plannerPlan"
            }
          ]
        }
      },
      "microsoft.graph.team": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "team",
            "type": "object",
            "properties": {
              "memberSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.teamMemberSettings"
                  }
                ],
                "nullable": true
              },
              "messagingSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.teamMessagingSettings"
                  }
                ],
                "nullable": true
              },
              "funSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.teamFunSettings"
                  }
                ],
                "nullable": true
              },
              "guestSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.teamGuestSettings"
                  }
                ],
                "nullable": true
              },
              "channels": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.channel"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "memberSettings": {
            "@odata.type": "microsoft.graph.teamMemberSettings"
          },
          "messagingSettings": {
            "@odata.type": "microsoft.graph.teamMessagingSettings"
          },
          "funSettings": {
            "@odata.type": "microsoft.graph.teamFunSettings"
          },
          "guestSettings": {
            "@odata.type": "microsoft.graph.teamGuestSettings"
          },
          "channels": [
            {
              "@odata.type": "microsoft.graph.channel"
            }
          ]
        }
      },
      "microsoft.graph.channel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "channel",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "chatThreads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.chatThread"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "chatThreads": [
            {
              "@odata.type": "microsoft.graph.chatThread"
            }
          ]
        }
      },
      "microsoft.graph.groupLifecyclePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "groupLifecyclePolicy",
            "type": "object",
            "properties": {
              "groupLifetimeInDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before a group expires and needs to be renewed. Once renewed, the group expiration is extended by the number of days defined.",
                "format": "int32",
                "nullable": true
              },
              "managedGroupTypes": {
                "type": "string",
                "description": "The group type for which the expiration policy applies. Possible values are All, Selected or None.",
                "nullable": true
              },
              "alternateNotificationEmails": {
                "type": "string",
                "description": "List of email address to send notifications for groups without owners. Multiple email address can be defined by separating email address with a semicolon.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "groupLifetimeInDays": "Int32",
          "managedGroupTypes": "String",
          "alternateNotificationEmails": "String"
        }
      },
      "microsoft.graph.alternativeSecurityId": {
        "title": "alternativeSecurityId",
        "type": "object",
        "properties": {
          "type": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "For internal use only",
            "format": "int32",
            "nullable": true
          },
          "identityProvider": {
            "type": "string",
            "description": "For internal use only",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "For internal use only",
            "format": "base64url",
            "nullable": true
          }
        },
        "example": {
          "type": "Int32",
          "identityProvider": "String",
          "key": "Binary"
        }
      },
      "microsoft.graph.command": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "command",
            "type": "object",
            "properties": {
              "Status": {
                "type": "string",
                "nullable": true
              },
              "Type": {
                "type": "string",
                "nullable": true
              },
              "AppServiceName": {
                "type": "string",
                "nullable": true
              },
              "PackageFamilyName": {
                "type": "string",
                "nullable": true
              },
              "Error": {
                "type": "string",
                "nullable": true
              },
              "Payload": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.PayloadRequest"
                  }
                ],
                "nullable": true
              },
              "PermissionTicket": {
                "type": "string",
                "nullable": true
              },
              "PostBackUri": {
                "type": "string",
                "nullable": true
              },
              "responsepayload": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.payloadResponse"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "Status": "String",
          "Type": "String",
          "AppServiceName": "String",
          "PackageFamilyName": "String",
          "Error": "String",
          "Payload": {
            "@odata.type": "microsoft.graph.PayloadRequest"
          },
          "PermissionTicket": "String",
          "PostBackUri": "String",
          "responsepayload": {
            "@odata.type": "microsoft.graph.payloadResponse"
          }
        }
      },
      "microsoft.graph.administrativeUnit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "administrativeUnit",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "visibility": {
                "type": "string",
                "nullable": true
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "scopedRoleMembers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.scopedRoleMembership"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "description": "String",
          "visibility": "String",
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "members": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "scopedRoleMembers": [
            {
              "@odata.type": "microsoft.graph.scopedRoleMembership"
            }
          ]
        }
      },
      "microsoft.graph.organization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "organization",
            "type": "object",
            "properties": {
              "assignedPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.assignedPlan"
                },
                "description": "The collection of service plans associated with the tenant. Not nullable."
              },
              "businessPhones": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "city": {
                "type": "string",
                "description": "City name of the address for the organization",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Country/region name of the address for the organization",
                "nullable": true
              },
              "countryLetterCode": {
                "type": "string",
                "description": "Country/region abbreviation for the organization",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name for the tenant.",
                "nullable": true
              },
              "isMultipleDataLocationsForServicesEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "marketingNotificationEmails": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Not nullable."
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "postalCode": {
                "type": "string",
                "description": "Postal code of the address for the organization",
                "nullable": true
              },
              "preferredLanguage": {
                "type": "string",
                "description": "The preferred language for the organization. Should follow ISO 639-1 Code; for example 'en'.",
                "nullable": true
              },
              "provisionedPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.provisionedPlan"
                },
                "description": "Not nullable."
              },
              "securityComplianceNotificationMails": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "securityComplianceNotificationPhones": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "state": {
                "type": "string",
                "description": "State name of the address for the organization",
                "nullable": true
              },
              "street": {
                "type": "string",
                "description": "Street name of the address for organization",
                "nullable": true
              },
              "technicalNotificationMails": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Not nullable."
              },
              "verifiedDomains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.verifiedDomain"
                },
                "description": "The collection of domains associated with this tenant. Not nullable."
              },
              "mobileDeviceManagementAuthority": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mdmAuthority"
                  }
                ],
                "description": "Mobile device management authority."
              },
              "certificateConnectorSetting": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.certificateConnectorSetting"
                  }
                ],
                "description": "Certificate connector setting.",
                "nullable": true
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "depOnboardingSettings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.depOnboardingSetting"
                }
              },
              "appleVolumePurchaseProgramTokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.appleVolumePurchaseProgramToken"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "assignedPlans": [
            {
              "@odata.type": "microsoft.graph.assignedPlan"
            }
          ],
          "businessPhones": [
            "String"
          ],
          "city": "String",
          "country": "String",
          "countryLetterCode": "String",
          "displayName": "String",
          "isMultipleDataLocationsForServicesEnabled": true,
          "marketingNotificationEmails": [
            "String"
          ],
          "onPremisesLastSyncDateTime": "DateTimeOffset (timestamp)",
          "onPremisesSyncEnabled": true,
          "postalCode": "String",
          "preferredLanguage": "String",
          "provisionedPlans": [
            {
              "@odata.type": "microsoft.graph.provisionedPlan"
            }
          ],
          "securityComplianceNotificationMails": [
            "String"
          ],
          "securityComplianceNotificationPhones": [
            "String"
          ],
          "state": "String",
          "street": "String",
          "technicalNotificationMails": [
            "String"
          ],
          "verifiedDomains": [
            {
              "@odata.type": "microsoft.graph.verifiedDomain"
            }
          ],
          "mobileDeviceManagementAuthority": {
            "@odata.type": "microsoft.graph.mdmAuthority"
          },
          "certificateConnectorSetting": {
            "@odata.type": "microsoft.graph.certificateConnectorSetting"
          },
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "depOnboardingSettings": [
            {
              "@odata.type": "microsoft.graph.depOnboardingSetting"
            }
          ],
          "appleVolumePurchaseProgramTokens": [
            {
              "@odata.type": "microsoft.graph.appleVolumePurchaseProgramToken"
            }
          ]
        }
      },
      "microsoft.graph.verifiedDomain": {
        "title": "verifiedDomain",
        "type": "object",
        "properties": {
          "capabilities": {
            "type": "string",
            "description": "For example, 'Email', 'OfficeCommunicationsOnline'.",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "true if this is the default domain associated with the tenant; otherwise, false.",
            "nullable": true
          },
          "isInitial": {
            "type": "boolean",
            "description": "true if this is the initial domain associated with the tenant; otherwise, false",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The domain name; for example, 'contoso.onmicrosoft.com'",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "For example, 'Managed'.",
            "nullable": true
          }
        },
        "example": {
          "capabilities": "String",
          "isDefault": true,
          "isInitial": true,
          "name": "String",
          "type": "String"
        }
      },
      "microsoft.graph.certificateConnectorSetting": {
        "title": "certificateConnectorSetting",
        "type": "object",
        "properties": {
          "status": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Certificate connector status",
            "format": "int32"
          },
          "certExpiryTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Certificate expire time",
            "format": "date-time"
          },
          "enrollmentError": {
            "type": "string",
            "description": "Certificate connector enrollment error",
            "nullable": true
          },
          "lastConnectorConnectionTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Last time certificate connector connected",
            "format": "date-time"
          },
          "connectorVersion": {
            "type": "string",
            "description": "Version of certificate connector",
            "nullable": true
          },
          "lastUploadVersion": {
            "type": "integer",
            "description": "Version of last uploaded certificate connector",
            "format": "int64"
          }
        },
        "example": {
          "status": "Int32",
          "certExpiryTime": "DateTimeOffset (timestamp)",
          "enrollmentError": "String",
          "lastConnectorConnectionTime": "DateTimeOffset (timestamp)",
          "connectorVersion": "String",
          "lastUploadVersion": "Int64"
        }
      },
      "microsoft.graph.depOnboardingSetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "depOnboardingSetting",
            "type": "object",
            "properties": {
              "appleIdentifier": {
                "type": "string",
                "description": "The Apple ID used to obtain the current token.",
                "nullable": true
              },
              "tokenExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "When the token will expire.",
                "format": "date-time"
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "When the service was onboarded.",
                "format": "date-time"
              },
              "lastSuccessfulSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "When the service last syned with Intune",
                "format": "date-time"
              },
              "lastSyncTriggeredDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "When Intune last requested a sync.",
                "format": "date-time"
              },
              "shareTokenWithSchoolDataSyncService": {
                "type": "boolean",
                "description": "Whether or not the Dep token sharing is enabled with the School Data Sync service."
              },
              "lastSyncErrorCode": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Error code reported by Apple during last dep sync.",
                "format": "int32"
              }
            },
            "description": "The depOnboardingSetting represents an instance of the Apple DEP service being onboarded to Intune. The onboarded service instance manages an Apple Token used to synchronize data between Apple and Intune."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "appleIdentifier": "String",
          "tokenExpirationDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "lastSuccessfulSyncDateTime": "DateTimeOffset (timestamp)",
          "lastSyncTriggeredDateTime": "DateTimeOffset (timestamp)",
          "shareTokenWithSchoolDataSyncService": true,
          "lastSyncErrorCode": "Int32"
        }
      },
      "microsoft.graph.appleVolumePurchaseProgramToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "appleVolumePurchaseProgramToken",
            "type": "object",
            "properties": {
              "organizationName": {
                "type": "string",
                "description": "The organization associated with the Apple Volume Purchase Program Token",
                "nullable": true
              },
              "volumePurchaseProgramTokenAccountType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.volumePurchaseProgramTokenAccountType"
                  }
                ],
                "description": "The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: `business`, `education`."
              },
              "appleId": {
                "type": "string",
                "description": "The apple Id associated with the given Apple Volume Purchase Program Token.",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The expiration date time of the Apple Volume Purchase Program Token.",
                "format": "date-time"
              },
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.",
                "format": "date-time"
              },
              "token": {
                "type": "string",
                "description": "The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modification date time associated with the Apple Volume Purchase Program Token.",
                "format": "date-time"
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.volumePurchaseProgramTokenState"
                  }
                ],
                "description": "Current state of the Apple Volume Purchase Program Token. Possible values are: `unknown`, `valid`, `expired`, `invalid`."
              },
              "lastSyncStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.volumePurchaseProgramTokenSyncStatus"
                  }
                ],
                "description": "Current sync status of the last application sync which was triggered using the Apple Volume Purchase Program Token. Possible values are: `none`, `inProgress`, `completed`, `failed`."
              },
              "automaticallyUpdateApps": {
                "type": "boolean",
                "description": "Whether or not apps for the VPP token will be automatically updated."
              },
              "countryOrRegion": {
                "type": "string",
                "description": "Whether or not apps for the VPP token will be automatically updated.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "organizationName": "String",
          "volumePurchaseProgramTokenAccountType": {
            "@odata.type": "microsoft.graph.volumePurchaseProgramTokenAccountType"
          },
          "appleId": "String",
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "lastSyncDateTime": "DateTimeOffset (timestamp)",
          "token": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "state": {
            "@odata.type": "microsoft.graph.volumePurchaseProgramTokenState"
          },
          "lastSyncStatus": {
            "@odata.type": "microsoft.graph.volumePurchaseProgramTokenSyncStatus"
          },
          "automaticallyUpdateApps": true,
          "countryOrRegion": "String"
        }
      },
      "microsoft.graph.schemaExtension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "schemaExtension",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description for the schema extension.",
                "nullable": true
              },
              "targetTypes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Set of Microsoft Graph types (that can support extensions) that the schema extension can be applied to. Select from contact, device, event, group, message, organization, post, or user."
              },
              "properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extensionSchemaProperty"
                },
                "description": "The collection of property names and types that make up the schema extension definition."
              },
              "status": {
                "type": "string",
                "description": "The lifecycle state of the schema extension. Possible states are InDevelopment, Available, and Deprecated. Automatically set to InDevelopment on creation. Schema extensions provides more information on the possible state transitions and behaviors."
              },
              "owner": {
                "type": "string",
                "description": "The appId of the application that is the owner of the schema extension. This property can be supplied on creation, to set the owner.  If not supplied, then the calling application's appId will be set as the owner. In either case, the signed-in user must be the owner of the application. Once set, this property is read-only and cannot be changed."
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "description": "String",
          "targetTypes": [
            "String"
          ],
          "properties": [
            {
              "@odata.type": "microsoft.graph.extensionSchemaProperty"
            }
          ],
          "status": "String",
          "owner": "String"
        }
      },
      "microsoft.graph.extensionSchemaProperty": {
        "title": "extensionSchemaProperty",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the strongly-typed property defined as part of a schema extension.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of the property that is defined as part of a schema extension.  Allowed values are Binary, Boolean, DateTime, Integer or String.  See the table below for more details.",
            "nullable": true
          }
        },
        "example": {
          "name": "String",
          "type": "String"
        }
      },
      "microsoft.graph.directory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "directory",
            "type": "object",
            "properties": {
              "deletedItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedItems": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ]
        }
      },
      "microsoft.graph.extensionProperty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "extensionProperty",
            "type": "object",
            "properties": {
              "appDisplayName": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string"
              },
              "dataType": {
                "type": "string"
              },
              "isSyncedFromOnPremises": {
                "type": "boolean",
                "nullable": true
              },
              "targetObjects": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "appDisplayName": "String",
          "name": "String",
          "dataType": "String",
          "isSyncedFromOnPremises": true,
          "targetObjects": [
            "String"
          ]
        }
      },
      "microsoft.graph.allowedDataLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "allowedDataLocation",
            "type": "object",
            "properties": {
              "appId": {
                "type": "string",
                "nullable": true
              },
              "location": {
                "type": "string",
                "nullable": true
              },
              "isDefault": {
                "type": "boolean",
                "nullable": true
              },
              "domain": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "appId": "String",
          "location": "String",
          "isDefault": true,
          "domain": "String"
        }
      },
      "microsoft.graph.application": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "application",
            "type": "object",
            "properties": {
              "api": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.api"
                  }
                ],
                "nullable": true
              },
              "allowPublicClient": {
                "type": "boolean",
                "nullable": true
              },
              "applicationAliases": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "appRoles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.appRole"
                }
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "installedClients": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.installedClient"
                  }
                ],
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "info": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.informationalUrl"
                  }
                ],
                "nullable": true
              },
              "keyCredentials": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.keyCredential"
                }
              },
              "logo": {
                "type": "string",
                "format": "base64url"
              },
              "orgRestrictions": {
                "type": "array",
                "items": {
                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                  "type": "string",
                  "format": "uuid"
                }
              },
              "passwordCredentials": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.passwordCredential"
                }
              },
              "preAuthorizedApplications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.preAuthorizedApplication"
                }
              },
              "requiredResourceAccess": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.requiredResourceAccess"
                }
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "web": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.web"
                  }
                ],
                "nullable": true
              },
              "extensionProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extensionProperty"
                }
              },
              "createdOnBehalfOf": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                  }
                ],
                "nullable": true
              },
              "owners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "policies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "synchronization": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.synchronization"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "api": {
            "@odata.type": "microsoft.graph.api"
          },
          "allowPublicClient": true,
          "applicationAliases": [
            "String"
          ],
          "appRoles": [
            {
              "@odata.type": "microsoft.graph.appRole"
            }
          ],
          "createdDateTime": "DateTimeOffset (timestamp)",
          "installedClients": {
            "@odata.type": "microsoft.graph.installedClient"
          },
          "displayName": "String",
          "info": {
            "@odata.type": "microsoft.graph.informationalUrl"
          },
          "keyCredentials": [
            {
              "@odata.type": "microsoft.graph.keyCredential"
            }
          ],
          "logo": "Stream",
          "orgRestrictions": [
            "Guid"
          ],
          "passwordCredentials": [
            {
              "@odata.type": "microsoft.graph.passwordCredential"
            }
          ],
          "preAuthorizedApplications": [
            {
              "@odata.type": "microsoft.graph.preAuthorizedApplication"
            }
          ],
          "requiredResourceAccess": [
            {
              "@odata.type": "microsoft.graph.requiredResourceAccess"
            }
          ],
          "tags": [
            "String"
          ],
          "web": {
            "@odata.type": "microsoft.graph.web"
          },
          "extensionProperties": [
            {
              "@odata.type": "microsoft.graph.extensionProperty"
            }
          ],
          "createdOnBehalfOf": {
            "@odata.type": "microsoft.graph.directoryObject"
          },
          "owners": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "policies": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "synchronization": {
            "@odata.type": "microsoft.graph.synchronization"
          }
        }
      },
      "microsoft.graph.api": {
        "title": "api",
        "type": "object",
        "properties": {
          "acceptedAccessTokenVersion": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "publishedPermissionScopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.permissionScope"
            }
          }
        },
        "example": {
          "acceptedAccessTokenVersion": "Int32",
          "publishedPermissionScopes": [
            {
              "@odata.type": "microsoft.graph.permissionScope"
            }
          ]
        }
      },
      "microsoft.graph.permissionScope": {
        "title": "permissionScope",
        "type": "object",
        "properties": {
          "adminConsentDescription": {
            "type": "string",
            "nullable": true
          },
          "adminConsentDisplayName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "userConsentDescription": {
            "type": "string",
            "nullable": true
          },
          "userConsentDisplayName": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "adminConsentDescription": "String",
          "adminConsentDisplayName": "String",
          "id": "Guid",
          "isEnabled": true,
          "origin": "String",
          "type": "String",
          "userConsentDescription": "String",
          "userConsentDisplayName": "String",
          "value": "String"
        }
      },
      "microsoft.graph.appRole": {
        "title": "appRole",
        "type": "object",
        "properties": {
          "allowedMemberTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "allowedMemberTypes": [
            "String"
          ],
          "description": "String",
          "displayName": "String",
          "id": "Guid",
          "isEnabled": true,
          "origin": "String",
          "value": "String"
        }
      },
      "microsoft.graph.installedClient": {
        "title": "installedClient",
        "type": "object",
        "properties": {
          "redirectUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "example": {
          "redirectUrls": [
            "String"
          ]
        }
      },
      "microsoft.graph.informationalUrl": {
        "title": "informationalUrl",
        "type": "object",
        "properties": {
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "marketingUrl": {
            "type": "string",
            "nullable": true
          },
          "privacyStatementUrl": {
            "type": "string",
            "nullable": true
          },
          "supportUrl": {
            "type": "string",
            "nullable": true
          },
          "termsOfServiceUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "logoUrl": "String",
          "marketingUrl": "String",
          "privacyStatementUrl": "String",
          "supportUrl": "String",
          "termsOfServiceUrl": "String"
        }
      },
      "microsoft.graph.keyCredential": {
        "title": "keyCredential",
        "type": "object",
        "properties": {
          "customKeyIdentifier": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "endDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "keyId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "startDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "usage": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          }
        },
        "example": {
          "customKeyIdentifier": "Binary",
          "endDateTime": "DateTimeOffset (timestamp)",
          "keyId": "Guid",
          "startDateTime": "DateTimeOffset (timestamp)",
          "type": "String",
          "usage": "String",
          "key": "Binary"
        }
      },
      "microsoft.graph.passwordCredential": {
        "title": "passwordCredential",
        "type": "object",
        "properties": {
          "customKeyIdentifier": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "endDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "keyId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "startDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "secretText": {
            "type": "string",
            "nullable": true
          },
          "hint": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "customKeyIdentifier": "Binary",
          "endDateTime": "DateTimeOffset (timestamp)",
          "keyId": "Guid",
          "startDateTime": "DateTimeOffset (timestamp)",
          "secretText": "String",
          "hint": "String"
        }
      },
      "microsoft.graph.preAuthorizedApplication": {
        "title": "preAuthorizedApplication",
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "nullable": true
          },
          "permissionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "example": {
          "appId": "String",
          "permissionIds": [
            "String"
          ]
        }
      },
      "microsoft.graph.requiredResourceAccess": {
        "title": "requiredResourceAccess",
        "type": "object",
        "properties": {
          "resourceAppId": {
            "type": "string"
          },
          "resourceAccess": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.resourceAccess"
            }
          }
        },
        "example": {
          "resourceAppId": "String",
          "resourceAccess": [
            {
              "@odata.type": "microsoft.graph.resourceAccess"
            }
          ]
        }
      },
      "microsoft.graph.resourceAccess": {
        "title": "resourceAccess",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": "Guid",
          "type": "String"
        }
      },
      "microsoft.graph.web": {
        "title": "web",
        "type": "object",
        "properties": {
          "redirectUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logoutUrl": {
            "type": "string",
            "nullable": true
          },
          "oauth2AllowImplicitFlow": {
            "type": "boolean",
            "nullable": true
          }
        },
        "example": {
          "redirectUrls": [
            "String"
          ],
          "logoutUrl": "String",
          "oauth2AllowImplicitFlow": true
        }
      },
      "microsoft.graph.synchronization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "synchronization",
            "type": "object",
            "properties": {
              "secrets": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.synchronizationSecretKeyStringValuePair"
                    }
                  ],
                  "nullable": true
                }
              },
              "jobs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.synchronizationJob"
                }
              },
              "templates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.synchronizationTemplate"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "secrets": [
            {
              "@odata.type": "microsoft.graph.synchronizationSecretKeyStringValuePair"
            }
          ],
          "jobs": [
            {
              "@odata.type": "microsoft.graph.synchronizationJob"
            }
          ],
          "templates": [
            {
              "@odata.type": "microsoft.graph.synchronizationTemplate"
            }
          ]
        }
      },
      "microsoft.graph.appRoleAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "appRoleAssignment",
            "type": "object",
            "properties": {
              "creationTimestamp": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "principalDisplayName": {
                "type": "string",
                "nullable": true
              },
              "principalId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "principalType": {
                "type": "string",
                "nullable": true
              },
              "resourceDisplayName": {
                "type": "string",
                "nullable": true
              },
              "resourceId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "creationTimestamp": "DateTimeOffset (timestamp)",
          "principalDisplayName": "String",
          "principalId": "Guid",
          "principalType": "String",
          "resourceDisplayName": "String",
          "resourceId": "Guid"
        }
      },
      "microsoft.graph.orgContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "orgContact",
            "type": "object",
            "properties": {
              "businessPhones": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "city": {
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "type": "string",
                "nullable": true
              },
              "country": {
                "type": "string",
                "nullable": true
              },
              "department": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "givenName": {
                "type": "string",
                "nullable": true
              },
              "jobTitle": {
                "type": "string",
                "nullable": true
              },
              "mail": {
                "type": "string",
                "nullable": true
              },
              "mailNickname": {
                "type": "string",
                "nullable": true
              },
              "mobilePhone": {
                "type": "string",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesProvisioningErrors": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.onPremisesProvisioningError"
                    }
                  ],
                  "nullable": true
                }
              },
              "officeLocation": {
                "type": "string",
                "nullable": true
              },
              "postalCode": {
                "type": "string",
                "nullable": true
              },
              "proxyAddresses": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "state": {
                "type": "string",
                "nullable": true
              },
              "streetAddress": {
                "type": "string",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "nullable": true
              },
              "manager": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                  }
                ],
                "nullable": true
              },
              "directReports": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "memberOf": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "businessPhones": [
            "String"
          ],
          "city": "String",
          "companyName": "String",
          "country": "String",
          "department": "String",
          "displayName": "String",
          "givenName": "String",
          "jobTitle": "String",
          "mail": "String",
          "mailNickname": "String",
          "mobilePhone": "String",
          "onPremisesSyncEnabled": true,
          "onPremisesLastSyncDateTime": "DateTimeOffset (timestamp)",
          "onPremisesProvisioningErrors": [
            {
              "@odata.type": "microsoft.graph.onPremisesProvisioningError"
            }
          ],
          "officeLocation": "String",
          "postalCode": "String",
          "proxyAddresses": [
            "String"
          ],
          "state": "String",
          "streetAddress": "String",
          "surname": "String",
          "manager": {
            "@odata.type": "microsoft.graph.directoryObject"
          },
          "directReports": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "memberOf": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ]
        }
      },
      "microsoft.graph.directoryRole": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "directoryRole",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "The description for the directory role. Read-only.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name for the directory role. Read-only.",
                "nullable": true
              },
              "roleTemplateId": {
                "type": "string",
                "description": "The id of the directoryRoleTemplate that this role is based on. The property must be specified when activating a directory role in a tenant with a POST operation. After the directory role has been activated, the property is read only.",
                "nullable": true
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "scopedMembers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.scopedRoleMembership"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "roleTemplateId": "String",
          "members": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "scopedMembers": [
            {
              "@odata.type": "microsoft.graph.scopedRoleMembership"
            }
          ]
        }
      },
      "microsoft.graph.directoryRoleTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "directoryRoleTemplate",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "The description to set for the directory role. Read-only.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name to set for the directory role. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.settingValue": {
        "title": "settingValue",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the setting (as defined by the groupSettingTemplate).",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value of the setting.",
            "nullable": true
          }
        },
        "example": {
          "name": "String",
          "value": "String"
        }
      },
      "microsoft.graph.directorySettingTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "directorySettingTemplate",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.settingTemplateValue"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "description": "String",
          "values": [
            {
              "@odata.type": "microsoft.graph.settingTemplateValue"
            }
          ]
        }
      },
      "microsoft.graph.settingTemplateValue": {
        "title": "settingTemplateValue",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the setting.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the setting.",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "description": "Default value for the setting.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the setting.",
            "nullable": true
          }
        },
        "example": {
          "name": "String",
          "type": "String",
          "defaultValue": "String",
          "description": "String"
        }
      },
      "microsoft.graph.domain": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "domain",
            "type": "object",
            "properties": {
              "authenticationType": {
                "type": "string",
                "description": "Indicates the configured authentication type for the domain. The value is either Managed or Federated. Managed indicates a cloud managed domain where Azure AD performs user authentication.Federated indicates authentication is federated with an identity provider such as the tenant's on-premises Active Directory via Active Directory Federation Services. Not nullable"
              },
              "availabilityStatus": {
                "type": "string",
                "description": "This property is always null except when the verify action is used. When the verify action is used, a domain entity is returned in the response. The availabilityStatus property of the domain entity in the response is either AvailableImmediately or EmailVerifiedDomainTakeoverScheduled.",
                "nullable": true
              },
              "isAdminManaged": {
                "type": "boolean",
                "description": "The value of the property is false if the DNS record management of the domain has been delegated to Office 365. Otherwise, the value is true. Not nullable"
              },
              "isDefault": {
                "type": "boolean",
                "description": "True if this is the default domain that is used for user creation. There is only one default domain per company. Not nullable"
              },
              "isInitial": {
                "type": "boolean",
                "description": "True if this is the initial domain created by Microsoft Online Services (companyname.onmicrosoft.com). There is only one initial domain per company. Not nullable"
              },
              "isRoot": {
                "type": "boolean",
                "description": "True if the domain is a verified root domain. Otherwise, false if the domain is a subdomain or unverified. Not nullable"
              },
              "isVerified": {
                "type": "boolean",
                "description": "True if the domain has completed domain ownership verification. Not nullable"
              },
              "supportedServices": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The capabilities assigned to the domain.Can include 0, 1 or more of following values: Email, Sharepoint, EmailInternalRelayOnly, OfficeCommunicationsOnline, SharePointDefaultDomain, FullRedelegation, SharePointPublic, OrgIdAuthentication, Yammer, Intune The values which you can add/remove using Graph API include: Email, OfficeCommunicationsOnline, YammerNot nullable"
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.domainState"
                  }
                ],
                "description": "Status of asynchronous operations scheduled for the domain.",
                "nullable": true
              },
              "serviceConfigurationRecords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              },
              "verificationDnsRecords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              },
              "domainNameReferences": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "authenticationType": "String",
          "availabilityStatus": "String",
          "isAdminManaged": true,
          "isDefault": true,
          "isInitial": true,
          "isRoot": true,
          "isVerified": true,
          "supportedServices": [
            "String"
          ],
          "state": {
            "@odata.type": "microsoft.graph.domainState"
          },
          "serviceConfigurationRecords": [
            {
              "@odata.type": "microsoft.graph.domainDnsRecord"
            }
          ],
          "verificationDnsRecords": [
            {
              "@odata.type": "microsoft.graph.domainDnsRecord"
            }
          ],
          "domainNameReferences": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ]
        }
      },
      "microsoft.graph.domainState": {
        "title": "domainState",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Current status of the operation.  Scheduled - Operation has been scheduled but has not started.  InProgress - Task has started and is in progress.  Failed - Operation has failed.",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "description": "Type of asynchronous operation. The values can be ForceDelete or Verification",
            "nullable": true
          },
          "lastActionDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Timestamp for when the last activity occurred. The value is updated when an operation is scheduled, the asynchronous task starts, and when the operation completes.",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "status": "String",
          "operation": "String",
          "lastActionDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.domainDnsRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "domainDnsRecord",
            "type": "object",
            "properties": {
              "isOptional": {
                "type": "boolean",
                "description": "If false, this record must be configured by the customer at the DNS host for Microsoft Online Services to operate correctly with the domain."
              },
              "label": {
                "type": "string",
                "description": "Value used when configuring the name of the DNS record at the DNS host."
              },
              "recordType": {
                "type": "string",
                "description": "Indicates what type of DNS record this entity represents.The value can be one of the following: CName, Mx, Srv, TxtKey",
                "nullable": true
              },
              "supportedService": {
                "type": "string",
                "description": "Microsoft Online Service or feature that has a dependency on this DNS record.Can be one of the following values: null, Email, Sharepoint, EmailInternalRelayOnly, OfficeCommunicationsOnline, SharePointDefaultDomain, FullRedelegation, SharePointPublic, OrgIdAuthentication, Yammer, Intune"
              },
              "ttl": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value to use when configuring the time-to-live (ttl) property of the DNS record at the DNS host. Not nullable",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "isOptional": true,
          "label": "String",
          "recordType": "String",
          "supportedService": "String",
          "ttl": "Int32"
        }
      },
      "microsoft.graph.domainDnsCnameRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsCnameRecord",
            "type": "object",
            "properties": {
              "canonicalName": {
                "type": "string",
                "description": "The canonical name of the CNAME record. Used to configure the CNAME record at the DNS host.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "isOptional": true,
          "label": "String",
          "recordType": "String",
          "supportedService": "String",
          "ttl": "Int32",
          "canonicalName": "String"
        }
      },
      "microsoft.graph.domainDnsMxRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsMxRecord",
            "type": "object",
            "properties": {
              "mailExchange": {
                "type": "string",
                "description": "Value used when configuring the answer/destination/value of the MX record at the DNS host."
              },
              "preference": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value used when configuring the Preference/Priority property of the MX record at the DNS host.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "isOptional": true,
          "label": "String",
          "recordType": "String",
          "supportedService": "String",
          "ttl": "Int32",
          "mailExchange": "String",
          "preference": "Int32"
        }
      },
      "microsoft.graph.domainDnsSrvRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsSrvRecord",
            "type": "object",
            "properties": {
              "nameTarget": {
                "type": "string",
                "description": "Value to use when configuring the Target property of the SRV record at the DNS host.",
                "nullable": true
              },
              "port": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value to use when configuring the port property of the SRV record at the DNS host.",
                "format": "int32",
                "nullable": true
              },
              "priority": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value to use when configuring the priority property of the SRV record at the DNS host.",
                "format": "int32",
                "nullable": true
              },
              "protocol": {
                "type": "string",
                "description": "Value to use when configuring the protocol property of the SRV record at the DNS host.",
                "nullable": true
              },
              "service": {
                "type": "string",
                "description": "Value to use when configuring the service property of the SRV record at the DNS host.",
                "nullable": true
              },
              "weight": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value to use when configuring the weight property of the SRV record at the DNS host.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "isOptional": true,
          "label": "String",
          "recordType": "String",
          "supportedService": "String",
          "ttl": "Int32",
          "nameTarget": "String",
          "port": "Int32",
          "priority": "Int32",
          "protocol": "String",
          "service": "String",
          "weight": "Int32"
        }
      },
      "microsoft.graph.domainDnsTxtRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsTxtRecord",
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Value used when configuring the text property at the DNS host."
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "isOptional": true,
          "label": "String",
          "recordType": "String",
          "supportedService": "String",
          "ttl": "Int32",
          "text": "String"
        }
      },
      "microsoft.graph.domainDnsUnavailableRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsUnavailableRecord",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Provides the reason why the DomainDnsUnavailableRecord entity is returned.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "isOptional": true,
          "label": "String",
          "recordType": "String",
          "supportedService": "String",
          "ttl": "Int32",
          "description": "String"
        }
      },
      "microsoft.graph.servicePlanInfo": {
        "title": "servicePlanInfo",
        "type": "object",
        "properties": {
          "servicePlanId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "The unique identifier of the service plan.",
            "format": "uuid",
            "nullable": true
          },
          "servicePlanName": {
            "type": "string",
            "description": "The name of the service plan.",
            "nullable": true
          },
          "provisioningStatus": {
            "type": "string",
            "description": "The provisioning status of the service plan. Possible values:'Success' - Service is fully provisioned.'Disabled' - Service has been disabled.'PendingInput' - Service is not yet provisioned; awaiting service confirmation.'PendingActivation' - Service is provisioned but requires explicit activation by administrator (for example, Intune_O365 service plan)'PendingProvisioning' - Microsoft has added a new service to the product SKU and it has not been activated in the tenant, yet.",
            "nullable": true
          },
          "appliesTo": {
            "type": "string",
            "description": "The object the service plan can be assigned to. Possible values:'User' - service plan can be assigned to individual users.'Company' - service plan can be assigned to the entire tenant.",
            "nullable": true
          }
        },
        "example": {
          "servicePlanId": "Guid",
          "servicePlanName": "String",
          "provisioningStatus": "String",
          "appliesTo": "String"
        }
      },
      "microsoft.graph.oAuth2PermissionGrant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "oAuth2PermissionGrant",
            "type": "object",
            "properties": {
              "clientId": {
                "type": "string"
              },
              "consentType": {
                "type": "string",
                "nullable": true
              },
              "expiryTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "principalId": {
                "type": "string",
                "nullable": true
              },
              "resourceId": {
                "type": "string"
              },
              "scope": {
                "type": "string"
              },
              "startTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "clientId": "String",
          "consentType": "String",
          "expiryTime": "DateTimeOffset (timestamp)",
          "principalId": "String",
          "resourceId": "String",
          "scope": "String",
          "startTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.policy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "policy",
            "type": "object",
            "properties": {
              "alternativeIdentifier": {
                "type": "string",
                "nullable": true
              },
              "definition": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "displayName": {
                "type": "string"
              },
              "isOrganizationDefault": {
                "type": "boolean",
                "nullable": true
              },
              "keyCredentials": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.keyCredential"
                }
              },
              "type": {
                "type": "string"
              },
              "appliesTo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "alternativeIdentifier": "String",
          "definition": [
            "String"
          ],
          "displayName": "String",
          "isOrganizationDefault": true,
          "keyCredentials": [
            {
              "@odata.type": "microsoft.graph.keyCredential"
            }
          ],
          "type": "String",
          "appliesTo": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ]
        }
      },
      "microsoft.graph.servicePrincipal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "servicePrincipal",
            "type": "object",
            "properties": {
              "accountEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "addIns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.addIn"
                }
              },
              "appDisplayName": {
                "type": "string",
                "nullable": true
              },
              "appId": {
                "type": "string",
                "nullable": true
              },
              "appOwnerOrganizationId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "appRoleAssignmentRequired": {
                "type": "boolean"
              },
              "appRoles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.appRole"
                }
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "errorUrl": {
                "type": "string",
                "nullable": true
              },
              "homepage": {
                "type": "string",
                "nullable": true
              },
              "keyCredentials": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.keyCredential"
                }
              },
              "logoutUrl": {
                "type": "string",
                "nullable": true
              },
              "oauth2Permissions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.oAuth2Permission"
                }
              },
              "passwordCredentials": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.passwordCredential"
                }
              },
              "preferredTokenSigningKeyThumbprint": {
                "type": "string",
                "nullable": true
              },
              "publisherName": {
                "type": "string",
                "nullable": true
              },
              "replyUrls": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "samlMetadataUrl": {
                "type": "string",
                "nullable": true
              },
              "servicePrincipalNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "appRoleAssignedTo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.appRoleAssignment"
                }
              },
              "appRoleAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.appRoleAssignment"
                }
              },
              "oauth2PermissionGrants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.oAuth2PermissionGrant"
                }
              },
              "memberOf": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "createdObjects": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "licenseDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.licenseDetails"
                }
              },
              "owners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "ownedObjects": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "policies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "synchronization": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.synchronization"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "accountEnabled": true,
          "addIns": [
            {
              "@odata.type": "microsoft.graph.addIn"
            }
          ],
          "appDisplayName": "String",
          "appId": "String",
          "appOwnerOrganizationId": "Guid",
          "appRoleAssignmentRequired": true,
          "appRoles": [
            {
              "@odata.type": "microsoft.graph.appRole"
            }
          ],
          "displayName": "String",
          "errorUrl": "String",
          "homepage": "String",
          "keyCredentials": [
            {
              "@odata.type": "microsoft.graph.keyCredential"
            }
          ],
          "logoutUrl": "String",
          "oauth2Permissions": [
            {
              "@odata.type": "microsoft.graph.oAuth2Permission"
            }
          ],
          "passwordCredentials": [
            {
              "@odata.type": "microsoft.graph.passwordCredential"
            }
          ],
          "preferredTokenSigningKeyThumbprint": "String",
          "publisherName": "String",
          "replyUrls": [
            "String"
          ],
          "samlMetadataUrl": "String",
          "servicePrincipalNames": [
            "String"
          ],
          "tags": [
            "String"
          ],
          "appRoleAssignedTo": [
            {
              "@odata.type": "microsoft.graph.appRoleAssignment"
            }
          ],
          "appRoleAssignments": [
            {
              "@odata.type": "microsoft.graph.appRoleAssignment"
            }
          ],
          "oauth2PermissionGrants": [
            {
              "@odata.type": "microsoft.graph.oAuth2PermissionGrant"
            }
          ],
          "memberOf": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "createdObjects": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "licenseDetails": [
            {
              "@odata.type": "microsoft.graph.licenseDetails"
            }
          ],
          "owners": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "ownedObjects": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "policies": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "synchronization": {
            "@odata.type": "microsoft.graph.synchronization"
          }
        }
      },
      "microsoft.graph.addIn": {
        "title": "addIn",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.keyValue"
            }
          }
        },
        "example": {
          "id": "Guid",
          "type": "String",
          "properties": [
            {
              "@odata.type": "microsoft.graph.keyValue"
            }
          ]
        }
      },
      "microsoft.graph.keyValue": {
        "title": "keyValue",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "key": "String",
          "value": "String"
        }
      },
      "microsoft.graph.oAuth2Permission": {
        "title": "oAuth2Permission",
        "type": "object",
        "properties": {
          "adminConsentDescription": {
            "type": "string",
            "nullable": true
          },
          "adminConsentDisplayName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "userConsentDescription": {
            "type": "string",
            "nullable": true
          },
          "userConsentDisplayName": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "adminConsentDescription": "String",
          "adminConsentDisplayName": "String",
          "id": "Guid",
          "isEnabled": true,
          "origin": "String",
          "type": "String",
          "userConsentDescription": "String",
          "userConsentDisplayName": "String",
          "value": "String"
        }
      },
      "microsoft.graph.subscribedSku": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "subscribedSku",
            "type": "object",
            "properties": {
              "capabilityStatus": {
                "type": "string",
                "description": "For example, 'Enabled'.",
                "nullable": true
              },
              "consumedUnits": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of licenses that have been assigned.",
                "format": "int32",
                "nullable": true
              },
              "prepaidUnits": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.licenseUnitsDetail"
                  }
                ],
                "description": "Information about the number and status of prepaid licenses.",
                "nullable": true
              },
              "servicePlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.servicePlanInfo"
                },
                "description": "Information about the service plans that are available with the SKU. Not nullable"
              },
              "skuId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "The unique identifier (GUID) for the service SKU.",
                "format": "uuid",
                "nullable": true
              },
              "skuPartNumber": {
                "type": "string",
                "description": "The SKU part number; for example: 'AAD_PREMIUM' or 'RMSBASIC'.",
                "nullable": true
              },
              "appliesTo": {
                "type": "string",
                "description": "For example, 'User' or 'Company'.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "capabilityStatus": "String",
          "consumedUnits": "Int32",
          "prepaidUnits": {
            "@odata.type": "microsoft.graph.licenseUnitsDetail"
          },
          "servicePlans": [
            {
              "@odata.type": "microsoft.graph.servicePlanInfo"
            }
          ],
          "skuId": "Guid",
          "skuPartNumber": "String",
          "appliesTo": "String"
        }
      },
      "microsoft.graph.licenseUnitsDetail": {
        "title": "licenseUnitsDetail",
        "type": "object",
        "properties": {
          "enabled": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of units that are enabled.",
            "format": "int32",
            "nullable": true
          },
          "suspended": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of units that are suspended.",
            "format": "int32",
            "nullable": true
          },
          "warning": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of units that are in warning status.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "enabled": "Int32",
          "suspended": "Int32",
          "warning": "Int32"
        }
      },
      "microsoft.graph.identity": {
        "title": "identity",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the identity.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "The identity's display name. Note that this may not always be available or up to date. For example, if a user changes their display name, the API may show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.",
            "nullable": true
          }
        },
        "example": {
          "id": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.ComplexExtensionValue": {
        "title": "ComplexExtensionValue",
        "type": "object"
      },
      "microsoft.graph.contract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "contract",
            "type": "object",
            "properties": {
              "contractType": {
                "type": "string",
                "description": "Type of contract.Possible values are: SyndicationPartner - Partner that exclusively resells and manages O365 and Intune for this customer. They resell and support their customers. BreadthPartner - Partner has the ability to provide administrative support for this customer. However, the partner is not allowed to resell to the customer.ResellerPartner - Partner that is similar to a syndication partner, except that the partner doesn’t have exclusive access to a tenant. In the syndication case, the customer cannot buy additional direct subscriptions from Microsoft or from other partners.",
                "nullable": true
              },
              "customerId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "The unique identifier for the customer tenant referenced by this partnership. Corresponds to the id property of the customer tenant's organization resource.",
                "format": "uuid",
                "nullable": true
              },
              "defaultDomainName": {
                "type": "string",
                "description": "A copy of the customer tenant's default domain name. The copy is made when the partnership with the customer is established. It is not automatically updated if the customer tenant's default domain name changes.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "A copy of the customer tenant's display name. The copy is made when the partnership with the customer is established. It is not automatically updated if the customer tenant's display name changes.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deletedDateTime": "DateTimeOffset (timestamp)",
          "contractType": "String",
          "customerId": "Guid",
          "defaultDomainName": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.allowedDataLocationInfo": {
        "title": "allowedDataLocationInfo",
        "type": "object"
      },
      "microsoft.graph.historyItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "historyItem",
            "type": "object",
            "properties": {
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.status"
                  }
                ],
                "nullable": true
              },
              "activeDurationSeconds": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastActiveDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "startedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time"
              },
              "userTimezone": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "status": {
            "@odata.type": "microsoft.graph.status"
          },
          "activeDurationSeconds": "Int32",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastActiveDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "startedDateTime": "DateTimeOffset (timestamp)",
          "userTimezone": "String"
        }
      },
      "microsoft.graph.Json": {
        "title": "Json",
        "type": "object"
      },
      "microsoft.graph.imageInfo": {
        "title": "imageInfo",
        "type": "object",
        "properties": {
          "iconUrl": {
            "type": "string",
            "description": "Optional; URI that points to an icon which represents the application used to generate the activity",
            "nullable": true
          },
          "alternativeText": {
            "type": "string",
            "nullable": true
          },
          "addImageQuery": {
            "type": "boolean",
            "description": "Optional; parameter used to indicate the server is able to render image dynamically in response to parameterization. For example – a high contrast image",
            "nullable": true
          }
        },
        "example": {
          "iconUrl": "String",
          "alternativeText": "String",
          "addImageQuery": true
        }
      },
      "microsoft.graph.visualInfo": {
        "title": "visualInfo",
        "type": "object",
        "properties": {
          "attribution": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.imageInfo"
              }
            ],
            "description": "Optional. JSON object used to represent an icon which represents the application used to generate the activity",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "description": "Optional. Background color used to render the activity in the UI - brand color for the application source of the activity. Must be a valid hex color",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Optional. Longer text description of the user's unique activity (example: document name, first sentence, and/or metadata)",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "description": "Required. Short text description of the user's unique activity (for example, document name in cases where an activity refers to document creation)"
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.Json"
              }
            ],
            "description": "Optional. Custom piece of data - JSON object used to provide custom content to render the activity in the Windows Shell UI",
            "nullable": true
          }
        },
        "example": {
          "attribution": {
            "@odata.type": "microsoft.graph.imageInfo"
          },
          "backgroundColor": "String",
          "description": "String",
          "displayText": "String",
          "content": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.root": {
        "title": "root",
        "type": "object"
      },
      "microsoft.graph.sharepointIds": {
        "title": "sharepointIds",
        "type": "object",
        "properties": {
          "listId": {
            "type": "string",
            "description": "The unique identifier (guid) for the item's list in SharePoint.",
            "nullable": true
          },
          "listItemId": {
            "type": "string",
            "description": "An integer identifier for the item within the containing list.",
            "nullable": true
          },
          "listItemUniqueId": {
            "type": "string",
            "description": "The unique identifier (guid) for the item within OneDrive for Business or a SharePoint site.",
            "nullable": true
          },
          "siteId": {
            "type": "string",
            "description": "The unique identifier (guid) for the item's site collection (SPSite).",
            "nullable": true
          },
          "siteUrl": {
            "type": "string",
            "description": "The SharePoint URL for the site that contains the item.",
            "nullable": true
          },
          "webId": {
            "type": "string",
            "description": "The unique identifier (guid) for the item's site (SPWeb).",
            "nullable": true
          }
        },
        "example": {
          "listId": "String",
          "listItemId": "String",
          "listItemUniqueId": "String",
          "siteId": "String",
          "siteUrl": "String",
          "webId": "String"
        }
      },
      "microsoft.graph.siteCollection": {
        "title": "siteCollection",
        "type": "object",
        "properties": {
          "dataLocationCode": {
            "type": "string",
            "nullable": true
          },
          "hostname": {
            "type": "string",
            "description": "The hostname for the site collection. Read-only.",
            "nullable": true
          },
          "root": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.root"
              }
            ],
            "description": "If present, indicates that this is a root site collection in SharePoint. Read-only.",
            "nullable": true
          }
        },
        "example": {
          "dataLocationCode": "String",
          "hostname": "String",
          "root": {
            "@odata.type": "microsoft.graph.root"
          }
        }
      },
      "microsoft.graph.columnDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "columnDefinition",
            "type": "object",
            "properties": {
              "boolean": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.booleanColumn"
                  }
                ],
                "description": "This column stores boolean values.",
                "nullable": true
              },
              "calculated": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calculatedColumn"
                  }
                ],
                "description": "This column's data is calculated based on other columns.",
                "nullable": true
              },
              "choice": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.choiceColumn"
                  }
                ],
                "description": "This column stores data from a list of choices.",
                "nullable": true
              },
              "columnGroup": {
                "type": "string",
                "description": "For site columns, the name of the group this column belongs to. Helps organize related columns.",
                "nullable": true
              },
              "currency": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.currencyColumn"
                  }
                ],
                "description": "This column stores currency values.",
                "nullable": true
              },
              "dateTime": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeColumn"
                  }
                ],
                "description": "This column stores DateTime values.",
                "nullable": true
              },
              "defaultValue": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defaultColumnValue"
                  }
                ],
                "description": "The default value for this column.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "The user-facing description of the column.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The user-facing name of the column.",
                "nullable": true
              },
              "enforceUniqueValues": {
                "type": "boolean",
                "description": "If true, no two list items may have the same value for this column.",
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "description": "Specifies whether the column is displayed in the user interface.",
                "nullable": true
              },
              "indexed": {
                "type": "boolean",
                "description": "Specifies whether the column values can used for sorting and searching.",
                "nullable": true
              },
              "lookup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.lookupColumn"
                  }
                ],
                "description": "This column's data is looked up from another source in the site.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The API-facing name of the column as it appears in the [fields][] on a [listItem][]. For the user-facing name, see displayName.",
                "nullable": true
              },
              "number": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.numberColumn"
                  }
                ],
                "description": "This column stores number values.",
                "nullable": true
              },
              "personOrGroup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.personOrGroupColumn"
                  }
                ],
                "description": "This column stores Person or Group values.",
                "nullable": true
              },
              "readOnly": {
                "type": "boolean",
                "description": "Specifies whether the column values can be modified.",
                "nullable": true
              },
              "required": {
                "type": "boolean",
                "description": "Specifies whether the column value is not optional.",
                "nullable": true
              },
              "text": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.textColumn"
                  }
                ],
                "description": "This column stores text values.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "boolean": {
            "@odata.type": "microsoft.graph.booleanColumn"
          },
          "calculated": {
            "@odata.type": "microsoft.graph.calculatedColumn"
          },
          "choice": {
            "@odata.type": "microsoft.graph.choiceColumn"
          },
          "columnGroup": "String",
          "currency": {
            "@odata.type": "microsoft.graph.currencyColumn"
          },
          "dateTime": {
            "@odata.type": "microsoft.graph.dateTimeColumn"
          },
          "defaultValue": {
            "@odata.type": "microsoft.graph.defaultColumnValue"
          },
          "description": "String",
          "displayName": "String",
          "enforceUniqueValues": true,
          "hidden": true,
          "indexed": true,
          "lookup": {
            "@odata.type": "microsoft.graph.lookupColumn"
          },
          "name": "String",
          "number": {
            "@odata.type": "microsoft.graph.numberColumn"
          },
          "personOrGroup": {
            "@odata.type": "microsoft.graph.personOrGroupColumn"
          },
          "readOnly": true,
          "required": true,
          "text": {
            "@odata.type": "microsoft.graph.textColumn"
          }
        }
      },
      "microsoft.graph.contentType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "contentType",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "The descriptive text for the item.",
                "nullable": true
              },
              "group": {
                "type": "string",
                "description": "The name of the group this content type belongs to. Helps organize related content types.",
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "description": "Indicates whether the content type is hidden in the list's 'New' menu.",
                "nullable": true
              },
              "inheritedFrom": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemReference"
                  }
                ],
                "description": "If this content type is inherited from another scope (like a site), provides a reference to the item where the content type is defined.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The name of the content type.",
                "nullable": true
              },
              "order": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.contentTypeOrder"
                  }
                ],
                "description": "Specifies the order in which the content type appears in the selection UI.",
                "nullable": true
              },
              "parentId": {
                "type": "string",
                "description": "The unique identifier of the content type.",
                "nullable": true
              },
              "readOnly": {
                "type": "boolean",
                "description": "If true, the content type cannot be modified unless this value is first set to false.",
                "nullable": true
              },
              "sealed": {
                "type": "boolean",
                "description": "If true, the content type cannot be modified by users or through push-down operations. Only site collection administrators can seal or unseal content types.",
                "nullable": true
              },
              "columnLinks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.columnLink"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "description": "String",
          "group": "String",
          "hidden": true,
          "inheritedFrom": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "name": "String",
          "order": {
            "@odata.type": "microsoft.graph.contentTypeOrder"
          },
          "parentId": "String",
          "readOnly": true,
          "sealed": true,
          "columnLinks": [
            {
              "@odata.type": "microsoft.graph.columnLink"
            }
          ]
        }
      },
      "microsoft.graph.list": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "list",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The displayable title of the list.",
                "nullable": true
              },
              "list": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.listInfo"
                  }
                ],
                "description": "Provides additional details about the list.",
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only.",
                "nullable": true
              },
              "system": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.systemFacet"
                  }
                ],
                "description": "If present, indicates that this is a system-managed list. Read-only.",
                "nullable": true
              },
              "activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.itemActivity"
                }
              },
              "columns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                }
              },
              "contentTypes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contentType"
                }
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.listItem"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "eTag": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "String",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "displayName": "String",
          "list": {
            "@odata.type": "microsoft.graph.listInfo"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "system": {
            "@odata.type": "microsoft.graph.systemFacet"
          },
          "activities": [
            {
              "@odata.type": "microsoft.graph.itemActivity"
            }
          ],
          "columns": [
            {
              "@odata.type": "microsoft.graph.columnDefinition"
            }
          ],
          "contentTypes": [
            {
              "@odata.type": "microsoft.graph.contentType"
            }
          ],
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "items": [
            {
              "@odata.type": "microsoft.graph.listItem"
            }
          ]
        }
      },
      "microsoft.graph.listInfo": {
        "title": "listInfo",
        "type": "object",
        "properties": {
          "contentTypesEnabled": {
            "type": "boolean",
            "description": "If true, indicates that content types are enabled for this list.",
            "nullable": true
          },
          "hidden": {
            "type": "boolean",
            "description": "If true, indicates that the list is not normally visible in the SharePoint user experience.",
            "nullable": true
          },
          "template": {
            "type": "string",
            "description": "An enumerated value that represents the base list template used in creating the list. Possible values include documentLibrary, genericList, task, survey, announcements, contacts, and more.",
            "nullable": true
          }
        },
        "example": {
          "contentTypesEnabled": true,
          "hidden": true,
          "template": "String"
        }
      },
      "microsoft.graph.systemFacet": {
        "title": "systemFacet",
        "type": "object"
      },
      "microsoft.graph.itemActivity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "itemActivity",
            "type": "object",
            "properties": {
              "action": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemActionSet"
                  }
                ],
                "nullable": true
              },
              "actor": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "times": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemActivityTimeSet"
                  }
                ],
                "nullable": true
              },
              "driveItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "listItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.listItem"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "action": {
            "@odata.type": "microsoft.graph.itemActionSet"
          },
          "actor": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "times": {
            "@odata.type": "microsoft.graph.itemActivityTimeSet"
          },
          "driveItem": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "listItem": {
            "@odata.type": "microsoft.graph.listItem"
          }
        }
      },
      "microsoft.graph.listItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "listItem",
            "type": "object",
            "properties": {
              "contentType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.contentTypeInfo"
                  }
                ],
                "description": "The content type of this list item",
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only.",
                "nullable": true
              },
              "activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.itemActivity"
                }
              },
              "driveItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "fields": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.fieldValueSet"
                  }
                ],
                "nullable": true
              },
              "versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.listItemVersion"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "eTag": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "String",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "contentType": {
            "@odata.type": "microsoft.graph.contentTypeInfo"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "activities": [
            {
              "@odata.type": "microsoft.graph.itemActivity"
            }
          ],
          "driveItem": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "fields": {
            "@odata.type": "microsoft.graph.fieldValueSet"
          },
          "versions": [
            {
              "@odata.type": "microsoft.graph.listItemVersion"
            }
          ]
        }
      },
      "microsoft.graph.identitySet": {
        "title": "identitySet",
        "type": "object",
        "properties": {
          "application": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "description": "Optional. The application associated with this action.",
            "nullable": true
          },
          "device": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "description": "Optional. The device associated with this action.",
            "nullable": true
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "description": "Optional. The user associated with this action.",
            "nullable": true
          }
        },
        "example": {
          "application": {
            "@odata.type": "microsoft.graph.identity"
          },
          "device": {
            "@odata.type": "microsoft.graph.identity"
          },
          "user": {
            "@odata.type": "microsoft.graph.identity"
          }
        }
      },
      "microsoft.graph.quota": {
        "title": "quota",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "integer",
            "description": "Total space consumed by files in the recycle bin, in bytes. Read-only.",
            "format": "int64",
            "nullable": true
          },
          "remaining": {
            "type": "integer",
            "description": "Total space remaining before reaching the quota limit, in bytes. Read-only.",
            "format": "int64",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Enumeration value that indicates the state of the storage space. Read-only.",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total allowed storage space, in bytes. Read-only.",
            "format": "int64",
            "nullable": true
          },
          "used": {
            "type": "integer",
            "description": "Total space used, in bytes. Read-only.",
            "format": "int64",
            "nullable": true
          }
        },
        "example": {
          "deleted": "Int64",
          "remaining": "Int64",
          "state": "String",
          "total": "Int64",
          "used": "Int64"
        }
      },
      "microsoft.graph.driveItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "driveItem",
            "type": "object",
            "properties": {
              "audio": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.audio"
                  }
                ],
                "description": "Audio metadata, if the item is an audio file. Read-only.",
                "nullable": true
              },
              "content": {
                "type": "string",
                "description": "The content stream, if the item represents a file.",
                "format": "base64url",
                "nullable": true
              },
              "cTag": {
                "type": "string",
                "description": "An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.",
                "nullable": true
              },
              "deleted": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deleted"
                  }
                ],
                "description": "Information about the deleted state of the item. Read-only.",
                "nullable": true
              },
              "file": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.file"
                  }
                ],
                "description": "File metadata, if the item is a file. Read-only.",
                "nullable": true
              },
              "fileSystemInfo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.fileSystemInfo"
                  }
                ],
                "description": "File system information on client. Read-write.",
                "nullable": true
              },
              "folder": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.folder"
                  }
                ],
                "description": "Folder metadata, if the item is a folder. Read-only.",
                "nullable": true
              },
              "image": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.image"
                  }
                ],
                "description": "Image metadata, if the item is an image. Read-only.",
                "nullable": true
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.geoCoordinates"
                  }
                ],
                "description": "Location metadata, if the item has location data. Read-only.",
                "nullable": true
              },
              "package": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.package"
                  }
                ],
                "description": "If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only.",
                "nullable": true
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.photo"
                  }
                ],
                "description": "Photo metadata, if the item is a photo. Read-only.",
                "nullable": true
              },
              "publication": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.publicationFacet"
                  }
                ],
                "description": "Provides information about the published or checked-out state of an item, in locations that support such actions. This property is not returned by default. Read-only.",
                "nullable": true
              },
              "remoteItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.remoteItem"
                  }
                ],
                "description": "Remote item data, if the item is shared from a drive other than the one being accessed. Read-only.",
                "nullable": true
              },
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.root"
                  }
                ],
                "description": "If this property is non-null, it indicates that the driveItem is the top-most driveItem in the drive.",
                "nullable": true
              },
              "searchResult": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.searchResult"
                  }
                ],
                "description": "Search metadata, if the item is from a search result. Read-only.",
                "nullable": true
              },
              "shared": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.shared"
                  }
                ],
                "description": "Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only.",
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only.",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "description": "Size of the item in bytes. Read-only.",
                "format": "int64",
                "nullable": true
              },
              "specialFolder": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.specialFolder"
                  }
                ],
                "description": "If the current item is also available as a special folder, this facet is returned. Read-only.",
                "nullable": true
              },
              "video": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.video"
                  }
                ],
                "description": "Video metadata, if the item is a video. Read-only.",
                "nullable": true
              },
              "webDavUrl": {
                "type": "string",
                "description": "WebDAV compatible URL for the item.",
                "nullable": true
              },
              "workbook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbook"
                  }
                ],
                "nullable": true
              },
              "activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.itemActivity"
                }
              },
              "children": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              },
              "listItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.listItem"
                  }
                ],
                "nullable": true
              },
              "permissions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.permission"
                }
              },
              "thumbnails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.thumbnailSet"
                }
              },
              "versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItemVersion"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "eTag": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "String",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "audio": {
            "@odata.type": "microsoft.graph.audio"
          },
          "content": "Stream",
          "cTag": "String",
          "deleted": {
            "@odata.type": "microsoft.graph.deleted"
          },
          "file": {
            "@odata.type": "microsoft.graph.file"
          },
          "fileSystemInfo": {
            "@odata.type": "microsoft.graph.fileSystemInfo"
          },
          "folder": {
            "@odata.type": "microsoft.graph.folder"
          },
          "image": {
            "@odata.type": "microsoft.graph.image"
          },
          "location": {
            "@odata.type": "microsoft.graph.geoCoordinates"
          },
          "package": {
            "@odata.type": "microsoft.graph.package"
          },
          "photo": {
            "@odata.type": "microsoft.graph.photo"
          },
          "publication": {
            "@odata.type": "microsoft.graph.publicationFacet"
          },
          "remoteItem": {
            "@odata.type": "microsoft.graph.remoteItem"
          },
          "root": {
            "@odata.type": "microsoft.graph.root"
          },
          "searchResult": {
            "@odata.type": "microsoft.graph.searchResult"
          },
          "shared": {
            "@odata.type": "microsoft.graph.shared"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "size": "Int64",
          "specialFolder": {
            "@odata.type": "microsoft.graph.specialFolder"
          },
          "video": {
            "@odata.type": "microsoft.graph.video"
          },
          "webDavUrl": "String",
          "workbook": {
            "@odata.type": "microsoft.graph.workbook"
          },
          "activities": [
            {
              "@odata.type": "microsoft.graph.itemActivity"
            }
          ],
          "children": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ],
          "listItem": {
            "@odata.type": "microsoft.graph.listItem"
          },
          "permissions": [
            {
              "@odata.type": "microsoft.graph.permission"
            }
          ],
          "thumbnails": [
            {
              "@odata.type": "microsoft.graph.thumbnailSet"
            }
          ],
          "versions": [
            {
              "@odata.type": "microsoft.graph.driveItemVersion"
            }
          ]
        }
      },
      "microsoft.graph.workbook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbook",
            "type": "object",
            "properties": {
              "application": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookApplication"
                  }
                ],
                "nullable": true
              },
              "names": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookNamedItem"
                }
              },
              "tables": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTable"
                }
              },
              "worksheets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                }
              },
              "functions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookFunctions"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "application": {
            "@odata.type": "microsoft.graph.workbookApplication"
          },
          "names": [
            {
              "@odata.type": "microsoft.graph.workbookNamedItem"
            }
          ],
          "tables": [
            {
              "@odata.type": "microsoft.graph.workbookTable"
            }
          ],
          "worksheets": [
            {
              "@odata.type": "microsoft.graph.workbookWorksheet"
            }
          ],
          "functions": {
            "@odata.type": "microsoft.graph.workbookFunctions"
          }
        }
      },
      "microsoft.graph.audio": {
        "title": "audio",
        "type": "object",
        "properties": {
          "album": {
            "type": "string",
            "description": "The title of the album for this audio file.",
            "nullable": true
          },
          "albumArtist": {
            "type": "string",
            "description": "The artist named on the album for the audio file.",
            "nullable": true
          },
          "artist": {
            "type": "string",
            "description": "The performing artist for the audio file.",
            "nullable": true
          },
          "bitrate": {
            "type": "integer",
            "description": "Bitrate expressed in kbps.",
            "format": "int64",
            "nullable": true
          },
          "composers": {
            "type": "string",
            "description": "The name of the composer of the audio file.",
            "nullable": true
          },
          "copyright": {
            "type": "string",
            "description": "Copyright information for the audio file.",
            "nullable": true
          },
          "disc": {
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "description": "The number of the disc this audio file came from.",
            "format": "int16",
            "nullable": true
          },
          "discCount": {
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "description": "The total number of discs in this album.",
            "format": "int16",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "description": "Duration of the audio file, expressed in milliseconds",
            "format": "int64",
            "nullable": true
          },
          "genre": {
            "type": "string",
            "description": "The genre of this audio file.",
            "nullable": true
          },
          "hasDrm": {
            "type": "boolean",
            "description": "Indicates if the file is protected with digital rights management.",
            "nullable": true
          },
          "isVariableBitrate": {
            "type": "boolean",
            "description": "Indicates if the file is encoded with a variable bitrate.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the audio file.",
            "nullable": true
          },
          "track": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of the track on the original disc for this audio file.",
            "format": "int32",
            "nullable": true
          },
          "trackCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The total number of tracks on the original disc for this audio file.",
            "format": "int32",
            "nullable": true
          },
          "year": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The year the audio file was recorded.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "album": "String",
          "albumArtist": "String",
          "artist": "String",
          "bitrate": "Int64",
          "composers": "String",
          "copyright": "String",
          "disc": "Int16",
          "discCount": "Int16",
          "duration": "Int64",
          "genre": "String",
          "hasDrm": true,
          "isVariableBitrate": true,
          "title": "String",
          "track": "Int32",
          "trackCount": "Int32",
          "year": "Int32"
        }
      },
      "microsoft.graph.deleted": {
        "title": "deleted",
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Represents the state of the deleted item.",
            "nullable": true
          }
        },
        "example": {
          "state": "String"
        }
      },
      "microsoft.graph.file": {
        "title": "file",
        "type": "object",
        "properties": {
          "hashes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.hashes"
              }
            ],
            "description": "Hashes of the file's binary content, if available. Read-only.",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "description": "The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only.",
            "nullable": true
          },
          "processingMetadata": {
            "type": "boolean",
            "nullable": true
          }
        },
        "example": {
          "hashes": {
            "@odata.type": "microsoft.graph.hashes"
          },
          "mimeType": "String",
          "processingMetadata": true
        }
      },
      "microsoft.graph.hashes": {
        "title": "hashes",
        "type": "object",
        "properties": {
          "crc32Hash": {
            "type": "string",
            "description": "The CRC32 value of the file (if available). Read-only.",
            "nullable": true
          },
          "quickXorHash": {
            "type": "string",
            "description": "A proprietary hash of the file that can be used to determine if the contents of the file have changed (if available). Read-only.",
            "nullable": true
          },
          "sha1Hash": {
            "type": "string",
            "description": "SHA1 hash for the contents of the file (if available). Read-only.",
            "nullable": true
          }
        },
        "example": {
          "crc32Hash": "String",
          "quickXorHash": "String",
          "sha1Hash": "String"
        }
      },
      "microsoft.graph.fileSystemInfo": {
        "title": "fileSystemInfo",
        "type": "object",
        "properties": {
          "createdDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The UTC date and time the file was created on a client.",
            "format": "date-time",
            "nullable": true
          },
          "lastAccessedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The UTC date and time the file was last accessed. Available for the recent file list only.",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The UTC date and time the file was last modified on a client.",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastAccessedDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.folder": {
        "title": "folder",
        "type": "object",
        "properties": {
          "childCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of children contained immediately within this container.",
            "format": "int32",
            "nullable": true
          },
          "view": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.folderView"
              }
            ],
            "description": "A collection of properties defining the recommended view for the folder.",
            "nullable": true
          }
        },
        "example": {
          "childCount": "Int32",
          "view": {
            "@odata.type": "microsoft.graph.folderView"
          }
        }
      },
      "microsoft.graph.folderView": {
        "title": "folderView",
        "type": "object",
        "properties": {
          "sortBy": {
            "type": "string",
            "description": "The method by which the folder should be sorted.",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "description": "If true, indicates that items should be sorted in descending order. Otherwise, items should be sorted ascending.",
            "nullable": true
          },
          "viewType": {
            "type": "string",
            "description": "The type of view that should be used to represent the folder.",
            "nullable": true
          }
        },
        "example": {
          "sortBy": "String",
          "sortOrder": "String",
          "viewType": "String"
        }
      },
      "microsoft.graph.image": {
        "title": "image",
        "type": "object",
        "properties": {
          "height": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Optional. Height of the image, in pixels. Read-only.",
            "format": "int32",
            "nullable": true
          },
          "width": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Optional. Width of the image, in pixels. Read-only.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "height": "Int32",
          "width": "Int32"
        }
      },
      "microsoft.graph.geoCoordinates": {
        "title": "geoCoordinates",
        "type": "object",
        "properties": {
          "altitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Optional. The altitude (height), in feet,  above sea level for the item. Read-only.",
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Optional. The latitude, in decimal, for the item. Read-only.",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Optional. The longitude, in decimal, for the item. Read-only.",
            "format": "double",
            "nullable": true
          }
        },
        "example": {
          "altitude": "Double",
          "latitude": "Double",
          "longitude": "Double"
        }
      },
      "microsoft.graph.package": {
        "title": "package",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "An string indicating the type of package. While oneNote is the only currently defined value, you should expect other package types to be returned and handle them accordingly.",
            "nullable": true
          }
        },
        "example": {
          "type": "String"
        }
      },
      "microsoft.graph.photo": {
        "title": "photo",
        "type": "object",
        "properties": {
          "cameraMake": {
            "type": "string",
            "description": "Camera manufacturer. Read-only.",
            "nullable": true
          },
          "cameraModel": {
            "type": "string",
            "description": "Camera model. Read-only.",
            "nullable": true
          },
          "exposureDenominator": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The denominator for the exposure time fraction from the camera. Read-only.",
            "format": "double",
            "nullable": true
          },
          "exposureNumerator": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The numerator for the exposure time fraction from the camera. Read-only.",
            "format": "double",
            "nullable": true
          },
          "fNumber": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The F-stop value from the camera. Read-only.",
            "format": "double",
            "nullable": true
          },
          "focalLength": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The focal length from the camera. Read-only.",
            "format": "double",
            "nullable": true
          },
          "iso": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The ISO value from the camera. Read-only.",
            "format": "int32",
            "nullable": true
          },
          "takenDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Represents the date and time the photo was taken. Read-only.",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "cameraMake": "String",
          "cameraModel": "String",
          "exposureDenominator": "Double",
          "exposureNumerator": "Double",
          "fNumber": "Double",
          "focalLength": "Double",
          "iso": "Int32",
          "takenDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.publicationFacet": {
        "title": "publicationFacet",
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "description": "The state of publication for this document. Either published or checkout. Read-only.",
            "nullable": true
          },
          "versionId": {
            "type": "string",
            "description": "The unique identifier for the version that is visible to the current caller. Read-only.",
            "nullable": true
          }
        },
        "example": {
          "level": "String",
          "versionId": "String"
        }
      },
      "microsoft.graph.remoteItem": {
        "title": "remoteItem",
        "type": "object",
        "properties": {
          "createdBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "Identity of the user, device, and application which created the item. Read-only.",
            "nullable": true
          },
          "createdDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Date and time of item creation. Read-only.",
            "format": "date-time",
            "nullable": true
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.file"
              }
            ],
            "description": "Indicates that the remote item is a file. Read-only.",
            "nullable": true
          },
          "fileSystemInfo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.fileSystemInfo"
              }
            ],
            "description": "Information about the remote item from the local file system. Read-only.",
            "nullable": true
          },
          "folder": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.folder"
              }
            ],
            "description": "Indicates that the remote item is a folder. Read-only.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the remote item in its drive. Read-only.",
            "nullable": true
          },
          "lastModifiedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "Identity of the user, device, and application which last modified the item. Read-only.",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Date and time the item was last modified. Read-only.",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Optional. Filename of the remote item. Read-only.",
            "nullable": true
          },
          "package": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.package"
              }
            ],
            "description": "If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only.",
            "nullable": true
          },
          "parentReference": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.itemReference"
              }
            ],
            "description": "Properties of the parent of the remote item. Read-only.",
            "nullable": true
          },
          "shared": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.shared"
              }
            ],
            "description": "Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only.",
            "nullable": true
          },
          "sharepointIds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
              }
            ],
            "description": "Provides interop between items in OneDrive for Business and SharePoint with the full set of item identifiers. Read-only.",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Size of the remote item. Read-only.",
            "format": "int64",
            "nullable": true
          },
          "specialFolder": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.specialFolder"
              }
            ],
            "description": "If the current item is also available as a special folder, this facet is returned. Read-only.",
            "nullable": true
          },
          "webDavUrl": {
            "type": "string",
            "description": "DAV compatible URL for the item.",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "description": "URL that displays the resource in the browser. Read-only.",
            "nullable": true
          }
        },
        "example": {
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "file": {
            "@odata.type": "microsoft.graph.file"
          },
          "fileSystemInfo": {
            "@odata.type": "microsoft.graph.fileSystemInfo"
          },
          "folder": {
            "@odata.type": "microsoft.graph.folder"
          },
          "id": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "package": {
            "@odata.type": "microsoft.graph.package"
          },
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "shared": {
            "@odata.type": "microsoft.graph.shared"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "size": "Int64",
          "specialFolder": {
            "@odata.type": "microsoft.graph.specialFolder"
          },
          "webDavUrl": "String",
          "webUrl": "String"
        }
      },
      "microsoft.graph.itemReference": {
        "title": "itemReference",
        "type": "object",
        "properties": {
          "driveId": {
            "type": "string",
            "description": "Unique identifier of the drive instance that contains the item. Read-only.",
            "nullable": true
          },
          "driveType": {
            "type": "string",
            "description": "Identifies the type of drive. See [drive][] resource for values.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the item in the drive. Read-only.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the item being referenced. Read-only.",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Path that can be used to navigate to the item. Read-only.",
            "nullable": true
          },
          "shareId": {
            "type": "string",
            "description": "A unique identifier for a shared resource that can be accessed via the [Shares][] API.",
            "nullable": true
          },
          "sharepointIds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
              }
            ],
            "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only.",
            "nullable": true
          }
        },
        "example": {
          "driveId": "String",
          "driveType": "String",
          "id": "String",
          "name": "String",
          "path": "String",
          "shareId": "String",
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          }
        }
      },
      "microsoft.graph.shared": {
        "title": "shared",
        "type": "object",
        "properties": {
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "The identity of the owner of the shared item. Read-only.",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "description": "Indicates the scope of how the item is shared: anonymous, organization, or users. Read-only.",
            "nullable": true
          },
          "sharedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "The identity of the user who shared the item. Read-only.",
            "nullable": true
          },
          "sharedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The UTC date and time when the item was shared. Read-only.",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "owner": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "scope": "String",
          "sharedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "sharedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.specialFolder": {
        "title": "specialFolder",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The unique identifier for this item in the /drive/special collection",
            "nullable": true
          }
        },
        "example": {
          "name": "String"
        }
      },
      "microsoft.graph.searchResult": {
        "title": "searchResult",
        "type": "object",
        "properties": {
          "onClickTelemetryUrl": {
            "type": "string",
            "description": "A callback URL that can be used to record telemetry information. The application should issue a GET on this URL if the user interacts with this item to improve the quality of results.",
            "nullable": true
          }
        },
        "example": {
          "onClickTelemetryUrl": "String"
        }
      },
      "microsoft.graph.video": {
        "title": "video",
        "type": "object",
        "properties": {
          "audioBitsPerSample": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of audio bits per sample.",
            "format": "int32",
            "nullable": true
          },
          "audioChannels": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of audio channels.",
            "format": "int32",
            "nullable": true
          },
          "audioFormat": {
            "type": "string",
            "description": "Name of the audio format (AAC, MP3, etc.).",
            "nullable": true
          },
          "audioSamplesPerSecond": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of audio samples per second.",
            "format": "int32",
            "nullable": true
          },
          "bitrate": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Bit rate of the video in bits per second.",
            "format": "int32",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "description": "Duration of the file in milliseconds.",
            "format": "int64",
            "nullable": true
          },
          "fourCC": {
            "type": "string",
            "description": "'Four character code' name of the video format.",
            "nullable": true
          },
          "frameRate": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Frame rate of the video.",
            "format": "double",
            "nullable": true
          },
          "height": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Height of the video, in pixels.",
            "format": "int32",
            "nullable": true
          },
          "width": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Width of the video, in pixels.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "audioBitsPerSample": "Int32",
          "audioChannels": "Int32",
          "audioFormat": "String",
          "audioSamplesPerSecond": "Int32",
          "bitrate": "Int32",
          "duration": "Int64",
          "fourCC": "String",
          "frameRate": "Double",
          "height": "Int32",
          "width": "Int32"
        }
      },
      "microsoft.graph.permission": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "permission",
            "type": "object",
            "properties": {
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "grantedTo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "For user type permissions, the details of the users & applications for this permission. Read-only.",
                "nullable": true
              },
              "grantedToIdentities": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.identitySet"
                    }
                  ],
                  "nullable": true
                }
              },
              "inheritedFrom": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemReference"
                  }
                ],
                "description": "Provides a reference to the ancestor of the current permission, if it is inherited from an ancestor. Read-only.",
                "nullable": true
              },
              "invitation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharingInvitation"
                  }
                ],
                "description": "Details of any associated sharing invitation for this permission. Read-only.",
                "nullable": true
              },
              "link": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharingLink"
                  }
                ],
                "description": "Provides the link details of the current permission, if it is a link type permissions. Read-only.",
                "nullable": true
              },
              "roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The type of permission, e.g. read. See below for the full list of roles. Read-only."
              },
              "shareId": {
                "type": "string",
                "description": "A unique token that can be used to access this shared item via the **shares** API. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "grantedTo": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "grantedToIdentities": [
            {
              "@odata.type": "microsoft.graph.identitySet"
            }
          ],
          "inheritedFrom": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "invitation": {
            "@odata.type": "microsoft.graph.sharingInvitation"
          },
          "link": {
            "@odata.type": "microsoft.graph.sharingLink"
          },
          "roles": [
            "String"
          ],
          "shareId": "String"
        }
      },
      "microsoft.graph.thumbnailSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "thumbnailSet",
            "type": "object",
            "properties": {
              "large": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "description": "A 1920x1920 scaled thumbnail.",
                "nullable": true
              },
              "medium": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "description": "A 176x176 scaled thumbnail.",
                "nullable": true
              },
              "small": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "description": "A 48x48 cropped thumbnail.",
                "nullable": true
              },
              "source": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "description": "A custom thumbnail image or the original image used to generate other thumbnails.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "large": {
            "@odata.type": "microsoft.graph.thumbnail"
          },
          "medium": {
            "@odata.type": "microsoft.graph.thumbnail"
          },
          "small": {
            "@odata.type": "microsoft.graph.thumbnail"
          },
          "source": {
            "@odata.type": "microsoft.graph.thumbnail"
          }
        }
      },
      "microsoft.graph.baseItemVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "baseItemVersion",
            "type": "object",
            "properties": {
              "lastModifiedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user which last modified the version. Read-only.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time the version was last modified. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "publication": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.publicationFacet"
                  }
                ],
                "description": "Indicates the publication status of this particular version. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "publication": {
            "@odata.type": "microsoft.graph.publicationFacet"
          }
        }
      },
      "microsoft.graph.driveItemVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItemVersion"
          },
          {
            "title": "driveItemVersion",
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "The content stream for this version of the item.",
                "format": "base64url",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "description": "Indicates the size of the content stream for this version of the item.",
                "format": "int64",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "publication": {
            "@odata.type": "microsoft.graph.publicationFacet"
          },
          "content": "Stream",
          "size": "Int64"
        }
      },
      "microsoft.graph.workbookApplication": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookApplication",
            "type": "object",
            "properties": {
              "calculationMode": {
                "type": "string"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "calculationMode": "String"
        }
      },
      "microsoft.graph.workbookNamedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookNamedItem",
            "type": "object",
            "properties": {
              "comment": {
                "type": "string",
                "description": "Represents the comment associated with this name.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The name of the object. Read-only.",
                "nullable": true
              },
              "scope": {
                "type": "string",
                "description": "Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only."
              },
              "type": {
                "type": "string",
                "description": "Indicates what type of reference is associated with the name. Possible values are: String, Integer, Double, Boolean, Range. Read-only.",
                "nullable": true
              },
              "value": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula that the name is defined to refer to. E.g. =Sheet14!$B$2:$H$12, =4.75, etc. Read-only.",
                "nullable": true
              },
              "visible": {
                "type": "boolean",
                "description": "Specifies whether the object is visible or not."
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "comment": "String",
          "name": "String",
          "scope": "String",
          "type": "String",
          "value": {
            "@odata.type": "microsoft.graph.Json"
          },
          "visible": true,
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookTable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTable",
            "type": "object",
            "properties": {
              "highlightFirstColumn": {
                "type": "boolean",
                "description": "Indicates whether the first column contains special formatting."
              },
              "highlightLastColumn": {
                "type": "boolean",
                "description": "Indicates whether the last column contains special formatting."
              },
              "name": {
                "type": "string",
                "description": "Name of the table.",
                "nullable": true
              },
              "showBandedColumns": {
                "type": "boolean",
                "description": "Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier."
              },
              "showBandedRows": {
                "type": "boolean",
                "description": "Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier."
              },
              "showFilterButton": {
                "type": "boolean",
                "description": "Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row."
              },
              "showHeaders": {
                "type": "boolean",
                "description": "Indicates whether the header row is visible or not. This value can be set to show or remove the header row."
              },
              "showTotals": {
                "type": "boolean",
                "description": "Indicates whether the total row is visible or not. This value can be set to show or remove the total row."
              },
              "style": {
                "type": "string",
                "description": "Constant value that represents the Table style. Possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.",
                "nullable": true
              },
              "columns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTableColumn"
                }
              },
              "rows": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTableRow"
                }
              },
              "sort": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookTableSort"
                  }
                ],
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "highlightFirstColumn": true,
          "highlightLastColumn": true,
          "name": "String",
          "showBandedColumns": true,
          "showBandedRows": true,
          "showFilterButton": true,
          "showHeaders": true,
          "showTotals": true,
          "style": "String",
          "columns": [
            {
              "@odata.type": "microsoft.graph.workbookTableColumn"
            }
          ],
          "rows": [
            {
              "@odata.type": "microsoft.graph.workbookTableRow"
            }
          ],
          "sort": {
            "@odata.type": "microsoft.graph.workbookTableSort"
          },
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookWorksheet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookWorksheet",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The display name of the worksheet.",
                "nullable": true
              },
              "position": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The zero-based position of the worksheet within the workbook.",
                "format": "int32"
              },
              "visibility": {
                "type": "string",
                "description": "The Visibility of the worksheet. Possible values are: Visible, Hidden, VeryHidden."
              },
              "charts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookChart"
                }
              },
              "names": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookNamedItem"
                }
              },
              "pivotTables": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookPivotTable"
                }
              },
              "protection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheetProtection"
                  }
                ],
                "nullable": true
              },
              "tables": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTable"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "name": "String",
          "position": "Int32",
          "visibility": "String",
          "charts": [
            {
              "@odata.type": "microsoft.graph.workbookChart"
            }
          ],
          "names": [
            {
              "@odata.type": "microsoft.graph.workbookNamedItem"
            }
          ],
          "pivotTables": [
            {
              "@odata.type": "microsoft.graph.workbookPivotTable"
            }
          ],
          "protection": {
            "@odata.type": "microsoft.graph.workbookWorksheetProtection"
          },
          "tables": [
            {
              "@odata.type": "microsoft.graph.workbookTable"
            }
          ]
        }
      },
      "microsoft.graph.workbookFunctions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookFunctions",
            "type": "object"
          }
        ],
        "example": {
          "id": "String (identifier)"
        }
      },
      "microsoft.graph.workbookSessionInfo": {
        "title": "workbookSessionInfo",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the workbook session.",
            "nullable": true
          },
          "persistChanges": {
            "type": "boolean",
            "description": "true for persistent session. false for non-persistent session (view mode)",
            "nullable": true
          }
        },
        "example": {
          "id": "String",
          "persistChanges": true
        }
      },
      "microsoft.graph.workbookChart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChart",
            "type": "object",
            "properties": {
              "height": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Represents the height, in points, of the chart object.",
                "format": "double"
              },
              "left": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "The distance, in points, from the left side of the chart to the worksheet origin.",
                "format": "double"
              },
              "name": {
                "type": "string",
                "description": "Represents the name of a chart object.",
                "nullable": true
              },
              "top": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).",
                "format": "double"
              },
              "width": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Represents the width, in points, of the chart object.",
                "format": "double"
              },
              "axes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxes"
                  }
                ],
                "nullable": true
              },
              "dataLabels": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartDataLabels"
                  }
                ],
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAreaFormat"
                  }
                ],
                "nullable": true
              },
              "legend": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLegend"
                  }
                ],
                "nullable": true
              },
              "series": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookChartSeries"
                }
              },
              "title": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartTitle"
                  }
                ],
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "height": "Double",
          "left": "Double",
          "name": "String",
          "top": "Double",
          "width": "Double",
          "axes": {
            "@odata.type": "microsoft.graph.workbookChartAxes"
          },
          "dataLabels": {
            "@odata.type": "microsoft.graph.workbookChartDataLabels"
          },
          "format": {
            "@odata.type": "microsoft.graph.workbookChartAreaFormat"
          },
          "legend": {
            "@odata.type": "microsoft.graph.workbookChartLegend"
          },
          "series": [
            {
              "@odata.type": "microsoft.graph.workbookChartSeries"
            }
          ],
          "title": {
            "@odata.type": "microsoft.graph.workbookChartTitle"
          },
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookChartAxes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxes",
            "type": "object",
            "properties": {
              "categoryAxis": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxis"
                  }
                ],
                "nullable": true
              },
              "seriesAxis": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxis"
                  }
                ],
                "nullable": true
              },
              "valueAxis": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxis"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "categoryAxis": {
            "@odata.type": "microsoft.graph.workbookChartAxis"
          },
          "seriesAxis": {
            "@odata.type": "microsoft.graph.workbookChartAxis"
          },
          "valueAxis": {
            "@odata.type": "microsoft.graph.workbookChartAxis"
          }
        }
      },
      "microsoft.graph.workbookChartDataLabels": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartDataLabels",
            "type": "object",
            "properties": {
              "position": {
                "type": "string",
                "description": "DataLabelPosition value that represents the position of the data label. Possible values are: None, Center, InsideEnd, InsideBase, OutsideEnd, Left, Right, Top, Bottom, BestFit, Callout.",
                "nullable": true
              },
              "separator": {
                "type": "string",
                "description": "String representing the separator used for the data labels on a chart.",
                "nullable": true
              },
              "showBubbleSize": {
                "type": "boolean",
                "description": "Boolean value representing if the data label bubble size is visible or not.",
                "nullable": true
              },
              "showCategoryName": {
                "type": "boolean",
                "description": "Boolean value representing if the data label category name is visible or not.",
                "nullable": true
              },
              "showLegendKey": {
                "type": "boolean",
                "description": "Boolean value representing if the data label legend key is visible or not.",
                "nullable": true
              },
              "showPercentage": {
                "type": "boolean",
                "description": "Boolean value representing if the data label percentage is visible or not.",
                "nullable": true
              },
              "showSeriesName": {
                "type": "boolean",
                "description": "Boolean value representing if the data label series name is visible or not.",
                "nullable": true
              },
              "showValue": {
                "type": "boolean",
                "description": "Boolean value representing if the data label value is visible or not.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartDataLabelFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "position": "String",
          "separator": "String",
          "showBubbleSize": true,
          "showCategoryName": true,
          "showLegendKey": true,
          "showPercentage": true,
          "showSeriesName": true,
          "showValue": true,
          "format": {
            "@odata.type": "microsoft.graph.workbookChartDataLabelFormat"
          }
        }
      },
      "microsoft.graph.workbookChartAreaFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAreaFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartLegend": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartLegend",
            "type": "object",
            "properties": {
              "overlay": {
                "type": "boolean",
                "description": "Boolean value for whether the chart legend should overlap with the main body of the chart.",
                "nullable": true
              },
              "position": {
                "type": "string",
                "description": "Represents the position of the legend on the chart. Possible values are: Top, Bottom, Left, Right, Corner, Custom.",
                "nullable": true
              },
              "visible": {
                "type": "boolean",
                "description": "A boolean value the represents the visibility of a ChartLegend object."
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLegendFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "overlay": true,
          "position": "String",
          "visible": true,
          "format": {
            "@odata.type": "microsoft.graph.workbookChartLegendFormat"
          }
        }
      },
      "microsoft.graph.workbookChartSeries": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartSeries",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Represents the name of a series in a chart.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartSeriesFormat"
                  }
                ],
                "nullable": true
              },
              "points": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookChartPoint"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "name": "String",
          "format": {
            "@odata.type": "microsoft.graph.workbookChartSeriesFormat"
          },
          "points": [
            {
              "@odata.type": "microsoft.graph.workbookChartPoint"
            }
          ]
        }
      },
      "microsoft.graph.workbookChartTitle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartTitle",
            "type": "object",
            "properties": {
              "overlay": {
                "type": "boolean",
                "description": "Boolean value representing if the chart title will overlay the chart or not.",
                "nullable": true
              },
              "text": {
                "type": "string",
                "description": "Represents the title text of a chart.",
                "nullable": true
              },
              "visible": {
                "type": "boolean",
                "description": "A boolean value the represents the visibility of a chart title object."
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartTitleFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "overlay": true,
          "text": "String",
          "visible": true,
          "format": {
            "@odata.type": "microsoft.graph.workbookChartTitleFormat"
          }
        }
      },
      "microsoft.graph.workbookChartFill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartFill",
            "type": "object"
          }
        ],
        "example": {
          "id": "String (identifier)"
        }
      },
      "microsoft.graph.workbookChartFont": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartFont",
            "type": "object",
            "properties": {
              "bold": {
                "type": "boolean",
                "description": "Represents the bold status of font.",
                "nullable": true
              },
              "color": {
                "type": "string",
                "description": "HTML color code representation of the text color. E.g. #FF0000 represents Red.",
                "nullable": true
              },
              "italic": {
                "type": "boolean",
                "description": "Represents the italic status of the font.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Font name (e.g. 'Calibri')",
                "nullable": true
              },
              "size": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Size of the font (e.g. 11)",
                "format": "double",
                "nullable": true
              },
              "underline": {
                "type": "string",
                "description": "Type of underline applied to the font. Possible values are: None, Single.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "bold": true,
          "color": "String",
          "italic": true,
          "name": "String",
          "size": "Double",
          "underline": "String"
        }
      },
      "microsoft.graph.workbookChartAxis": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxis",
            "type": "object",
            "properties": {
              "majorUnit": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the interval between two major tick marks. Can be set to a numeric value or an empty string.  The returned value is always a number.",
                "nullable": true
              },
              "maximum": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the maximum value on the value axis.  Can be set to a numeric value or an empty string (for automatic axis values).  The returned value is always a number.",
                "nullable": true
              },
              "minimum": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the minimum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values).  The returned value is always a number.",
                "nullable": true
              },
              "minorUnit": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the interval between two minor tick marks. 'Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxisFormat"
                  }
                ],
                "nullable": true
              },
              "majorGridlines": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartGridlines"
                  }
                ],
                "nullable": true
              },
              "minorGridlines": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartGridlines"
                  }
                ],
                "nullable": true
              },
              "title": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxisTitle"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "majorUnit": {
            "@odata.type": "microsoft.graph.Json"
          },
          "maximum": {
            "@odata.type": "microsoft.graph.Json"
          },
          "minimum": {
            "@odata.type": "microsoft.graph.Json"
          },
          "minorUnit": {
            "@odata.type": "microsoft.graph.Json"
          },
          "format": {
            "@odata.type": "microsoft.graph.workbookChartAxisFormat"
          },
          "majorGridlines": {
            "@odata.type": "microsoft.graph.workbookChartGridlines"
          },
          "minorGridlines": {
            "@odata.type": "microsoft.graph.workbookChartGridlines"
          },
          "title": {
            "@odata.type": "microsoft.graph.workbookChartAxisTitle"
          }
        }
      },
      "microsoft.graph.workbookChartAxisFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxisFormat",
            "type": "object",
            "properties": {
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              },
              "line": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLineFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          },
          "line": {
            "@odata.type": "microsoft.graph.workbookChartLineFormat"
          }
        }
      },
      "microsoft.graph.workbookChartGridlines": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartGridlines",
            "type": "object",
            "properties": {
              "visible": {
                "type": "boolean",
                "description": "Boolean value representing if the axis gridlines are visible or not."
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartGridlinesFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "visible": true,
          "format": {
            "@odata.type": "microsoft.graph.workbookChartGridlinesFormat"
          }
        }
      },
      "microsoft.graph.workbookChartAxisTitle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxisTitle",
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Represents the axis title.",
                "nullable": true
              },
              "visible": {
                "type": "boolean",
                "description": "A boolean that specifies the visibility of an axis title."
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxisTitleFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "text": "String",
          "visible": true,
          "format": {
            "@odata.type": "microsoft.graph.workbookChartAxisTitleFormat"
          }
        }
      },
      "microsoft.graph.workbookChartLineFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartLineFormat",
            "type": "object",
            "properties": {
              "color": {
                "type": "string",
                "description": "HTML color code representing the color of lines in the chart.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "color": "String"
        }
      },
      "microsoft.graph.workbookChartAxisTitleFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxisTitleFormat",
            "type": "object",
            "properties": {
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartDataLabelFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartDataLabelFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartGridlinesFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartGridlinesFormat",
            "type": "object",
            "properties": {
              "line": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLineFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "line": {
            "@odata.type": "microsoft.graph.workbookChartLineFormat"
          }
        }
      },
      "microsoft.graph.workbookChartLegendFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartLegendFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartPoint",
            "type": "object",
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Returns the value of a chart point. Read-only.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartPointFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "value": {
            "@odata.type": "microsoft.graph.Json"
          },
          "format": {
            "@odata.type": "microsoft.graph.workbookChartPointFormat"
          }
        }
      },
      "microsoft.graph.workbookChartPointFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartPointFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          }
        }
      },
      "microsoft.graph.workbookChartSeriesFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartSeriesFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "line": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLineFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "line": {
            "@odata.type": "microsoft.graph.workbookChartLineFormat"
          }
        }
      },
      "microsoft.graph.workbookChartTitleFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartTitleFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookFilter",
            "type": "object",
            "properties": {
              "criteria": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookFilterCriteria"
                  }
                ],
                "description": "The currently applied filter on the given column. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "criteria": {
            "@odata.type": "microsoft.graph.workbookFilterCriteria"
          }
        }
      },
      "microsoft.graph.workbookFilterCriteria": {
        "title": "workbookFilterCriteria",
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "nullable": true
          },
          "criterion1": {
            "type": "string",
            "nullable": true
          },
          "criterion2": {
            "type": "string",
            "nullable": true
          },
          "dynamicCriteria": {
            "type": "string"
          },
          "filterOn": {
            "type": "string"
          },
          "icon": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.workbookIcon"
              }
            ],
            "nullable": true
          },
          "operator": {
            "type": "string"
          },
          "values": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.Json"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "color": "String",
          "criterion1": "String",
          "criterion2": "String",
          "dynamicCriteria": "String",
          "filterOn": "String",
          "icon": {
            "@odata.type": "microsoft.graph.workbookIcon"
          },
          "operator": "String",
          "values": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.workbookIcon": {
        "title": "workbookIcon",
        "type": "object",
        "properties": {
          "index": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Represents the index of the icon in the given set.",
            "format": "int32"
          },
          "set": {
            "type": "string",
            "description": "Represents the set that the icon is part of. Possible values are: Invalid, ThreeArrows, ThreeArrowsGray, ThreeFlags, ThreeTrafficLights1, ThreeTrafficLights2, ThreeSigns, ThreeSymbols, ThreeSymbols2, FourArrows, FourArrowsGray, FourRedToBlack, FourRating, FourTrafficLights, FiveArrows, FiveArrowsGray, FiveRating, FiveQuarters, ThreeStars, ThreeTriangles, FiveBoxes."
          }
        },
        "example": {
          "index": "Int32",
          "set": "String"
        }
      },
      "microsoft.graph.workbookFormatProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookFormatProtection",
            "type": "object",
            "properties": {
              "formulaHidden": {
                "type": "boolean",
                "description": "Indicates if Excel hides the formula for the cells in the range. A null value indicates that the entire range doesn't have uniform formula hidden setting.",
                "nullable": true
              },
              "locked": {
                "type": "boolean",
                "description": "Indicates if Excel locks the cells in the object. A null value indicates that the entire range doesn't have uniform lock setting.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "formulaHidden": true,
          "locked": true
        }
      },
      "microsoft.graph.workbookFunctionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookFunctionResult",
            "type": "object",
            "properties": {
              "error": {
                "type": "string",
                "nullable": true
              },
              "value": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "error": "String",
          "value": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.workbookPivotTable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookPivotTable",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the PivotTable.",
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "name": "String",
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookRange": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRange",
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Represents the range reference in A1-style. Address value will contain the Sheet reference (e.g. Sheet1!A1:B4). Read-only.",
                "nullable": true
              },
              "addressLocal": {
                "type": "string",
                "description": "Represents range reference for the specified range in the language of the user. Read-only.",
                "nullable": true
              },
              "cellCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of cells in the range. Read-only.",
                "format": "int32"
              },
              "columnCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Represents the total number of columns in the range. Read-only.",
                "format": "int32"
              },
              "columnHidden": {
                "type": "boolean",
                "description": "Represents if all columns of the current range are hidden.",
                "nullable": true
              },
              "columnIndex": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Represents the column number of the first cell in the range. Zero-indexed. Read-only.",
                "format": "int32"
              },
              "formulas": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in A1-style notation.",
                "nullable": true
              },
              "formulasLocal": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in A1-style notation, in the user's language and number-formatting locale.  For example, the English '=SUM(A1, 1.5)' formula would become '=SUMME(A1; 1,5)' in German.",
                "nullable": true
              },
              "formulasR1C1": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in R1C1-style notation.",
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "description": "Represents if all cells of the current range are hidden. Read-only.",
                "nullable": true
              },
              "numberFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents Excel's number format code for the given cell.",
                "nullable": true
              },
              "rowCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the total number of rows in the range. Read-only.",
                "format": "int32"
              },
              "rowHidden": {
                "type": "boolean",
                "description": "Represents if all rows of the current range are hidden.",
                "nullable": true
              },
              "rowIndex": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the row number of the first cell in the range. Zero-indexed. Read-only.",
                "format": "int32"
              },
              "text": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API. Read-only.",
                "nullable": true
              },
              "valueTypes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the type of data of each cell. Possible values are: Unknown, Empty, String, Integer, Double, Boolean, Error. Read-only.",
                "nullable": true
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeFormat"
                  }
                ],
                "nullable": true
              },
              "sort": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeSort"
                  }
                ],
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "address": "String",
          "addressLocal": "String",
          "cellCount": "Int32",
          "columnCount": "Int32",
          "columnHidden": true,
          "columnIndex": "Int32",
          "formulas": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasLocal": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasR1C1": {
            "@odata.type": "microsoft.graph.Json"
          },
          "hidden": true,
          "numberFormat": {
            "@odata.type": "microsoft.graph.Json"
          },
          "rowCount": "Int32",
          "rowHidden": true,
          "rowIndex": "Int32",
          "text": {
            "@odata.type": "microsoft.graph.Json"
          },
          "valueTypes": {
            "@odata.type": "microsoft.graph.Json"
          },
          "values": {
            "@odata.type": "microsoft.graph.Json"
          },
          "format": {
            "@odata.type": "microsoft.graph.workbookRangeFormat"
          },
          "sort": {
            "@odata.type": "microsoft.graph.workbookRangeSort"
          },
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookRangeFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeFormat",
            "type": "object",
            "properties": {
              "columnWidth": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Gets or sets the width of all colums within the range. If the column widths are not uniform, null will be returned.",
                "format": "double",
                "nullable": true
              },
              "horizontalAlignment": {
                "type": "string",
                "description": "Represents the horizontal alignment for the specified object. Possible values are: General, Left, Center, Right, Fill, Justify, CenterAcrossSelection, Distributed.",
                "nullable": true
              },
              "rowHeight": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Gets or sets the height of all rows in the range. If the row heights are not uniform null will be returned.",
                "format": "double",
                "nullable": true
              },
              "verticalAlignment": {
                "type": "string",
                "description": "Represents the vertical alignment for the specified object. Possible values are: Top, Center, Bottom, Justify, Distributed.",
                "nullable": true
              },
              "wrapText": {
                "type": "boolean",
                "description": "Indicates if Excel wraps the text in the object. A null value indicates that the entire range doesn't have uniform wrap setting",
                "nullable": true
              },
              "borders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookRangeBorder"
                }
              },
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeFont"
                  }
                ],
                "nullable": true
              },
              "protection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookFormatProtection"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "columnWidth": "Double",
          "horizontalAlignment": "String",
          "rowHeight": "Double",
          "verticalAlignment": "String",
          "wrapText": true,
          "borders": [
            {
              "@odata.type": "microsoft.graph.workbookRangeBorder"
            }
          ],
          "fill": {
            "@odata.type": "microsoft.graph.workbookRangeFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookRangeFont"
          },
          "protection": {
            "@odata.type": "microsoft.graph.workbookFormatProtection"
          }
        }
      },
      "microsoft.graph.workbookRangeSort": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeSort",
            "type": "object"
          }
        ],
        "example": {
          "id": "String (identifier)"
        }
      },
      "microsoft.graph.workbookRangeBorder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeBorder",
            "type": "object",
            "properties": {
              "color": {
                "type": "string",
                "description": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. 'FFA500') or as a named HTML color (e.g. 'orange').",
                "nullable": true
              },
              "sideIndex": {
                "type": "string",
                "description": "Constant value that indicates the specific side of the border. Possible values are: EdgeTop, EdgeBottom, EdgeLeft, EdgeRight, InsideVertical, InsideHorizontal, DiagonalDown, DiagonalUp. Read-only.",
                "nullable": true
              },
              "style": {
                "type": "string",
                "description": "One of the constants of line style specifying the line style for the border. Possible values are: None, Continuous, Dash, DashDot, DashDotDot, Dot, Double, SlantDashDot.",
                "nullable": true
              },
              "weight": {
                "type": "string",
                "description": "Specifies the weight of the border around a range. Possible values are: Hairline, Thin, Medium, Thick.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "color": "String",
          "sideIndex": "String",
          "style": "String",
          "weight": "String"
        }
      },
      "microsoft.graph.workbookRangeFill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeFill",
            "type": "object",
            "properties": {
              "color": {
                "type": "string",
                "description": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. 'FFA500') or as a named HTML color (e.g. 'orange')",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "color": "String"
        }
      },
      "microsoft.graph.workbookRangeFont": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeFont",
            "type": "object",
            "properties": {
              "bold": {
                "type": "boolean",
                "description": "Represents the bold status of font.",
                "nullable": true
              },
              "color": {
                "type": "string",
                "description": "HTML color code representation of the text color. E.g. #FF0000 represents Red.",
                "nullable": true
              },
              "italic": {
                "type": "boolean",
                "description": "Represents the italic status of the font.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Font name (e.g. 'Calibri')",
                "nullable": true
              },
              "size": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Font size.",
                "format": "double",
                "nullable": true
              },
              "underline": {
                "type": "string",
                "description": "Type of underline applied to the font. Possible values are: None, Single, Double, SingleAccountant, DoubleAccountant.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "bold": true,
          "color": "String",
          "italic": true,
          "name": "String",
          "size": "Double",
          "underline": "String"
        }
      },
      "microsoft.graph.workbookRangeView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeView",
            "type": "object",
            "properties": {
              "cellAddresses": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the cell addresses",
                "nullable": true
              },
              "columnCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the number of visible columns. Read-only.",
                "format": "int32"
              },
              "formulas": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in A1-style notation.",
                "nullable": true
              },
              "formulasLocal": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English '=SUM(A1, 1.5)' formula would become '=SUMME(A1; 1,5)' in German.",
                "nullable": true
              },
              "formulasR1C1": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in R1C1-style notation.",
                "nullable": true
              },
              "index": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Index of the range.",
                "format": "int32"
              },
              "numberFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents Excel's number format code for the given cell. Read-only.",
                "nullable": true
              },
              "rowCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the number of visible rows. Read-only.",
                "format": "int32"
              },
              "text": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API. Read-only.",
                "nullable": true
              },
              "valueTypes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the type of data of each cell. Read-only. Possible values are: Unknown, Empty, String, Integer, Double, Boolean, Error.",
                "nullable": true
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the raw values of the specified range view. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string.",
                "nullable": true
              },
              "rows": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookRangeView"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "cellAddresses": {
            "@odata.type": "microsoft.graph.Json"
          },
          "columnCount": "Int32",
          "formulas": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasLocal": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasR1C1": {
            "@odata.type": "microsoft.graph.Json"
          },
          "index": "Int32",
          "numberFormat": {
            "@odata.type": "microsoft.graph.Json"
          },
          "rowCount": "Int32",
          "text": {
            "@odata.type": "microsoft.graph.Json"
          },
          "valueTypes": {
            "@odata.type": "microsoft.graph.Json"
          },
          "values": {
            "@odata.type": "microsoft.graph.Json"
          },
          "rows": [
            {
              "@odata.type": "microsoft.graph.workbookRangeView"
            }
          ]
        }
      },
      "microsoft.graph.workbookTableColumn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTableColumn",
            "type": "object",
            "properties": {
              "index": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Returns the name of the table column. Read-only.",
                "nullable": true
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string.",
                "nullable": true
              },
              "filter": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookFilter"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "index": "Int32",
          "name": "String",
          "values": {
            "@odata.type": "microsoft.graph.Json"
          },
          "filter": {
            "@odata.type": "microsoft.graph.workbookFilter"
          }
        }
      },
      "microsoft.graph.workbookTableRow": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTableRow",
            "type": "object",
            "properties": {
              "index": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.",
                "format": "int32"
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "index": "Int32",
          "values": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.workbookTableSort": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTableSort",
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.workbookSortField"
                    }
                  ],
                  "nullable": true
                },
                "description": "Represents the current conditions used to last sort the table. Read-only."
              },
              "matchCase": {
                "type": "boolean",
                "description": "Represents whether the casing impacted the last sort of the table. Read-only."
              },
              "method": {
                "type": "string",
                "description": "Represents Chinese character ordering method last used to sort the table. Possible values are: PinYin, StrokeCount. Read-only."
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "fields": [
            {
              "@odata.type": "microsoft.graph.workbookSortField"
            }
          ],
          "matchCase": true,
          "method": "String"
        }
      },
      "microsoft.graph.workbookSortField": {
        "title": "workbookSortField",
        "type": "object",
        "properties": {
          "ascending": {
            "type": "boolean",
            "description": "Represents whether the sorting is done in an ascending fashion."
          },
          "color": {
            "type": "string",
            "description": "Represents the color that is the target of the condition if the sorting is on font or cell color.",
            "nullable": true
          },
          "dataOption": {
            "type": "string",
            "description": "Represents additional sorting options for this field. Possible values are: Normal, TextAsNumber."
          },
          "icon": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.workbookIcon"
              }
            ],
            "description": "Represents the icon that is the target of the condition if the sorting is on the cell's icon.",
            "nullable": true
          },
          "key": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Represents the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).",
            "format": "int32"
          },
          "sortOn": {
            "type": "string",
            "description": "Represents the type of sorting of this condition. Possible values are: Value, CellColor, FontColor, Icon."
          }
        },
        "example": {
          "ascending": true,
          "color": "String",
          "dataOption": "String",
          "icon": {
            "@odata.type": "microsoft.graph.workbookIcon"
          },
          "key": "Int32",
          "sortOn": "String"
        }
      },
      "microsoft.graph.workbookWorksheetProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookWorksheetProtection",
            "type": "object",
            "properties": {
              "options": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheetProtectionOptions"
                  }
                ],
                "description": "Sheet protection options. Read-only.",
                "nullable": true
              },
              "protected": {
                "type": "boolean",
                "description": "Indicates if the worksheet is protected.  Read-only."
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "options": {
            "@odata.type": "microsoft.graph.workbookWorksheetProtectionOptions"
          },
          "protected": true
        }
      },
      "microsoft.graph.workbookWorksheetProtectionOptions": {
        "title": "workbookWorksheetProtectionOptions",
        "type": "object",
        "properties": {
          "allowAutoFilter": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing using auto filter feature."
          },
          "allowDeleteColumns": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing deleting columns."
          },
          "allowDeleteRows": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing deleting rows."
          },
          "allowFormatCells": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing formatting cells."
          },
          "allowFormatColumns": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing formatting columns."
          },
          "allowFormatRows": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing formatting rows."
          },
          "allowInsertColumns": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing inserting columns."
          },
          "allowInsertHyperlinks": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing inserting hyperlinks."
          },
          "allowInsertRows": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing inserting rows."
          },
          "allowPivotTables": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing using pivot table feature."
          },
          "allowSort": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing using sort feature."
          }
        },
        "example": {
          "allowAutoFilter": true,
          "allowDeleteColumns": true,
          "allowDeleteRows": true,
          "allowFormatCells": true,
          "allowFormatColumns": true,
          "allowFormatRows": true,
          "allowInsertColumns": true,
          "allowInsertHyperlinks": true,
          "allowInsertRows": true,
          "allowPivotTables": true,
          "allowSort": true
        }
      },
      "microsoft.graph.workbookFilterDatetime": {
        "title": "workbookFilterDatetime",
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "nullable": true
          },
          "specificity": {
            "type": "string"
          }
        },
        "example": {
          "date": "String",
          "specificity": "String"
        }
      },
      "microsoft.graph.workbookRangeReference": {
        "title": "workbookRangeReference",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "address": "String"
        }
      },
      "microsoft.graph.attachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "attachment",
            "type": "object",
            "properties": {
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The attachment's file name.",
                "nullable": true
              },
              "contentType": {
                "type": "string",
                "description": "The MIME type.",
                "nullable": true
              },
              "size": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The length of the attachment in bytes.",
                "format": "int32"
              },
              "isInline": {
                "type": "boolean",
                "description": "true if the attachment is an inline attachment; otherwise, false."
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "contentType": "String",
          "size": "Int32",
          "isInline": true
        }
      },
      "microsoft.graph.customTimeZone": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.timeZoneBase"
          },
          {
            "title": "customTimeZone",
            "type": "object",
            "properties": {
              "bias": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The time offset of the time zone from Coordinated Universal Time (UTC). This value is in minutes. Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.",
                "format": "int32",
                "nullable": true
              },
              "standardOffset": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.standardTimeZoneOffset"
                  }
                ],
                "description": "Specifies when the time zone switches from daylight saving time to standard time.",
                "nullable": true
              },
              "daylightOffset": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.daylightTimeZoneOffset"
                  }
                ],
                "description": "Specifies when the time zone switches from standard time to daylight saving time.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "name": "String",
          "bias": "Int32",
          "standardOffset": {
            "@odata.type": "microsoft.graph.standardTimeZoneOffset"
          },
          "daylightOffset": {
            "@odata.type": "microsoft.graph.daylightTimeZoneOffset"
          }
        }
      },
      "microsoft.graph.standardTimeZoneOffset": {
        "title": "standardTimeZoneOffset",
        "type": "object",
        "properties": {
          "time": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
            "type": "string",
            "description": "Represents the time of day when the transition from daylight saving time to standard time occurs.",
            "format": "time",
            "nullable": true
          },
          "dayOccurrence": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Represents the nth occurrence of the day of week that the transition from daylight saving time to standard time occurs.",
            "format": "int32",
            "nullable": true
          },
          "dayOfWeek": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
              }
            ],
            "description": "Represents the day of the week when the transition from daylight saving time to standard time.",
            "nullable": true
          },
          "month": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Represents the month of the year when the transition from daylight saving time to standard time occurs.",
            "format": "int32",
            "nullable": true
          },
          "year": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Represents how frequently in terms of years the change from daylight saving time to standard time occurs. For example, a value of 0 means every year.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "time": "TimeOfDay (timestamp)",
          "dayOccurrence": "Int32",
          "dayOfWeek": {
            "@odata.type": "microsoft.graph.dayOfWeek"
          },
          "month": "Int32",
          "year": "Int32"
        }
      },
      "microsoft.graph.daylightTimeZoneOffset": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.standardTimeZoneOffset"
          },
          {
            "title": "daylightTimeZoneOffset",
            "type": "object",
            "properties": {
              "daylightBias": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The time offset from Coordinated Universal Time (UTC) for daylight saving time. This value is in minutes.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "time": "TimeOfDay (timestamp)",
          "dayOccurrence": "Int32",
          "dayOfWeek": {
            "@odata.type": "microsoft.graph.dayOfWeek"
          },
          "month": "Int32",
          "year": "Int32",
          "daylightBias": "Int32"
        }
      },
      "microsoft.graph.outlookCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "outlookCategory",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "A unique name that identifies a category in the user's mailbox. After a category is created, the name cannot be changed. Read-only.",
                "nullable": true
              },
              "color": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.categoryColor"
                  }
                ],
                "description": "A pre-set color constant that characterizes a category, and that is mapped to one of 25 predefined colors. See the note below.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "color": {
            "@odata.type": "microsoft.graph.categoryColor"
          }
        }
      },
      "microsoft.graph.outlookTaskGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "outlookTaskGroup",
            "type": "object",
            "properties": {
              "changeKey": {
                "type": "string",
                "nullable": true
              },
              "isDefaultGroup": {
                "type": "boolean",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "groupKey": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "taskFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.outlookTaskFolder"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "changeKey": "String",
          "isDefaultGroup": true,
          "name": "String",
          "groupKey": "Guid",
          "taskFolders": [
            {
              "@odata.type": "microsoft.graph.outlookTaskFolder"
            }
          ]
        }
      },
      "microsoft.graph.outlookTaskFolder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "outlookTaskFolder",
            "type": "object",
            "properties": {
              "changeKey": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "isDefaultFolder": {
                "type": "boolean",
                "nullable": true
              },
              "parentGroupKey": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.outlookTask"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "changeKey": "String",
          "name": "String",
          "isDefaultFolder": true,
          "parentGroupKey": "Guid",
          "tasks": [
            {
              "@odata.type": "microsoft.graph.outlookTask"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.outlookTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "outlookTask",
            "type": "object",
            "properties": {
              "assignedTo": {
                "type": "string",
                "nullable": true
              },
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "nullable": true
              },
              "completedDateTime": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "nullable": true
              },
              "dueDateTime": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "nullable": true
              },
              "hasAttachments": {
                "type": "boolean",
                "nullable": true
              },
              "importance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.importance"
                  }
                ],
                "nullable": true
              },
              "isReminderOn": {
                "type": "boolean",
                "nullable": true
              },
              "owner": {
                "type": "string",
                "nullable": true
              },
              "parentFolderId": {
                "type": "string",
                "nullable": true
              },
              "recurrence": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.patternedRecurrence"
                  }
                ],
                "nullable": true
              },
              "reminderDateTime": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "nullable": true
              },
              "sensitivity": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sensitivity"
                  }
                ],
                "nullable": true
              },
              "startDateTime": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.taskStatus"
                  }
                ],
                "nullable": true
              },
              "subject": {
                "type": "string",
                "nullable": true
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "changeKey": "String",
          "categories": [
            "String"
          ],
          "assignedTo": "String",
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "completedDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "dueDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "hasAttachments": true,
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "isReminderOn": true,
          "owner": "String",
          "parentFolderId": "String",
          "recurrence": {
            "@odata.type": "microsoft.graph.patternedRecurrence"
          },
          "reminderDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "sensitivity": {
            "@odata.type": "microsoft.graph.sensitivity"
          },
          "startDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "status": {
            "@odata.type": "microsoft.graph.taskStatus"
          },
          "subject": "String",
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ]
        }
      },
      "microsoft.graph.recipient": {
        "title": "recipient",
        "type": "object",
        "properties": {
          "emailAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.emailAddress"
              }
            ],
            "description": "The recipient's email address.",
            "nullable": true
          }
        },
        "example": {
          "emailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          }
        }
      },
      "microsoft.graph.emailAddress": {
        "title": "emailAddress",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The display name of the person or entity.",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "The email address of the person or entity.",
            "nullable": true
          }
        },
        "example": {
          "name": "String",
          "address": "String"
        }
      },
      "microsoft.graph.attendeeBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.recipient"
          },
          {
            "title": "attendeeBase",
            "type": "object",
            "properties": {
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attendeeType"
                  }
                ],
                "description": "The type of attendee. Possible values are: required, optional, resource. Currently if the attendee is a person, findMeetingTimes always considers the person is of the Required type.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "emailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "type": {
            "@odata.type": "microsoft.graph.attendeeType"
          }
        }
      },
      "microsoft.graph.meetingTimeSuggestionsResult": {
        "title": "meetingTimeSuggestionsResult",
        "type": "object",
        "properties": {
          "meetingTimeSuggestions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.meetingTimeSuggestion"
                }
              ],
              "nullable": true
            },
            "description": "An array of meeting suggestions."
          },
          "emptySuggestionsReason": {
            "type": "string",
            "description": "A reason for not returning any meeting suggestions. Possible values are: attendeesUnavailable, attendeesUnavailableOrUnknown, locationsUnavailable, organizerUnavailable, or unknown. This property is an empty string if the meetingTimeSuggestions property does include any meeting suggestions.",
            "nullable": true
          }
        },
        "example": {
          "meetingTimeSuggestions": [
            {
              "@odata.type": "microsoft.graph.meetingTimeSuggestion"
            }
          ],
          "emptySuggestionsReason": "String"
        }
      },
      "microsoft.graph.meetingTimeSuggestion": {
        "title": "meetingTimeSuggestion",
        "type": "object",
        "properties": {
          "meetingTimeSlot": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.timeSlot"
              }
            ],
            "description": "A time period suggested for the meeting.",
            "nullable": true
          },
          "confidence": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "A percentage that represents the likelhood of all the attendees attending.",
            "format": "double",
            "nullable": true
          },
          "organizerAvailability": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.freeBusyStatus"
              }
            ],
            "description": "Availability of the meeting organizer for this meeting suggestion. Possible values are: free, tentative, busy, oof, workingElsewhere, unknown.",
            "nullable": true
          },
          "attendeeAvailability": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.attendeeAvailability"
                }
              ],
              "nullable": true
            },
            "description": "An array that shows the availability status of each attendee for this meeting suggestion."
          },
          "locations": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.location"
                }
              ],
              "nullable": true
            },
            "description": "An array that specifies the name and geographic location of each meeting location for this meeting suggestion."
          },
          "suggestionReason": {
            "type": "string",
            "description": "Reason for suggesting the meeting time.",
            "nullable": true
          }
        },
        "example": {
          "meetingTimeSlot": {
            "@odata.type": "microsoft.graph.timeSlot"
          },
          "confidence": "Double",
          "organizerAvailability": {
            "@odata.type": "microsoft.graph.freeBusyStatus"
          },
          "attendeeAvailability": [
            {
              "@odata.type": "microsoft.graph.attendeeAvailability"
            }
          ],
          "locations": [
            {
              "@odata.type": "microsoft.graph.location"
            }
          ],
          "suggestionReason": "String"
        }
      },
      "microsoft.graph.timeSlot": {
        "title": "timeSlot",
        "type": "object",
        "properties": {
          "start": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The time the period ends.",
            "nullable": true
          },
          "end": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The time a period begins.",
            "nullable": true
          }
        },
        "example": {
          "start": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "end": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          }
        }
      },
      "microsoft.graph.attendeeAvailability": {
        "title": "attendeeAvailability",
        "type": "object",
        "properties": {
          "attendee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
              }
            ],
            "description": "The type of attendee - whether it's a person or a resource, and whether required or optional if it's a person.",
            "nullable": true
          },
          "availability": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.freeBusyStatus"
              }
            ],
            "description": "The availability status of the attendee. Possible values are: free, tentative, busy, oof, workingElsewhere, unknown.",
            "nullable": true
          }
        },
        "example": {
          "attendee": {
            "@odata.type": "microsoft.graph.attendeeBase"
          },
          "availability": {
            "@odata.type": "microsoft.graph.freeBusyStatus"
          }
        }
      },
      "microsoft.graph.location": {
        "title": "location",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "The name associated with the location.",
            "nullable": true
          },
          "locationEmailAddress": {
            "type": "string",
            "description": "Optional email address of the location.",
            "nullable": true
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
              }
            ],
            "description": "The street address of the location.",
            "nullable": true
          },
          "coordinates": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.outlookGeoCoordinates"
              }
            ],
            "description": "The geographic coordinates and elevation of the location.",
            "nullable": true
          },
          "locationUri": {
            "type": "string",
            "description": "Optional URI representing the location.",
            "nullable": true
          },
          "locationType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.locationType"
              }
            ],
            "description": "The type of location. Possible values are: default, conferenceRoom, homeAddress, businessAddress,geoCoordinates, streetAddress, hotel, restaurant, localBusiness, postalAddress. Read-only.",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "description": "For internal use only.",
            "nullable": true
          },
          "uniqueIdType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.locationUniqueIdType"
              }
            ],
            "description": "For internal use only.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "String",
          "locationEmailAddress": "String",
          "address": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "coordinates": {
            "@odata.type": "microsoft.graph.outlookGeoCoordinates"
          },
          "locationUri": "String",
          "locationType": {
            "@odata.type": "microsoft.graph.locationType"
          },
          "uniqueId": "String",
          "uniqueIdType": {
            "@odata.type": "microsoft.graph.locationUniqueIdType"
          }
        }
      },
      "microsoft.graph.physicalAddress": {
        "title": "physicalAddress",
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.physicalAddressType"
              }
            ],
            "nullable": true
          },
          "postOfficeBox": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "The street.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The city.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "The state.",
            "nullable": true
          },
          "countryOrRegion": {
            "type": "string",
            "description": "The country or region. It's a free-format string value, for example, 'United States'.",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code.",
            "nullable": true
          }
        },
        "example": {
          "type": {
            "@odata.type": "microsoft.graph.physicalAddressType"
          },
          "postOfficeBox": "String",
          "street": "String",
          "city": "String",
          "state": "String",
          "countryOrRegion": "String",
          "postalCode": "String"
        }
      },
      "microsoft.graph.outlookGeoCoordinates": {
        "title": "outlookGeoCoordinates",
        "type": "object",
        "properties": {
          "altitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The altitude of the location.",
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The latitude of the location.",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The longitude of the location.",
            "format": "double",
            "nullable": true
          },
          "accuracy": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters.",
            "format": "double",
            "nullable": true
          },
          "altitudeAccuracy": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The accuracy of the altitude.",
            "format": "double",
            "nullable": true
          }
        },
        "example": {
          "altitude": "Double",
          "latitude": "Double",
          "longitude": "Double",
          "accuracy": "Double",
          "altitudeAccuracy": "Double"
        }
      },
      "microsoft.graph.locationConstraint": {
        "title": "locationConstraint",
        "type": "object",
        "properties": {
          "isRequired": {
            "type": "boolean",
            "description": "The client requests the service to include in the response a meeting location for the meeting. If this is true and all the resources are busy, findMeetingTimes will not return any meeting time suggestions. If this is false and all the resources are busy, findMeetingTimes would still look for meeting times without locations.",
            "nullable": true
          },
          "suggestLocation": {
            "type": "boolean",
            "description": "The client requests the service to suggest one or more meeting locations.",
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.locationConstraintItem"
                }
              ],
              "nullable": true
            },
            "description": "Constraint information for one or more locations that the client requests for the meeting."
          }
        },
        "example": {
          "isRequired": true,
          "suggestLocation": true,
          "locations": [
            {
              "@odata.type": "microsoft.graph.locationConstraintItem"
            }
          ]
        }
      },
      "microsoft.graph.locationConstraintItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.location"
          },
          {
            "title": "locationConstraintItem",
            "type": "object",
            "properties": {
              "resolveAvailability": {
                "type": "boolean",
                "description": "If set to true and the specified resource is busy, findMeetingTimes looks for another resource that is free. If set to false and the specified resource is busy, findMeetingTimes returns the resource best ranked in the user's cache without checking if it's free. Default is true.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "locationEmailAddress": "String",
          "address": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "coordinates": {
            "@odata.type": "microsoft.graph.outlookGeoCoordinates"
          },
          "locationUri": "String",
          "locationType": {
            "@odata.type": "microsoft.graph.locationType"
          },
          "uniqueId": "String",
          "uniqueIdType": {
            "@odata.type": "microsoft.graph.locationUniqueIdType"
          },
          "resolveAvailability": true
        }
      },
      "microsoft.graph.timeConstraint": {
        "title": "timeConstraint",
        "type": "object",
        "properties": {
          "activityDomain": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.activityDomain"
              }
            ],
            "description": "The nature of the activity, optional. Possible values are: work, personal, unrestricted, or unknown.",
            "nullable": true
          },
          "timeslots": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.timeSlot"
                }
              ],
              "nullable": true
            },
            "description": "An array of time periods."
          }
        },
        "example": {
          "activityDomain": {
            "@odata.type": "microsoft.graph.activityDomain"
          },
          "timeslots": [
            {
              "@odata.type": "microsoft.graph.timeSlot"
            }
          ]
        }
      },
      "microsoft.graph.meetingTimeCandidatesResult": {
        "title": "meetingTimeCandidatesResult",
        "type": "object",
        "properties": {
          "meetingTimeSlots": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.meetingTimeCandidate"
                }
              ],
              "nullable": true
            }
          },
          "emptySuggestionsHint": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "meetingTimeSlots": [
            {
              "@odata.type": "microsoft.graph.meetingTimeCandidate"
            }
          ],
          "emptySuggestionsHint": "String"
        }
      },
      "microsoft.graph.meetingTimeCandidate": {
        "title": "meetingTimeCandidate",
        "type": "object",
        "properties": {
          "meetingTimeSlot": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.timeSlotOLD"
              }
            ],
            "nullable": true
          },
          "confidence": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          },
          "organizerAvailability": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.freeBusyStatus"
              }
            ],
            "nullable": true
          },
          "attendeeAvailability": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.attendeeAvailability"
                }
              ],
              "nullable": true
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.location"
                }
              ],
              "nullable": true
            }
          },
          "suggestionHint": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "meetingTimeSlot": {
            "@odata.type": "microsoft.graph.timeSlotOLD"
          },
          "confidence": "Double",
          "organizerAvailability": {
            "@odata.type": "microsoft.graph.freeBusyStatus"
          },
          "attendeeAvailability": [
            {
              "@odata.type": "microsoft.graph.attendeeAvailability"
            }
          ],
          "locations": [
            {
              "@odata.type": "microsoft.graph.location"
            }
          ],
          "suggestionHint": "String"
        }
      },
      "microsoft.graph.timeSlotOLD": {
        "title": "timeSlotOLD",
        "type": "object",
        "properties": {
          "start": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.timeStamp"
              }
            ],
            "nullable": true
          },
          "end": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.timeStamp"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "start": {
            "@odata.type": "microsoft.graph.timeStamp"
          },
          "end": {
            "@odata.type": "microsoft.graph.timeStamp"
          }
        }
      },
      "microsoft.graph.timeStamp": {
        "title": "timeStamp",
        "type": "object",
        "properties": {
          "date": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "The date portion of the timestamp.",
            "format": "date",
            "nullable": true
          },
          "time": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
            "type": "string",
            "description": "The time portion of the timestamp.",
            "format": "time",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "description": "The timezone portion of the timestamp, which is one of the 24 longitudinal areas in the world.",
            "nullable": true
          }
        },
        "example": {
          "date": "Date (timestamp)",
          "time": "TimeOfDay (timestamp)",
          "timeZone": "String"
        }
      },
      "microsoft.graph.mailTips": {
        "title": "mailTips",
        "type": "object",
        "properties": {
          "emailAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.emailAddress"
              }
            ],
            "nullable": true
          },
          "automaticReplies": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.automaticRepliesMailTips"
              }
            ],
            "nullable": true
          },
          "mailboxFull": {
            "type": "boolean",
            "nullable": true
          },
          "customMailTip": {
            "type": "string",
            "nullable": true
          },
          "externalMemberCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalMemberCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deliveryRestricted": {
            "type": "boolean",
            "nullable": true
          },
          "isModerated": {
            "type": "boolean",
            "nullable": true
          },
          "recipientScope": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recipientScopeType"
              }
            ],
            "nullable": true
          },
          "recipientSuggestions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            }
          },
          "maxMessageSize": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mailTipsError"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "emailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "automaticReplies": {
            "@odata.type": "microsoft.graph.automaticRepliesMailTips"
          },
          "mailboxFull": true,
          "customMailTip": "String",
          "externalMemberCount": "Int32",
          "totalMemberCount": "Int32",
          "deliveryRestricted": true,
          "isModerated": true,
          "recipientScope": {
            "@odata.type": "microsoft.graph.recipientScopeType"
          },
          "recipientSuggestions": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "maxMessageSize": "Int32",
          "error": {
            "@odata.type": "microsoft.graph.mailTipsError"
          }
        }
      },
      "microsoft.graph.automaticRepliesMailTips": {
        "title": "automaticRepliesMailTips",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "messageLanguage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.localeInfo"
              }
            ],
            "nullable": true
          },
          "scheduledStartTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "nullable": true
          },
          "scheduledEndTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "message": "String",
          "messageLanguage": {
            "@odata.type": "microsoft.graph.localeInfo"
          },
          "scheduledStartTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "scheduledEndTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          }
        }
      },
      "microsoft.graph.mailTipsError": {
        "title": "mailTipsError",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "message": "String",
          "code": "String"
        }
      },
      "microsoft.graph.reminder": {
        "title": "reminder",
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "description": "The unique ID of the event. Read only.",
            "nullable": true
          },
          "eventStartTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date, time, and time zone that the event starts.",
            "nullable": true
          },
          "eventEndTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date, time and time zone that the event ends.",
            "nullable": true
          },
          "changeKey": {
            "type": "string",
            "description": "Identifies the version of the reminder. Every time the reminder is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object.",
            "nullable": true
          },
          "eventSubject": {
            "type": "string",
            "description": "The text of the event's subject line.",
            "nullable": true
          },
          "eventLocation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.location"
              }
            ],
            "description": "The location of the event.",
            "nullable": true
          },
          "eventWebLink": {
            "type": "string",
            "description": "The URL to open the event in Outlook on the web.The event will open in the browser if you are logged in to your mailbox via Outlook on the web. You will be prompted to login if you are not already logged in with the browser.This URL can be accessed from within an iFrame.",
            "nullable": true
          },
          "reminderFireTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date, time, and time zone that the reminder is set to occur.",
            "nullable": true
          }
        },
        "example": {
          "eventId": "String",
          "eventStartTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "eventEndTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "changeKey": "String",
          "eventSubject": "String",
          "eventLocation": {
            "@odata.type": "microsoft.graph.location"
          },
          "eventWebLink": "String",
          "reminderFireTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          }
        }
      },
      "microsoft.graph.timeZoneInformation": {
        "title": "timeZoneInformation",
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "description": "An identifier for the time zone.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "A display string that represents the time zone.",
            "nullable": true
          }
        },
        "example": {
          "alias": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.messageRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "messageRule",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The display name of the rule.",
                "nullable": true
              },
              "sequence": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Indicates the order in which the rule is executed, among other rules.",
                "format": "int32",
                "nullable": true
              },
              "conditions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.messageRulePredicates"
                  }
                ],
                "description": "Conditions that when fulfilled, will trigger the corresponding actions for that rule.",
                "nullable": true
              },
              "actions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.messageRuleActions"
                  }
                ],
                "description": "Actions to be taken on a message when the corresponding conditions are fulfilled.",
                "nullable": true
              },
              "exceptions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.messageRulePredicates"
                  }
                ],
                "description": "Exception conditions for the rule.",
                "nullable": true
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Indicates whether the rule is enabled to be applied to messages.",
                "nullable": true
              },
              "hasError": {
                "type": "boolean",
                "description": "Indicates whether the rule is in an error condition. Read-only.",
                "nullable": true
              },
              "isReadOnly": {
                "type": "boolean",
                "description": "Indicates if the rule is read-only and cannot be modified or deleted by the rules REST API.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "sequence": "Int32",
          "conditions": {
            "@odata.type": "microsoft.graph.messageRulePredicates"
          },
          "actions": {
            "@odata.type": "microsoft.graph.messageRuleActions"
          },
          "exceptions": {
            "@odata.type": "microsoft.graph.messageRulePredicates"
          },
          "isEnabled": true,
          "hasError": true,
          "isReadOnly": true
        }
      },
      "microsoft.graph.userConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "userConfiguration",
            "type": "object",
            "properties": {
              "binaryData": {
                "type": "string",
                "format": "base64url",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "binaryData": "Binary"
        }
      },
      "microsoft.graph.singleValueLegacyExtendedProperty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "singleValueLegacyExtendedProperty",
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "A property value.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "value": "String"
        }
      },
      "microsoft.graph.multiValueLegacyExtendedProperty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "multiValueLegacyExtendedProperty",
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A collection of property values."
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "value": [
            "String"
          ]
        }
      },
      "microsoft.graph.internetMessageHeader": {
        "title": "internetMessageHeader",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Represents the key in a key-value pair.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The value in a key-value pair.",
            "nullable": true
          }
        },
        "example": {
          "name": "String",
          "value": "String"
        }
      },
      "microsoft.graph.itemBody": {
        "title": "itemBody",
        "type": "object",
        "properties": {
          "contentType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.bodyType"
              }
            ],
            "description": "The type of the content. Possible values are Text and HTML.",
            "nullable": true
          },
          "content": {
            "type": "string",
            "description": "The content of the item.",
            "nullable": true
          }
        },
        "example": {
          "contentType": {
            "@odata.type": "microsoft.graph.bodyType"
          },
          "content": "String"
        }
      },
      "microsoft.graph.mentionsPreview": {
        "title": "mentionsPreview",
        "type": "object",
        "properties": {
          "isMentioned": {
            "type": "boolean",
            "nullable": true
          }
        },
        "example": {
          "isMentioned": true
        }
      },
      "microsoft.graph.followupFlag": {
        "title": "followupFlag",
        "type": "object",
        "properties": {
          "completedDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that the follow-up was finished.",
            "nullable": true
          },
          "dueDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that the follow-up is to be finished.",
            "nullable": true
          },
          "startDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that the follow-up is to begin.",
            "nullable": true
          },
          "flagStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.followupFlagStatus"
              }
            ],
            "description": "The status for follow-up for an item. Possible values are notFlagged, complete, and flagged.",
            "nullable": true
          }
        },
        "example": {
          "completedDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "dueDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "startDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "flagStatus": {
            "@odata.type": "microsoft.graph.followupFlagStatus"
          }
        }
      },
      "microsoft.graph.mention": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mention",
            "type": "object",
            "properties": {
              "mentioned": {
                "$ref": "#/components/schemas/microsoft.graph.emailAddress"
              },
              "mentionText": {
                "type": "string",
                "nullable": true
              },
              "clientReference": {
                "type": "string",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                ],
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "serverCreatedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "deepLink": {
                "type": "string",
                "nullable": true
              },
              "application": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "mentioned": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "mentionText": "String",
          "clientReference": "String",
          "createdBy": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "serverCreatedDateTime": "DateTimeOffset (timestamp)",
          "deepLink": "String",
          "application": "String"
        }
      },
      "microsoft.graph.fileAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attachment"
          },
          {
            "title": "fileAttachment",
            "type": "object",
            "properties": {
              "contentId": {
                "type": "string",
                "description": "The ID of the attachment in the Exchange store.",
                "nullable": true
              },
              "contentLocation": {
                "type": "string",
                "description": "The Uniform Resource Identifier (URI) that corresponds to the location of the content of the attachment.",
                "nullable": true
              },
              "contentBytes": {
                "type": "string",
                "description": "The base64-encoded contents of the file.",
                "format": "base64url",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "contentType": "String",
          "size": "Int32",
          "isInline": true,
          "contentId": "String",
          "contentLocation": "String",
          "contentBytes": "Binary"
        }
      },
      "microsoft.graph.itemAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attachment"
          },
          {
            "title": "itemAttachment",
            "type": "object",
            "properties": {
              "item": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.outlookItem"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "contentType": "String",
          "size": "Int32",
          "isInline": true,
          "item": {
            "@odata.type": "microsoft.graph.outlookItem"
          }
        }
      },
      "microsoft.graph.responseStatus": {
        "title": "responseStatus",
        "type": "object",
        "properties": {
          "response": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.responseType"
              }
            ],
            "description": "The response type. Possible values are: None, Organizer, TentativelyAccepted, Accepted, Declined, NotResponded.",
            "nullable": true
          },
          "time": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The date and time that the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "response": {
            "@odata.type": "microsoft.graph.responseType"
          },
          "time": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.patternedRecurrence": {
        "title": "patternedRecurrence",
        "type": "object",
        "properties": {
          "pattern": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrencePattern"
              }
            ],
            "description": "The frequency of an event.",
            "nullable": true
          },
          "range": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrenceRange"
              }
            ],
            "description": "The duration of an event.",
            "nullable": true
          }
        },
        "example": {
          "pattern": {
            "@odata.type": "microsoft.graph.recurrencePattern"
          },
          "range": {
            "@odata.type": "microsoft.graph.recurrenceRange"
          }
        }
      },
      "microsoft.graph.recurrencePattern": {
        "title": "recurrencePattern",
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrencePatternType"
              }
            ],
            "description": "The recurrence pattern type: daily, weekly, absoluteMonthly, relativeMonthly, absoluteYearly, relativeYearly. Required.",
            "nullable": true
          },
          "interval": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.",
            "format": "int32"
          },
          "month": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The month in which the event occurs.  This is a number from 1 to 12.",
            "format": "int32"
          },
          "dayOfMonth": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.",
            "format": "int32"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
                }
              ],
              "nullable": true
            },
            "description": "A collection of the days of the week on which the event occurs. Possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly."
          },
          "firstDayOfWeek": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
              }
            ],
            "description": "The first day of the week. Possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. Default is sunday. Required if type is weekly.",
            "nullable": true
          },
          "index": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.weekIndex"
              }
            ],
            "description": "Specifies on which instance of the allowed days specified in daysOfsWeek the event occurs, counted from the first instance in the month. Possible values are: first, second, third, fourth, last. Default is first. Optional and used if type is relativeMonthly or relativeYearly.",
            "nullable": true
          }
        },
        "example": {
          "type": {
            "@odata.type": "microsoft.graph.recurrencePatternType"
          },
          "interval": "Int32",
          "month": "Int32",
          "dayOfMonth": "Int32",
          "daysOfWeek": [
            {
              "@odata.type": "microsoft.graph.dayOfWeek"
            }
          ],
          "firstDayOfWeek": {
            "@odata.type": "microsoft.graph.dayOfWeek"
          },
          "index": {
            "@odata.type": "microsoft.graph.weekIndex"
          }
        }
      },
      "microsoft.graph.recurrenceRange": {
        "title": "recurrenceRange",
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrenceRangeType"
              }
            ],
            "description": "The recurrence range. Possible values are: endDate, noEnd, numbered. Required.",
            "nullable": true
          },
          "startDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.",
            "format": "date",
            "nullable": true
          },
          "recurrenceTimeZone": {
            "type": "string",
            "description": "Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.",
            "nullable": true
          },
          "numberOfOccurrences": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of times to repeat the event. Required and must be positive if type is numbered.",
            "format": "int32"
          }
        },
        "example": {
          "type": {
            "@odata.type": "microsoft.graph.recurrenceRangeType"
          },
          "startDate": "Date (timestamp)",
          "endDate": "Date (timestamp)",
          "recurrenceTimeZone": "String",
          "numberOfOccurrences": "Int32"
        }
      },
      "microsoft.graph.attendee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
          },
          {
            "title": "attendee",
            "type": "object",
            "properties": {
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.responseStatus"
                  }
                ],
                "description": "The attendee's response (none, accepted, declined, etc.) for the event and date-time that the response was sent.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "emailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "type": {
            "@odata.type": "microsoft.graph.attendeeType"
          },
          "status": {
            "@odata.type": "microsoft.graph.responseStatus"
          }
        }
      },
      "microsoft.graph.eventCreationOptions": {
        "title": "eventCreationOptions",
        "type": "object",
        "properties": {
          "saveToGroupCalendarOnly": {
            "type": "boolean",
            "nullable": true
          }
        },
        "example": {
          "saveToGroupCalendarOnly": true
        }
      },
      "microsoft.graph.phone": {
        "title": "phone",
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.phoneType"
              }
            ],
            "description": "The type of phone number. Possible values are: home, business, mobile, other, assistant, homeFax, businessFax, otherFax, pager, radio.",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "The phone number.",
            "nullable": true
          }
        },
        "example": {
          "type": {
            "@odata.type": "microsoft.graph.phoneType"
          },
          "number": "String"
        }
      },
      "microsoft.graph.website": {
        "title": "website",
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.websiteType"
              }
            ],
            "description": "Possible values are: other, home, work, blog, profile.",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "The URL of the website.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the web site.",
            "nullable": true
          }
        },
        "example": {
          "type": {
            "@odata.type": "microsoft.graph.websiteType"
          },
          "address": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.eventMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.message"
          },
          {
            "title": "eventMessage",
            "type": "object",
            "properties": {
              "meetingMessageType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.meetingMessageType"
                  }
                ],
                "description": "The type of event message: none, meetingRequest, meetingCancelled, meetingAccepted, meetingTenativelyAccepted, meetingDeclined.",
                "nullable": true
              },
              "startDateTime": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "nullable": true
              },
              "endDateTime": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "nullable": true
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.location"
                  }
                ],
                "nullable": true
              },
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.eventType"
                  }
                ],
                "nullable": true
              },
              "recurrence": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.patternedRecurrence"
                  }
                ],
                "nullable": true
              },
              "isOutOfDate": {
                "type": "boolean",
                "nullable": true
              },
              "isAllDay": {
                "type": "boolean",
                "nullable": true
              },
              "isDelegated": {
                "type": "boolean",
                "nullable": true
              },
              "event": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "changeKey": "String",
          "categories": [
            "String"
          ],
          "receivedDateTime": "DateTimeOffset (timestamp)",
          "sentDateTime": "DateTimeOffset (timestamp)",
          "hasAttachments": true,
          "internetMessageId": "String",
          "internetMessageHeaders": [
            {
              "@odata.type": "microsoft.graph.internetMessageHeader"
            }
          ],
          "subject": "String",
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "bodyPreview": "String",
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "parentFolderId": "String",
          "sender": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "from": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "toRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "bccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "replyTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "conversationId": "String",
          "conversationIndex": "Binary",
          "uniqueBody": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "isDeliveryReceiptRequested": true,
          "isReadReceiptRequested": true,
          "isRead": true,
          "isDraft": true,
          "webLink": "String",
          "mentionsPreview": {
            "@odata.type": "microsoft.graph.mentionsPreview"
          },
          "inferenceClassification": {
            "@odata.type": "microsoft.graph.inferenceClassificationType"
          },
          "unsubscribeData": [
            "String"
          ],
          "unsubscribeEnabled": true,
          "flag": {
            "@odata.type": "microsoft.graph.followupFlag"
          },
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "mentions": [
            {
              "@odata.type": "microsoft.graph.mention"
            }
          ],
          "meetingMessageType": {
            "@odata.type": "microsoft.graph.meetingMessageType"
          },
          "startDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "endDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "location": {
            "@odata.type": "microsoft.graph.location"
          },
          "type": {
            "@odata.type": "microsoft.graph.eventType"
          },
          "recurrence": {
            "@odata.type": "microsoft.graph.patternedRecurrence"
          },
          "isOutOfDate": true,
          "isAllDay": true,
          "isDelegated": true,
          "event": {
            "@odata.type": "microsoft.graph.event"
          }
        }
      },
      "microsoft.graph.messageRulePredicates": {
        "title": "messageRulePredicates",
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply."
          },
          "subjectContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply."
          },
          "bodyContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply."
          },
          "bodyOrSubjectContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply."
          },
          "senderContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply."
          },
          "recipientContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply."
          },
          "headerContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply."
          },
          "messageActionFlag": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.messageActionFlag"
              }
            ],
            "description": "Represents the flag-for-action value that appears on an incoming message in order for the condition or exception to apply. Possible values are: any, call, doNotForward, followUp, fyi, forward, noResponseNecessary, read, reply, replyToAll, review.",
            "nullable": true
          },
          "importance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.importance"
              }
            ],
            "description": "The importance that is stamped on an incoming message in order for the condition or exception to apply: low, normal, high.",
            "nullable": true
          },
          "sensitivity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sensitivity"
              }
            ],
            "description": "Represents the sensitivity level that must be stamped on an incoming message in order for the condition or exception to apply. Possible values are: normal, personal, private, confidential.",
            "nullable": true
          },
          "fromAddresses": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply."
          },
          "sentToAddresses": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply."
          },
          "sentToMe": {
            "type": "boolean",
            "description": "Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply.",
            "nullable": true
          },
          "sentOnlyToMe": {
            "type": "boolean",
            "description": "Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply.",
            "nullable": true
          },
          "sentCcMe": {
            "type": "boolean",
            "description": "Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply.",
            "nullable": true
          },
          "sentToOrCcMe": {
            "type": "boolean",
            "description": "Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply.",
            "nullable": true
          },
          "notSentToMe": {
            "type": "boolean",
            "description": "Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply.",
            "nullable": true
          },
          "hasAttachments": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must have attachments in order for the condition or exception to apply.",
            "nullable": true
          },
          "isApprovalRequest": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.",
            "nullable": true
          },
          "isAutomaticForward": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.",
            "nullable": true
          },
          "isAutomaticReply": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.",
            "nullable": true
          },
          "isEncrypted": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.",
            "nullable": true
          },
          "isMeetingRequest": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.",
            "nullable": true
          },
          "isMeetingResponse": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.",
            "nullable": true
          },
          "isNonDeliveryReport": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.",
            "nullable": true
          },
          "isPermissionControlled": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply.",
            "nullable": true
          },
          "isReadReceipt": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.",
            "nullable": true
          },
          "isSigned": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.",
            "nullable": true
          },
          "isVoicemail": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.",
            "nullable": true
          },
          "withinSizeRange": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sizeRange"
              }
            ],
            "description": "Represents the minimum and maximum sizes (in kilobytes) that an incoming message must fall in between in order for the condition or exception to apply.",
            "nullable": true
          }
        },
        "example": {
          "categories": [
            "String"
          ],
          "subjectContains": [
            "String"
          ],
          "bodyContains": [
            "String"
          ],
          "bodyOrSubjectContains": [
            "String"
          ],
          "senderContains": [
            "String"
          ],
          "recipientContains": [
            "String"
          ],
          "headerContains": [
            "String"
          ],
          "messageActionFlag": {
            "@odata.type": "microsoft.graph.messageActionFlag"
          },
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "sensitivity": {
            "@odata.type": "microsoft.graph.sensitivity"
          },
          "fromAddresses": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "sentToAddresses": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "sentToMe": true,
          "sentOnlyToMe": true,
          "sentCcMe": true,
          "sentToOrCcMe": true,
          "notSentToMe": true,
          "hasAttachments": true,
          "isApprovalRequest": true,
          "isAutomaticForward": true,
          "isAutomaticReply": true,
          "isEncrypted": true,
          "isMeetingRequest": true,
          "isMeetingResponse": true,
          "isNonDeliveryReport": true,
          "isPermissionControlled": true,
          "isReadReceipt": true,
          "isSigned": true,
          "isVoicemail": true,
          "withinSizeRange": {
            "@odata.type": "microsoft.graph.sizeRange"
          }
        }
      },
      "microsoft.graph.sizeRange": {
        "title": "sizeRange",
        "type": "object",
        "properties": {
          "minimumSize": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The minimum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.",
            "format": "int32",
            "nullable": true
          },
          "maximumSize": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The maximum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "minimumSize": "Int32",
          "maximumSize": "Int32"
        }
      },
      "microsoft.graph.messageRuleActions": {
        "title": "messageRuleActions",
        "type": "object",
        "properties": {
          "moveToFolder": {
            "type": "string",
            "description": "The ID of the folder that a message will be moved to.",
            "nullable": true
          },
          "copyToFolder": {
            "type": "string",
            "description": "The ID of a folder that a message is to be copied to.",
            "nullable": true
          },
          "delete": {
            "type": "boolean",
            "description": "Indicates whether a message should be moved to the Deleted Items folder.",
            "nullable": true
          },
          "permanentDelete": {
            "type": "boolean",
            "description": "Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder.",
            "nullable": true
          },
          "markAsRead": {
            "type": "boolean",
            "description": "Indicates whether a message should be marked as read.",
            "nullable": true
          },
          "markImportance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.importance"
              }
            ],
            "description": "Sets the importance of the message, which can be: low, normal, high.",
            "nullable": true
          },
          "forwardTo": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "The email addresses of the recipients to which a message should be forwarded."
          },
          "forwardAsAttachmentTo": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "The email addresses of the recipients to which a message should be forwarded as an attachment."
          },
          "redirectTo": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "The email addresses to which a message should be redirected."
          },
          "assignCategories": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "A list of categories to be assigned to a message."
          },
          "stopProcessingRules": {
            "type": "boolean",
            "description": "Indicates whether subsequent rules should be evaluated.",
            "nullable": true
          }
        },
        "example": {
          "moveToFolder": "String",
          "copyToFolder": "String",
          "delete": true,
          "permanentDelete": true,
          "markAsRead": true,
          "markImportance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "forwardTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "forwardAsAttachmentTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "redirectTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "assignCategories": [
            "String"
          ],
          "stopProcessingRules": true
        }
      },
      "microsoft.graph.eventMessageRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.eventMessage"
          },
          {
            "title": "eventMessageRequest",
            "type": "object",
            "properties": {
              "previousLocation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.location"
                  }
                ],
                "nullable": true
              },
              "previousStartDateTime": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "nullable": true
              },
              "previousEndDateTime": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "nullable": true
              },
              "responseRequested": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "changeKey": "String",
          "categories": [
            "String"
          ],
          "receivedDateTime": "DateTimeOffset (timestamp)",
          "sentDateTime": "DateTimeOffset (timestamp)",
          "hasAttachments": true,
          "internetMessageId": "String",
          "internetMessageHeaders": [
            {
              "@odata.type": "microsoft.graph.internetMessageHeader"
            }
          ],
          "subject": "String",
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "bodyPreview": "String",
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "parentFolderId": "String",
          "sender": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "from": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "toRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "bccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "replyTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "conversationId": "String",
          "conversationIndex": "Binary",
          "uniqueBody": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "isDeliveryReceiptRequested": true,
          "isReadReceiptRequested": true,
          "isRead": true,
          "isDraft": true,
          "webLink": "String",
          "mentionsPreview": {
            "@odata.type": "microsoft.graph.mentionsPreview"
          },
          "inferenceClassification": {
            "@odata.type": "microsoft.graph.inferenceClassificationType"
          },
          "unsubscribeData": [
            "String"
          ],
          "unsubscribeEnabled": true,
          "flag": {
            "@odata.type": "microsoft.graph.followupFlag"
          },
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "mentions": [
            {
              "@odata.type": "microsoft.graph.mention"
            }
          ],
          "meetingMessageType": {
            "@odata.type": "microsoft.graph.meetingMessageType"
          },
          "startDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "endDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "location": {
            "@odata.type": "microsoft.graph.location"
          },
          "type": {
            "@odata.type": "microsoft.graph.eventType"
          },
          "recurrence": {
            "@odata.type": "microsoft.graph.patternedRecurrence"
          },
          "isOutOfDate": true,
          "isAllDay": true,
          "isDelegated": true,
          "event": {
            "@odata.type": "microsoft.graph.event"
          },
          "previousLocation": {
            "@odata.type": "microsoft.graph.location"
          },
          "previousStartDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "previousEndDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "responseRequested": true
        }
      },
      "microsoft.graph.referenceAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attachment"
          },
          {
            "title": "referenceAttachment",
            "type": "object",
            "properties": {
              "sourceUrl": {
                "type": "string",
                "nullable": true
              },
              "providerType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.referenceAttachmentProvider"
                  }
                ],
                "nullable": true
              },
              "thumbnailUrl": {
                "type": "string",
                "nullable": true
              },
              "previewUrl": {
                "type": "string",
                "nullable": true
              },
              "permission": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.referenceAttachmentPermission"
                  }
                ],
                "nullable": true
              },
              "isFolder": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "contentType": "String",
          "size": "Int32",
          "isInline": true,
          "sourceUrl": "String",
          "providerType": {
            "@odata.type": "microsoft.graph.referenceAttachmentProvider"
          },
          "thumbnailUrl": "String",
          "previewUrl": "String",
          "permission": {
            "@odata.type": "microsoft.graph.referenceAttachmentPermission"
          },
          "isFolder": true
        }
      },
      "microsoft.graph.openTypeExtension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.extension"
          },
          {
            "title": "openTypeExtension",
            "type": "object",
            "properties": {
              "extensionName": {
                "type": "string",
                "description": "A unique text identifier for an open type open extension. Required."
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "extensionName": "String"
        }
      },
      "microsoft.graph.post": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "post",
            "type": "object",
            "properties": {
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "description": "The contents of the post. This is a default property. This property can be null.",
                "nullable": true
              },
              "receivedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time"
              },
              "hasAttachments": {
                "type": "boolean",
                "description": "Indicates whether the post has at least one attachment. This is a default property."
              },
              "from": {
                "$ref": "#/components/schemas/microsoft.graph.recipient"
              },
              "sender": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "description": "Contains the address of the sender. The value of Sender is assumed to be the address of the authenticated user in the case when Sender is not specified. This is a default property.",
                "nullable": true
              },
              "conversationThreadId": {
                "type": "string",
                "description": "Unique ID of the conversation thread. Read-only.",
                "nullable": true
              },
              "newParticipants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                },
                "description": "Conversation participants that were added to the thread as part of this post."
              },
              "conversationId": {
                "type": "string",
                "description": "Unique ID of the conversation. Read-only.",
                "nullable": true
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "inReplyTo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.post"
                  }
                ],
                "nullable": true
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "mentions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mention"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "changeKey": "String",
          "categories": [
            "String"
          ],
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "receivedDateTime": "DateTimeOffset (timestamp)",
          "hasAttachments": true,
          "from": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "sender": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "conversationThreadId": "String",
          "newParticipants": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "conversationId": "String",
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "inReplyTo": {
            "@odata.type": "microsoft.graph.post"
          },
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "mentions": [
            {
              "@odata.type": "microsoft.graph.mention"
            }
          ]
        }
      },
      "microsoft.graph.rankedEmailAddress": {
        "title": "rankedEmailAddress",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "rank": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "double",
            "nullable": true
          }
        },
        "example": {
          "address": "String",
          "rank": "Double"
        }
      },
      "microsoft.graph.personDataSource": {
        "title": "personDataSource",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "type": "String"
        }
      },
      "microsoft.graph.inferenceClassificationOverride": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "inferenceClassificationOverride",
            "type": "object",
            "properties": {
              "classifyAs": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationType"
                  }
                ],
                "description": "Specifies how incoming messages from a specific sender should always be classified as. Possible values are: focused, other.",
                "nullable": true
              },
              "senderEmailAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                ],
                "description": "The email address information of the sender for whom the override is created.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "classifyAs": {
            "@odata.type": "microsoft.graph.inferenceClassificationType"
          },
          "senderEmailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          }
        }
      },
      "microsoft.graph.booleanColumn": {
        "title": "booleanColumn",
        "type": "object"
      },
      "microsoft.graph.calculatedColumn": {
        "title": "calculatedColumn",
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "description": "For dateTime output types, the format of the value. Must be one of dateOnly or dateTime.",
            "nullable": true
          },
          "formula": {
            "type": "string",
            "description": "The formula used to compute the value for this column.",
            "nullable": true
          },
          "outputType": {
            "type": "string",
            "description": "The output type used to format values in this column. Must be one of boolean, currency, dateTime, number, or text.",
            "nullable": true
          }
        },
        "example": {
          "format": "String",
          "formula": "String",
          "outputType": "String"
        }
      },
      "microsoft.graph.choiceColumn": {
        "title": "choiceColumn",
        "type": "object",
        "properties": {
          "allowTextEntry": {
            "type": "boolean",
            "description": "If true, allows custom values that aren't in the configured choices.",
            "nullable": true
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "The list of values available for this column."
          },
          "displayAs": {
            "type": "string",
            "description": "How the choices are to be presented in the UX. Must be one of checkBoxes, dropDownMenu, or radioButtons",
            "nullable": true
          }
        },
        "example": {
          "allowTextEntry": true,
          "choices": [
            "String"
          ],
          "displayAs": "String"
        }
      },
      "microsoft.graph.currencyColumn": {
        "title": "currencyColumn",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "description": "Specifies the locale from which to infer the currency symbol.",
            "nullable": true
          }
        },
        "example": {
          "locale": "String"
        }
      },
      "microsoft.graph.dateTimeColumn": {
        "title": "dateTimeColumn",
        "type": "object",
        "properties": {
          "displayAs": {
            "type": "string",
            "description": "How the value should be presented in the UX. Must be one of default, friendly, or standard. See below for more details. If unspecified, treated as default.",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "Indicates whether the value should be presented as a date only or a date and time. Must be one of dateOnly or dateTime",
            "nullable": true
          }
        },
        "example": {
          "displayAs": "String",
          "format": "String"
        }
      },
      "microsoft.graph.defaultColumnValue": {
        "title": "defaultColumnValue",
        "type": "object",
        "properties": {
          "formula": {
            "type": "string",
            "description": "The formula used to compute the default value for this column.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The direct value to use as the default value for this column.",
            "nullable": true
          }
        },
        "example": {
          "formula": "String",
          "value": "String"
        }
      },
      "microsoft.graph.lookupColumn": {
        "title": "lookupColumn",
        "type": "object",
        "properties": {
          "allowMultipleValues": {
            "type": "boolean",
            "description": "Indicates whether multiple values can be selected from the source.",
            "nullable": true
          },
          "allowUnlimitedLength": {
            "type": "boolean",
            "description": "Indicates whether values in the column should be able to exceed the standard limit of 255 characters.",
            "nullable": true
          },
          "columnName": {
            "type": "string",
            "description": "The name of the lookup source column.",
            "nullable": true
          },
          "listId": {
            "type": "string",
            "description": "The unique identifier of the lookup source list.",
            "nullable": true
          },
          "primaryLookupColumnId": {
            "type": "string",
            "description": "If specified, this column is a secondary lookup, pulling an additional field from the list item looked up by the primary lookup. Use the list item looked up by the primary as the source for the column named here.",
            "nullable": true
          }
        },
        "example": {
          "allowMultipleValues": true,
          "allowUnlimitedLength": true,
          "columnName": "String",
          "listId": "String",
          "primaryLookupColumnId": "String"
        }
      },
      "microsoft.graph.numberColumn": {
        "title": "numberColumn",
        "type": "object",
        "properties": {
          "decimalPlaces": {
            "type": "string",
            "description": "How many decimal places to display. See below for information about the possible values.",
            "nullable": true
          },
          "displayAs": {
            "type": "string",
            "description": "How the value should be presented in the UX. Must be one of number or percentage. If unspecified, treated as number.",
            "nullable": true
          },
          "maximum": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The maximum permitted value.",
            "format": "double",
            "nullable": true
          },
          "minimum": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The minimum permitted value.",
            "format": "double",
            "nullable": true
          }
        },
        "example": {
          "decimalPlaces": "String",
          "displayAs": "String",
          "maximum": "Double",
          "minimum": "Double"
        }
      },
      "microsoft.graph.personOrGroupColumn": {
        "title": "personOrGroupColumn",
        "type": "object",
        "properties": {
          "allowMultipleSelection": {
            "type": "boolean",
            "description": "Indicates whether multiple values can be selected from the source.",
            "nullable": true
          },
          "displayAs": {
            "type": "string",
            "description": "How to display the information about the person or group chosen. See below.",
            "nullable": true
          },
          "chooseFromType": {
            "type": "string",
            "description": "Whether to allow selection of people only, or people and groups. Must be one of peopleAndGroups or peopleOnly.",
            "nullable": true
          }
        },
        "example": {
          "allowMultipleSelection": true,
          "displayAs": "String",
          "chooseFromType": "String"
        }
      },
      "microsoft.graph.textColumn": {
        "title": "textColumn",
        "type": "object",
        "properties": {
          "allowMultipleLines": {
            "type": "boolean",
            "description": "Whether to allow multiple lines of text.",
            "nullable": true
          },
          "appendChangesToExistingText": {
            "type": "boolean",
            "description": "Whether updates to this column should replace existing text, or append to it.",
            "nullable": true
          },
          "linesForEditing": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The size of the text box.",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The maximum number of characters for the value.",
            "format": "int32",
            "nullable": true
          },
          "textType": {
            "type": "string",
            "description": "The type of text being stored. Must be one of plain or richText",
            "nullable": true
          }
        },
        "example": {
          "allowMultipleLines": true,
          "appendChangesToExistingText": true,
          "linesForEditing": "Int32",
          "maxLength": "Int32",
          "textType": "String"
        }
      },
      "microsoft.graph.columnLink": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "columnLink",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the column  in this content type.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "name": "String"
        }
      },
      "microsoft.graph.contentTypeOrder": {
        "title": "contentTypeOrder",
        "type": "object",
        "properties": {
          "default": {
            "type": "boolean",
            "description": "Whether this is the default Content Type",
            "nullable": true
          },
          "position": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Specifies the position in which the Content Type appears in the selection UI.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "default": true,
          "position": "Int32"
        }
      },
      "microsoft.graph.fieldValueSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "fieldValueSet",
            "type": "object"
          }
        ],
        "example": {
          "id": "String (identifier)"
        }
      },
      "microsoft.graph.itemActionSet": {
        "title": "itemActionSet",
        "type": "object",
        "properties": {
          "comment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.commentAction"
              }
            ],
            "nullable": true
          },
          "create": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.createAction"
              }
            ],
            "nullable": true
          },
          "delete": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deleteAction"
              }
            ],
            "nullable": true
          },
          "edit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.editAction"
              }
            ],
            "nullable": true
          },
          "mention": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mentionAction"
              }
            ],
            "nullable": true
          },
          "move": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.moveAction"
              }
            ],
            "nullable": true
          },
          "rename": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.renameAction"
              }
            ],
            "nullable": true
          },
          "restore": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.restoreAction"
              }
            ],
            "nullable": true
          },
          "share": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.shareAction"
              }
            ],
            "nullable": true
          },
          "version": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.versionAction"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "comment": {
            "@odata.type": "microsoft.graph.commentAction"
          },
          "create": {
            "@odata.type": "microsoft.graph.createAction"
          },
          "delete": {
            "@odata.type": "microsoft.graph.deleteAction"
          },
          "edit": {
            "@odata.type": "microsoft.graph.editAction"
          },
          "mention": {
            "@odata.type": "microsoft.graph.mentionAction"
          },
          "move": {
            "@odata.type": "microsoft.graph.moveAction"
          },
          "rename": {
            "@odata.type": "microsoft.graph.renameAction"
          },
          "restore": {
            "@odata.type": "microsoft.graph.restoreAction"
          },
          "share": {
            "@odata.type": "microsoft.graph.shareAction"
          },
          "version": {
            "@odata.type": "microsoft.graph.versionAction"
          }
        }
      },
      "microsoft.graph.commentAction": {
        "title": "commentAction",
        "type": "object",
        "properties": {
          "isReply": {
            "type": "boolean",
            "nullable": true
          },
          "parentAuthor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          },
          "participants": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.identitySet"
                }
              ],
              "nullable": true
            }
          }
        },
        "example": {
          "isReply": true,
          "parentAuthor": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "participants": [
            {
              "@odata.type": "microsoft.graph.identitySet"
            }
          ]
        }
      },
      "microsoft.graph.createAction": {
        "title": "createAction",
        "type": "object"
      },
      "microsoft.graph.deleteAction": {
        "title": "deleteAction",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "name": "String"
        }
      },
      "microsoft.graph.editAction": {
        "title": "editAction",
        "type": "object"
      },
      "microsoft.graph.mentionAction": {
        "title": "mentionAction",
        "type": "object",
        "properties": {
          "mentionees": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.identitySet"
                }
              ],
              "nullable": true
            }
          }
        },
        "example": {
          "mentionees": [
            {
              "@odata.type": "microsoft.graph.identitySet"
            }
          ]
        }
      },
      "microsoft.graph.moveAction": {
        "title": "moveAction",
        "type": "object",
        "properties": {
          "From": {
            "type": "string",
            "nullable": true
          },
          "to": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "From": "String",
          "to": "String"
        }
      },
      "microsoft.graph.renameAction": {
        "title": "renameAction",
        "type": "object",
        "properties": {
          "oldName": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "oldName": "String"
        }
      },
      "microsoft.graph.restoreAction": {
        "title": "restoreAction",
        "type": "object"
      },
      "microsoft.graph.shareAction": {
        "title": "shareAction",
        "type": "object",
        "properties": {
          "recipients": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.identitySet"
                }
              ],
              "nullable": true
            }
          }
        },
        "example": {
          "recipients": [
            {
              "@odata.type": "microsoft.graph.identitySet"
            }
          ]
        }
      },
      "microsoft.graph.versionAction": {
        "title": "versionAction",
        "type": "object",
        "properties": {
          "newVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "newVersion": "String"
        }
      },
      "microsoft.graph.itemActivityTimeSet": {
        "title": "itemActivityTimeSet",
        "type": "object",
        "properties": {
          "observedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "recordedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "observedDateTime": "DateTimeOffset (timestamp)",
          "recordedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.contentTypeInfo": {
        "title": "contentTypeInfo",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the content type.",
            "nullable": true
          }
        },
        "example": {
          "id": "String"
        }
      },
      "microsoft.graph.listItemVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItemVersion"
          },
          {
            "title": "listItemVersion",
            "type": "object",
            "properties": {
              "fields": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.fieldValueSet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "publication": {
            "@odata.type": "microsoft.graph.publicationFacet"
          },
          "fields": {
            "@odata.type": "microsoft.graph.fieldValueSet"
          }
        }
      },
      "microsoft.graph.sharingInvitation": {
        "title": "sharingInvitation",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address provided for the recipient of the sharing invitation. Read-only.",
            "nullable": true
          },
          "invitedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "Provides information about who sent the invitation that created this permission, if that information is available. Read-only.",
            "nullable": true
          },
          "redeemedBy": {
            "type": "string",
            "nullable": true
          },
          "signInRequired": {
            "type": "boolean",
            "description": "If true the recipient of the invitation needs to sign in in order to access the shared item. Read-only.",
            "nullable": true
          }
        },
        "example": {
          "email": "String",
          "invitedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "redeemedBy": "String",
          "signInRequired": true
        }
      },
      "microsoft.graph.sharingLink": {
        "title": "sharingLink",
        "type": "object",
        "properties": {
          "application": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "description": "The app the link is associated with.",
            "nullable": true
          },
          "configuratorUrl": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "description": "The scope of the link represented by this permission. Value anonymous indicates the link is usable by anyone, organization indicates the link is only usable for users signed into the same tenant.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of the link created.",
            "nullable": true
          },
          "webHtml": {
            "type": "string",
            "description": "For embed links, this property contains the HTML code for an <iframe> element that will embed the item in a webpage.",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "description": "A URL that opens the item in the browser on the OneDrive website.",
            "nullable": true
          }
        },
        "example": {
          "application": {
            "@odata.type": "microsoft.graph.identity"
          },
          "configuratorUrl": "String",
          "scope": "String",
          "type": "String",
          "webHtml": "String",
          "webUrl": "String"
        }
      },
      "microsoft.graph.sharedDriveItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "sharedDriveItem",
            "type": "object",
            "properties": {
              "owner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Information about the owner of the shared item being referenced.",
                "nullable": true
              },
              "driveItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              },
              "list": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.list"
                  }
                ],
                "nullable": true
              },
              "listItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.listItem"
                  }
                ],
                "nullable": true
              },
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "site": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.site"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "eTag": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "String",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "owner": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "driveItem": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "items": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ],
          "list": {
            "@odata.type": "microsoft.graph.list"
          },
          "listItem": {
            "@odata.type": "microsoft.graph.listItem"
          },
          "root": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "site": {
            "@odata.type": "microsoft.graph.site"
          }
        }
      },
      "microsoft.graph.thumbnail": {
        "title": "thumbnail",
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The content stream for the thumbnail.",
            "format": "base64url",
            "nullable": true
          },
          "height": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The height of the thumbnail, in pixels.",
            "format": "int32",
            "nullable": true
          },
          "sourceItemId": {
            "type": "string",
            "description": "The unique identifier of the item that provided the thumbnail. This is only available when a folder thumbnail is requested.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The URL used to fetch the thumbnail content.",
            "nullable": true
          },
          "width": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The width of the thumbnail, in pixels.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "content": "Stream",
          "height": "Int32",
          "sourceItemId": "String",
          "url": "String",
          "width": "Int32"
        }
      },
      "microsoft.graph.driveItemUploadableProperties": {
        "title": "driveItemUploadableProperties",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Provides a user-visible description of the item. Read-write. Only on OneDrive Personal",
            "nullable": true
          },
          "fileSystemInfo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.fileSystemInfo"
              }
            ],
            "description": "File system information on client. Read-write.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the item (filename and extension). Read-write.",
            "nullable": true
          }
        },
        "example": {
          "description": "String",
          "fileSystemInfo": {
            "@odata.type": "microsoft.graph.fileSystemInfo"
          },
          "name": "String"
        }
      },
      "microsoft.graph.driveRecipient": {
        "title": "driveRecipient",
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "description": "The alias of the domain object, for cases where an email address is unavailable (e.g. security groups).",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address for the recipient, if the recipient has an associated email address.",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "description": "The unique identifier for the recipient in the directory.",
            "nullable": true
          }
        },
        "example": {
          "alias": "String",
          "email": "String",
          "objectId": "String"
        }
      },
      "microsoft.graph.flexSchemaContainer": {
        "title": "flexSchemaContainer",
        "type": "object"
      },
      "microsoft.graph.uploadSession": {
        "title": "uploadSession",
        "type": "object",
        "properties": {
          "expirationDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The date and time in UTC that the upload session will expire. The complete file must be uploaded before this expiration time is reached.",
            "format": "date-time",
            "nullable": true
          },
          "nextExpectedRanges": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "A collection of byte ranges that the server is missing for the file. These ranges are zero indexed and of the format 'start-end' (e.g. '0-26' to indicate the first 27 bytes of the file)."
          },
          "uploadUrl": {
            "type": "string",
            "description": "The URL endpoint that accepts PUT requests for byte ranges of the file.",
            "nullable": true
          }
        },
        "example": {
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "nextExpectedRanges": [
            "String"
          ],
          "uploadUrl": "String"
        }
      },
      "microsoft.graph.trending": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "trending",
            "type": "object",
            "properties": {
              "weight": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "format": "double"
              },
              "resourceVisualization": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.resourceVisualization"
                  }
                ],
                "nullable": true
              },
              "resourceReference": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.resourceReference"
                  }
                ],
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "resource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.entity"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "weight": "Double",
          "resourceVisualization": {
            "@odata.type": "microsoft.graph.resourceVisualization"
          },
          "resourceReference": {
            "@odata.type": "microsoft.graph.resourceReference"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "resource": {
            "@odata.type": "microsoft.graph.entity"
          }
        }
      },
      "microsoft.graph.sharedInsight": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "sharedInsight",
            "type": "object",
            "properties": {
              "lastShared": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharingDetail"
                  }
                ],
                "nullable": true
              },
              "sharingHistory": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.sharingDetail"
                    }
                  ],
                  "nullable": true
                }
              },
              "resourceVisualization": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.resourceVisualization"
                  }
                ],
                "nullable": true
              },
              "resourceReference": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.resourceReference"
                  }
                ],
                "nullable": true
              },
              "lastSharedMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.entity"
                  }
                ],
                "nullable": true
              },
              "resource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.entity"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastShared": {
            "@odata.type": "microsoft.graph.sharingDetail"
          },
          "sharingHistory": [
            {
              "@odata.type": "microsoft.graph.sharingDetail"
            }
          ],
          "resourceVisualization": {
            "@odata.type": "microsoft.graph.resourceVisualization"
          },
          "resourceReference": {
            "@odata.type": "microsoft.graph.resourceReference"
          },
          "lastSharedMethod": {
            "@odata.type": "microsoft.graph.entity"
          },
          "resource": {
            "@odata.type": "microsoft.graph.entity"
          }
        }
      },
      "microsoft.graph.usedInsight": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "usedInsight",
            "type": "object",
            "properties": {
              "lastUsed": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.usageDetails"
                  }
                ],
                "nullable": true
              },
              "resourceVisualization": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.resourceVisualization"
                  }
                ],
                "nullable": true
              },
              "resourceReference": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.resourceReference"
                  }
                ],
                "nullable": true
              },
              "resource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.entity"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastUsed": {
            "@odata.type": "microsoft.graph.usageDetails"
          },
          "resourceVisualization": {
            "@odata.type": "microsoft.graph.resourceVisualization"
          },
          "resourceReference": {
            "@odata.type": "microsoft.graph.resourceReference"
          },
          "resource": {
            "@odata.type": "microsoft.graph.entity"
          }
        }
      },
      "microsoft.graph.resourceVisualization": {
        "title": "resourceVisualization",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "previewImageUrl": {
            "type": "string",
            "nullable": true
          },
          "previewText": {
            "type": "string",
            "nullable": true
          },
          "containerWebUrl": {
            "type": "string",
            "nullable": true
          },
          "containerDisplayName": {
            "type": "string",
            "nullable": true
          },
          "containerType": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "title": "String",
          "type": "String",
          "mediaType": "String",
          "previewImageUrl": "String",
          "previewText": "String",
          "containerWebUrl": "String",
          "containerDisplayName": "String",
          "containerType": "String"
        }
      },
      "microsoft.graph.resourceReference": {
        "title": "resourceReference",
        "type": "object",
        "properties": {
          "webUrl": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "webUrl": "String",
          "id": "String",
          "type": "String"
        }
      },
      "microsoft.graph.sharingDetail": {
        "title": "sharingDetail",
        "type": "object",
        "properties": {
          "sharedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.insightIdentity"
              }
            ],
            "nullable": true
          },
          "sharedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sharingSubject": {
            "type": "string",
            "nullable": true
          },
          "sharingType": {
            "type": "string",
            "nullable": true
          },
          "sharingReference": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.resourceReference"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "sharedBy": {
            "@odata.type": "microsoft.graph.insightIdentity"
          },
          "sharedDateTime": "DateTimeOffset (timestamp)",
          "sharingSubject": "String",
          "sharingType": "String",
          "sharingReference": {
            "@odata.type": "microsoft.graph.resourceReference"
          }
        }
      },
      "microsoft.graph.insightIdentity": {
        "title": "insightIdentity",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "displayName": "String",
          "id": "String",
          "address": "String"
        }
      },
      "microsoft.graph.usageDetails": {
        "title": "usageDetails",
        "type": "object",
        "properties": {
          "lastAccessedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "lastAccessedDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.plannerTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerTask",
            "type": "object",
            "properties": {
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user that created the task.",
                "nullable": true
              },
              "planId": {
                "type": "string",
                "description": "Plan ID to which the task belongs.",
                "nullable": true
              },
              "bucketId": {
                "type": "string",
                "description": "Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It is 28 characters long and case sensitive. Format validation is done on the service.",
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "Title of the task."
              },
              "orderHint": {
                "type": "string",
                "description": "Hint used to order items of this type in a list view. The format is defined as outlined here.",
                "nullable": true
              },
              "assigneePriority": {
                "type": "string",
                "description": "Hint used to order items of this type in a list view. The format is defined as outlined here.",
                "nullable": true
              },
              "percentComplete": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Percentage of task completion. When set to 100, the task is considered completed.",
                "format": "int32",
                "nullable": true
              },
              "startDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "dueDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "hasDescription": {
                "type": "boolean",
                "description": "Read-only. Value is true if the details object of the task has a non-empty description and false otherwise.",
                "nullable": true
              },
              "previewType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerPreviewType"
                  }
                ],
                "description": "This sets the type of preview that shows up on the task. Possible values are: automatic, noPreview, checklist, description, reference.",
                "nullable": true
              },
              "completedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "completedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user that completed the task.",
                "nullable": true
              },
              "referenceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of external references that exist on the task.",
                "format": "int32",
                "nullable": true
              },
              "checklistItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of checklist items that are present on the task.",
                "format": "int32",
                "nullable": true
              },
              "activeChecklistItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of checklist items with value set to 'false', representing incomplete items.",
                "format": "int32",
                "nullable": true
              },
              "appliedCategories": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerAppliedCategories"
                  }
                ],
                "description": "The categories to which the task has been applied. See applied Categories for possible values.",
                "nullable": true
              },
              "assignments": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerAssignments"
                  }
                ],
                "description": "The set of assignees the task is assigned to.",
                "nullable": true
              },
              "conversationThreadId": {
                "type": "string",
                "description": "Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group.",
                "nullable": true
              },
              "details": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerTaskDetails"
                  }
                ],
                "nullable": true
              },
              "assignedToTaskBoardFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerAssignedToTaskBoardTaskFormat"
                  }
                ],
                "nullable": true
              },
              "progressTaskBoardFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerProgressTaskBoardTaskFormat"
                  }
                ],
                "nullable": true
              },
              "bucketTaskBoardFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerBucketTaskBoardTaskFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "planId": "String",
          "bucketId": "String",
          "title": "String",
          "orderHint": "String",
          "assigneePriority": "String",
          "percentComplete": "Int32",
          "startDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "dueDateTime": "DateTimeOffset (timestamp)",
          "hasDescription": true,
          "previewType": {
            "@odata.type": "microsoft.graph.plannerPreviewType"
          },
          "completedDateTime": "DateTimeOffset (timestamp)",
          "completedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "referenceCount": "Int32",
          "checklistItemCount": "Int32",
          "activeChecklistItemCount": "Int32",
          "appliedCategories": {
            "@odata.type": "microsoft.graph.plannerAppliedCategories"
          },
          "assignments": {
            "@odata.type": "microsoft.graph.plannerAssignments"
          },
          "conversationThreadId": "String",
          "details": {
            "@odata.type": "microsoft.graph.plannerTaskDetails"
          },
          "assignedToTaskBoardFormat": {
            "@odata.type": "microsoft.graph.plannerAssignedToTaskBoardTaskFormat"
          },
          "progressTaskBoardFormat": {
            "@odata.type": "microsoft.graph.plannerProgressTaskBoardTaskFormat"
          },
          "bucketTaskBoardFormat": {
            "@odata.type": "microsoft.graph.plannerBucketTaskBoardTaskFormat"
          }
        }
      },
      "microsoft.graph.plannerPlan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerPlan",
            "type": "object",
            "properties": {
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Read-only. The user who created the plan.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Read-only. Date and time at which the plan is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "owner": {
                "type": "string",
                "description": "ID of the Group that owns the plan. A valid group must exist before this field can be set. Once set, this can only be updated by the owner.",
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "Required. Title of the plan."
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              },
              "buckets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
                }
              },
              "details": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerPlanDetails"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "owner": "String",
          "title": "String",
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ],
          "buckets": [
            {
              "@odata.type": "microsoft.graph.plannerBucket"
            }
          ],
          "details": {
            "@odata.type": "microsoft.graph.plannerPlanDetails"
          }
        }
      },
      "microsoft.graph.planner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "planner",
            "type": "object",
            "properties": {
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              },
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              },
              "buckets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ],
          "plans": [
            {
              "@odata.type": "microsoft.graph.plannerPlan"
            }
          ],
          "buckets": [
            {
              "@odata.type": "microsoft.graph.plannerBucket"
            }
          ]
        }
      },
      "microsoft.graph.plannerBucket": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerBucket",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the bucket."
              },
              "planId": {
                "type": "string",
                "description": "Plan ID to which the bucket belongs.",
                "nullable": true
              },
              "orderHint": {
                "type": "string",
                "description": "Hint used to order items of this type in a list view. The format is defined as outlined here.",
                "nullable": true
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "name": "String",
          "planId": "String",
          "orderHint": "String",
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ]
        }
      },
      "microsoft.graph.plannerAppliedCategories": {
        "title": "plannerAppliedCategories",
        "type": "object"
      },
      "microsoft.graph.plannerAssignments": {
        "title": "plannerAssignments",
        "type": "object"
      },
      "microsoft.graph.plannerTaskDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerTaskDetails",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the task",
                "nullable": true
              },
              "previewType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerPreviewType"
                  }
                ],
                "description": "This sets the type of preview that shows up on the task. Possible values are: automatic, noPreview, checklist, description, reference. When set to automatic the displayed preview is chosen by the app viewing the task.",
                "nullable": true
              },
              "references": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerExternalReferences"
                  }
                ],
                "description": "The collection of references on the task.",
                "nullable": true
              },
              "checklist": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerChecklistItems"
                  }
                ],
                "description": "The collection of checklist items on the task.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "description": "String",
          "previewType": {
            "@odata.type": "microsoft.graph.plannerPreviewType"
          },
          "references": {
            "@odata.type": "microsoft.graph.plannerExternalReferences"
          },
          "checklist": {
            "@odata.type": "microsoft.graph.plannerChecklistItems"
          }
        }
      },
      "microsoft.graph.plannerAssignedToTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerAssignedToTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "unassignedOrderHint": {
                "type": "string",
                "description": "Hint value used to order the task on the AssignedTo view of the Task Board when the task is not assigned to anyone, or if the orderHintsByAssignee dictionary does not provide an order hint for the user the task is assigned to. The format is defined as outlined here.",
                "nullable": true
              },
              "orderHintsByAssignee": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerOrderHintsByAssignee"
                  }
                ],
                "description": "Dictionary of hints used to order tasks on the AssignedTo view of the Task Board. The key of each entry is one of the users the task is assigned to and the value is the order hint. The format of each value is defined as outlined here.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "unassignedOrderHint": "String",
          "orderHintsByAssignee": {
            "@odata.type": "microsoft.graph.plannerOrderHintsByAssignee"
          }
        }
      },
      "microsoft.graph.plannerProgressTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerProgressTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "orderHint": {
                "type": "string",
                "description": "Hint value used to order the task on the Progress view of the Task Board. The format is defined as outlined here.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "orderHint": "String"
        }
      },
      "microsoft.graph.plannerBucketTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerBucketTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "orderHint": {
                "type": "string",
                "description": "Hint used to order tasks in the Bucket view of the Task Board. The format is defined as outlined here.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "orderHint": "String"
        }
      },
      "microsoft.graph.plannerPlanDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerPlanDetails",
            "type": "object",
            "properties": {
              "sharedWith": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerUserIds"
                  }
                ],
                "description": "Set of user ids that this plan is shared with. If you are leveraging Office 365 Groups, use the Groups API to manage group membership to share the group's plan. You can also add existing members of the group to this collection though it is not required for them to access the plan owned by the group.",
                "nullable": true
              },
              "categoryDescriptions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerCategoryDescriptions"
                  }
                ],
                "description": "An object that specifies the descriptions of the six categories that can be associated with tasks in the plan",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "sharedWith": {
            "@odata.type": "microsoft.graph.plannerUserIds"
          },
          "categoryDescriptions": {
            "@odata.type": "microsoft.graph.plannerCategoryDescriptions"
          }
        }
      },
      "microsoft.graph.plannerExternalReference": {
        "title": "plannerExternalReference",
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "description": "A name alias to describe the reference.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Used to describe the type of the reference. Types include: PowerPoint, Word, Excel, Other.",
            "nullable": true
          },
          "previewPriority": {
            "type": "string",
            "description": "Used to set the relative priority order in which the reference will be shown as a preview on the task.",
            "nullable": true
          },
          "lastModifiedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "Read-only. User ID by which this is last modified.",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Read-only. Date and time at which this is last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "alias": "String",
          "type": "String",
          "previewPriority": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.plannerChecklistItem": {
        "title": "plannerChecklistItem",
        "type": "object",
        "properties": {
          "isChecked": {
            "type": "boolean",
            "description": "Value is true if the item is checked and false otherwise.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title of the checklist item",
            "nullable": true
          },
          "orderHint": {
            "type": "string",
            "description": "Used to set the relative order of items in the checklist. The format is defined as outlined here.",
            "nullable": true
          },
          "lastModifiedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "Read-only. User ID by which this is last modified.",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Read-only. Date and time at which this is last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "isChecked": true,
          "title": "String",
          "orderHint": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.plannerAssignment": {
        "title": "plannerAssignment",
        "type": "object",
        "properties": {
          "assignedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "The identity of the user that performed the assignment of the task, i.e. the assignor.",
            "nullable": true
          },
          "assignedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The time at which the task was assigned. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
            "format": "date-time",
            "nullable": true
          },
          "orderHint": {
            "type": "string",
            "description": "Hint used to order assignees in a task. The format is defined as outlined here.",
            "nullable": true
          }
        },
        "example": {
          "assignedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "assignedDateTime": "DateTimeOffset (timestamp)",
          "orderHint": "String"
        }
      },
      "microsoft.graph.plannerExternalReferences": {
        "title": "plannerExternalReferences",
        "type": "object"
      },
      "microsoft.graph.plannerChecklistItems": {
        "title": "plannerChecklistItems",
        "type": "object"
      },
      "microsoft.graph.plannerOrderHintsByAssignee": {
        "title": "plannerOrderHintsByAssignee",
        "type": "object"
      },
      "microsoft.graph.plannerUserIds": {
        "title": "plannerUserIds",
        "type": "object"
      },
      "microsoft.graph.plannerCategoryDescriptions": {
        "title": "plannerCategoryDescriptions",
        "type": "object",
        "properties": {
          "category1": {
            "type": "string",
            "description": "The label associated with Category 1",
            "nullable": true
          },
          "category2": {
            "type": "string",
            "description": "The label associated with Category 2",
            "nullable": true
          },
          "category3": {
            "type": "string",
            "description": "The label associated with Category 3",
            "nullable": true
          },
          "category4": {
            "type": "string",
            "description": "The label associated with Category 4",
            "nullable": true
          },
          "category5": {
            "type": "string",
            "description": "The label associated with Category 5",
            "nullable": true
          },
          "category6": {
            "type": "string",
            "description": "The label associated with Category 6",
            "nullable": true
          }
        },
        "example": {
          "category1": "String",
          "category2": "String",
          "category3": "String",
          "category4": "String",
          "category5": "String",
          "category6": "String"
        }
      },
      "microsoft.graph.onenoteEntityBaseModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "onenoteEntityBaseModel",
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "description": "The endpoint where you can get details about the page. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "self": "String"
        }
      },
      "microsoft.graph.onenoteEntitySchemaObjectModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityBaseModel"
          },
          {
            "title": "onenoteEntitySchemaObjectModel",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "self": "String",
          "createdDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.onenoteEntityHierarchyModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntitySchemaObjectModel"
          },
          {
            "title": "onenoteEntityHierarchyModel",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The name of the notebook.",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user, device, and application which created the item. Read-only.",
                "nullable": true
              },
              "lastModifiedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user, device, and application which created the item. Read-only.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "self": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.notebook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel"
          },
          {
            "title": "notebook",
            "type": "object",
            "properties": {
              "isDefault": {
                "type": "boolean",
                "description": "Indicates whether this is the user's default notebook. Read-only.",
                "nullable": true
              },
              "userRole": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenoteUserRole"
                  }
                ],
                "description": "Possible values are: Owner, Contributor, Reader, None. Owner represents owner-level access to the notebook. Contributor represents read/write access to the notebook. Reader represents read-only access to the notebook. Read-only.",
                "nullable": true
              },
              "isShared": {
                "type": "boolean",
                "description": "Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only.",
                "nullable": true
              },
              "sectionsUrl": {
                "type": "string",
                "description": "The URL for the sections navigation property, which returns all the sections in the notebook. Read-only.",
                "nullable": true
              },
              "sectionGroupsUrl": {
                "type": "string",
                "description": "The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only.",
                "nullable": true
              },
              "links": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebookLinks"
                  }
                ],
                "description": "Links for opening the notebook. The oneNoteClientURL link opens the notebook in the OneNote native client if it's installed. The oneNoteWebURL link opens the notebook in OneNote Online.",
                "nullable": true
              },
              "sections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                }
              },
              "sectionGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "self": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isDefault": true,
          "userRole": {
            "@odata.type": "microsoft.graph.onenoteUserRole"
          },
          "isShared": true,
          "sectionsUrl": "String",
          "sectionGroupsUrl": "String",
          "links": {
            "@odata.type": "microsoft.graph.notebookLinks"
          },
          "sections": [
            {
              "@odata.type": "microsoft.graph.onenoteSection"
            }
          ],
          "sectionGroups": [
            {
              "@odata.type": "microsoft.graph.sectionGroup"
            }
          ]
        }
      },
      "microsoft.graph.onenoteSection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel"
          },
          {
            "title": "onenoteSection",
            "type": "object",
            "properties": {
              "isDefault": {
                "type": "boolean",
                "description": "Indicates whether this is the user's default section. Read-only.",
                "nullable": true
              },
              "links": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sectionLinks"
                  }
                ],
                "description": "Links for opening the section. The oneNoteClientURL link opens the section in the OneNote native client if it's installed. The oneNoteWebURL link opens the section in OneNote Online.",
                "nullable": true
              },
              "pagesUrl": {
                "type": "string",
                "description": "The pages endpoint where you can get details for all the pages in the section. Read-only.",
                "nullable": true
              },
              "parentNotebook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebook"
                  }
                ],
                "nullable": true
              },
              "parentSectionGroup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                  }
                ],
                "nullable": true
              },
              "pages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenotePage"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "self": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isDefault": true,
          "links": {
            "@odata.type": "microsoft.graph.sectionLinks"
          },
          "pagesUrl": "String",
          "parentNotebook": {
            "@odata.type": "microsoft.graph.notebook"
          },
          "parentSectionGroup": {
            "@odata.type": "microsoft.graph.sectionGroup"
          },
          "pages": [
            {
              "@odata.type": "microsoft.graph.onenotePage"
            }
          ]
        }
      },
      "microsoft.graph.sectionGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel"
          },
          {
            "title": "sectionGroup",
            "type": "object",
            "properties": {
              "sectionsUrl": {
                "type": "string",
                "description": "The URL for the sections navigation property, which returns all the sections in the section group. Read-only.",
                "nullable": true
              },
              "sectionGroupsUrl": {
                "type": "string",
                "description": "The URL for the sectionGroups navigation property, which returns all the section groups in the section group. Read-only.",
                "nullable": true
              },
              "parentNotebook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebook"
                  }
                ],
                "nullable": true
              },
              "parentSectionGroup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                  }
                ],
                "nullable": true
              },
              "sections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                }
              },
              "sectionGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "self": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "sectionsUrl": "String",
          "sectionGroupsUrl": "String",
          "parentNotebook": {
            "@odata.type": "microsoft.graph.notebook"
          },
          "parentSectionGroup": {
            "@odata.type": "microsoft.graph.sectionGroup"
          },
          "sections": [
            {
              "@odata.type": "microsoft.graph.onenoteSection"
            }
          ],
          "sectionGroups": [
            {
              "@odata.type": "microsoft.graph.sectionGroup"
            }
          ]
        }
      },
      "microsoft.graph.onenotePage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntitySchemaObjectModel"
          },
          {
            "title": "onenotePage",
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "The title of the page.",
                "nullable": true
              },
              "createdByAppId": {
                "type": "string",
                "description": "The unique identifier of the application that created the page. Read-only.",
                "nullable": true
              },
              "links": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.pageLinks"
                  }
                ],
                "description": "Links for opening the page. The oneNoteClientURL link opens the page in the OneNote native client if it 's installed. The oneNoteWebUrl link opens the page in OneNote Online. Read-only.",
                "nullable": true
              },
              "contentUrl": {
                "type": "string",
                "description": "The URL for the page's HTML content.  Read-only.",
                "nullable": true
              },
              "content": {
                "type": "string",
                "description": "The page's HTML content.",
                "format": "base64url",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "level": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The indentation level of the page. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "order": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The order of the page within its parent section. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "userTags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "parentSection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                  }
                ],
                "nullable": true
              },
              "parentNotebook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebook"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "self": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "title": "String",
          "createdByAppId": "String",
          "links": {
            "@odata.type": "microsoft.graph.pageLinks"
          },
          "contentUrl": "String",
          "content": "Stream",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "level": "Int32",
          "order": "Int32",
          "userTags": [
            "String"
          ],
          "parentSection": {
            "@odata.type": "microsoft.graph.onenoteSection"
          },
          "parentNotebook": {
            "@odata.type": "microsoft.graph.notebook"
          }
        }
      },
      "microsoft.graph.onenoteResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityBaseModel"
          },
          {
            "title": "onenoteResource",
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "The content stream",
                "format": "base64url",
                "nullable": true
              },
              "contentUrl": {
                "type": "string",
                "description": "The URL for downloading the content",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "self": "String",
          "content": "Stream",
          "contentUrl": "String"
        }
      },
      "microsoft.graph.operation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "operation",
            "type": "object",
            "properties": {
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.operationStatus"
                  }
                ],
                "description": "The current status of the operation: notStarted, running, completed, failed",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The start time of the operation.",
                "format": "date-time",
                "nullable": true
              },
              "lastActionDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The time of the last action of the operation.",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "status": {
            "@odata.type": "microsoft.graph.operationStatus"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastActionDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.onenoteOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.operation"
          },
          {
            "title": "onenoteOperation",
            "type": "object",
            "properties": {
              "resourceLocation": {
                "type": "string",
                "description": "The resource URI for the object. For example, the resource URI for a copied page or section.",
                "nullable": true
              },
              "resourceId": {
                "type": "string",
                "description": "The resource id.",
                "nullable": true
              },
              "error": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenoteOperationError"
                  }
                ],
                "description": "The error returned by the operation.",
                "nullable": true
              },
              "percentComplete": {
                "type": "string",
                "description": "The operation percent complete if the operation is still in running status",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "status": {
            "@odata.type": "microsoft.graph.operationStatus"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastActionDateTime": "DateTimeOffset (timestamp)",
          "resourceLocation": "String",
          "resourceId": "String",
          "error": {
            "@odata.type": "microsoft.graph.onenoteOperationError"
          },
          "percentComplete": "String"
        }
      },
      "microsoft.graph.notebookLinks": {
        "title": "notebookLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the notebook in the OneNote native client if it's installed.",
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the notebook in OneNote Online.",
            "nullable": true
          }
        },
        "example": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.externalLink": {
        "title": "externalLink",
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "The url of the link.",
            "nullable": true
          }
        },
        "example": {
          "href": "String"
        }
      },
      "microsoft.graph.sectionLinks": {
        "title": "sectionLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the section in the OneNote native client if it's installed.",
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the section in OneNote Online.",
            "nullable": true
          }
        },
        "example": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.pageLinks": {
        "title": "pageLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the page in the OneNote native client if it's installed.",
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the page in OneNote Online.",
            "nullable": true
          }
        },
        "example": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.onenoteOperationError": {
        "title": "onenoteOperationError",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The error code.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "The error message.",
            "nullable": true
          }
        },
        "example": {
          "code": "String",
          "message": "String"
        }
      },
      "microsoft.graph.diagnostic": {
        "title": "diagnostic",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "message": "String",
          "url": "String"
        }
      },
      "microsoft.graph.onenotePatchContentCommand": {
        "title": "onenotePatchContentCommand",
        "type": "object",
        "properties": {
          "action": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.onenotePatchActionType"
              }
            ],
            "description": "The action to perform on the target element. Possible values are: replace, append, delete, insert, or prepend."
          },
          "target": {
            "type": "string",
            "description": "The element to update. Must be the #<data-id> or the generated <id> of the element, or the body or title keyword."
          },
          "content": {
            "type": "string",
            "description": "A string of well-formed HTML to add to the page, and any image or file binary data. If the content contains binary data, the request must be sent using the multipart/form-data content type with a 'Commands' part.",
            "nullable": true
          },
          "position": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.onenotePatchInsertPosition"
              }
            ],
            "description": "The location to add the supplied content, relative to the target element. Possible values are: after (default) or before.",
            "nullable": true
          }
        },
        "example": {
          "action": {
            "@odata.type": "microsoft.graph.onenotePatchActionType"
          },
          "target": "String",
          "content": "String",
          "position": {
            "@odata.type": "microsoft.graph.onenotePatchInsertPosition"
          }
        }
      },
      "microsoft.graph.onenotePagePreview": {
        "title": "onenotePagePreview",
        "type": "object",
        "properties": {
          "previewText": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.onenotePagePreviewLinks"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "previewText": "String",
          "links": {
            "@odata.type": "microsoft.graph.onenotePagePreviewLinks"
          }
        }
      },
      "microsoft.graph.onenotePagePreviewLinks": {
        "title": "onenotePagePreviewLinks",
        "type": "object",
        "properties": {
          "previewImageUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "previewImageUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.recentNotebook": {
        "title": "recentNotebook",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "The name of the notebook.",
            "nullable": true
          },
          "lastAccessedTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
            "format": "date-time",
            "nullable": true
          },
          "links": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recentNotebookLinks"
              }
            ],
            "description": "Links for opening the notebook. The oneNoteClientURL link opens the notebook in the OneNote client, if it's installed. The oneNoteWebURL link opens the notebook in OneNote Online.",
            "nullable": true
          },
          "sourceService": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.onenoteSourceService"
              }
            ],
            "description": "The backend store where the Notebook resides, either OneDriveForBusiness or OneDrive.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "String",
          "lastAccessedTime": "DateTimeOffset (timestamp)",
          "links": {
            "@odata.type": "microsoft.graph.recentNotebookLinks"
          },
          "sourceService": {
            "@odata.type": "microsoft.graph.onenoteSourceService"
          }
        }
      },
      "microsoft.graph.recentNotebookLinks": {
        "title": "recentNotebookLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the notebook in the OneNote native client if it's installed.",
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the notebook in OneNote Online.",
            "nullable": true
          }
        },
        "example": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.subscription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "subscription",
            "type": "object",
            "properties": {
              "resource": {
                "type": "string",
                "description": "Specifies the resource that will be monitored for changes. Do not include the base URL ('https://graph.microsoft.com/v1.0/')."
              },
              "changeType": {
                "type": "string",
                "description": "Indicates the type of change in the subscribed resource that will raise a notification. The supported values are: created, updated, deleted. Multiple values can be combined using a comma-separated list."
              },
              "clientState": {
                "type": "string",
                "description": "Specifies the value of the clientState property sent by the service in each notification. The maximum length is 128 characters. The client can check that the notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each notification.",
                "nullable": true
              },
              "notificationUrl": {
                "type": "string",
                "description": "The URL of the endpoint that will receive the notifications. This URL has to make use of the HTTPS protocol."
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to.  See the table below for maximum supported subscription length of time.",
                "format": "date-time"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "resource": "String",
          "changeType": "String",
          "clientState": "String",
          "notificationUrl": "String",
          "expirationDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.identityRiskEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "identityRiskEvent",
            "type": "object",
            "properties": {
              "userDisplayName": {
                "type": "string",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "riskEventDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "riskEventType": {
                "type": "string",
                "nullable": true
              },
              "riskLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.riskLevel"
                  }
                ],
                "nullable": true
              },
              "riskEventStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.riskEventStatus"
                  }
                ],
                "nullable": true
              },
              "closedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "userId": {
                "type": "string",
                "nullable": true
              },
              "impactedUser": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "userPrincipalName": "String",
          "riskEventDateTime": "DateTimeOffset (timestamp)",
          "riskEventType": "String",
          "riskLevel": {
            "@odata.type": "microsoft.graph.riskLevel"
          },
          "riskEventStatus": {
            "@odata.type": "microsoft.graph.riskEventStatus"
          },
          "closedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "userId": "String",
          "impactedUser": {
            "@odata.type": "microsoft.graph.user"
          }
        }
      },
      "microsoft.graph.signInLocation": {
        "title": "signInLocation",
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "countryOrRegion": {
            "type": "string",
            "nullable": true
          },
          "geoCoordinates": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.geoCoordinates"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "city": "String",
          "state": "String",
          "countryOrRegion": "String",
          "geoCoordinates": {
            "@odata.type": "microsoft.graph.geoCoordinates"
          }
        }
      },
      "microsoft.graph.locatedRiskEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.identityRiskEvent"
          },
          {
            "title": "locatedRiskEvent",
            "type": "object",
            "properties": {
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.signInLocation"
                  }
                ],
                "nullable": true
              },
              "ipAddress": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "userPrincipalName": "String",
          "riskEventDateTime": "DateTimeOffset (timestamp)",
          "riskEventType": "String",
          "riskLevel": {
            "@odata.type": "microsoft.graph.riskLevel"
          },
          "riskEventStatus": {
            "@odata.type": "microsoft.graph.riskEventStatus"
          },
          "closedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "userId": "String",
          "impactedUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "location": {
            "@odata.type": "microsoft.graph.signInLocation"
          },
          "ipAddress": "String"
        }
      },
      "microsoft.graph.impossibleTravelRiskEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.locatedRiskEvent"
          },
          {
            "title": "impossibleTravelRiskEvent",
            "type": "object",
            "properties": {
              "userAgent": {
                "type": "string",
                "nullable": true
              },
              "deviceInformation": {
                "type": "string",
                "nullable": true
              },
              "isAtypicalLocation": {
                "type": "boolean",
                "nullable": true
              },
              "previousSigninDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "previousLocation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.signInLocation"
                  }
                ],
                "nullable": true
              },
              "previousIpAddress": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "userPrincipalName": "String",
          "riskEventDateTime": "DateTimeOffset (timestamp)",
          "riskEventType": "String",
          "riskLevel": {
            "@odata.type": "microsoft.graph.riskLevel"
          },
          "riskEventStatus": {
            "@odata.type": "microsoft.graph.riskEventStatus"
          },
          "closedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "userId": "String",
          "impactedUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "location": {
            "@odata.type": "microsoft.graph.signInLocation"
          },
          "ipAddress": "String",
          "userAgent": "String",
          "deviceInformation": "String",
          "isAtypicalLocation": true,
          "previousSigninDateTime": "DateTimeOffset (timestamp)",
          "previousLocation": {
            "@odata.type": "microsoft.graph.signInLocation"
          },
          "previousIpAddress": "String"
        }
      },
      "microsoft.graph.leakedCredentialsRiskEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.identityRiskEvent"
          },
          {
            "title": "leakedCredentialsRiskEvent",
            "type": "object"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "userPrincipalName": "String",
          "riskEventDateTime": "DateTimeOffset (timestamp)",
          "riskEventType": "String",
          "riskLevel": {
            "@odata.type": "microsoft.graph.riskLevel"
          },
          "riskEventStatus": {
            "@odata.type": "microsoft.graph.riskEventStatus"
          },
          "closedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "userId": "String",
          "impactedUser": {
            "@odata.type": "microsoft.graph.user"
          }
        }
      },
      "microsoft.graph.anonymousIpRiskEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.locatedRiskEvent"
          },
          {
            "title": "anonymousIpRiskEvent",
            "type": "object"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "userPrincipalName": "String",
          "riskEventDateTime": "DateTimeOffset (timestamp)",
          "riskEventType": "String",
          "riskLevel": {
            "@odata.type": "microsoft.graph.riskLevel"
          },
          "riskEventStatus": {
            "@odata.type": "microsoft.graph.riskEventStatus"
          },
          "closedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "userId": "String",
          "impactedUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "location": {
            "@odata.type": "microsoft.graph.signInLocation"
          },
          "ipAddress": "String"
        }
      },
      "microsoft.graph.suspiciousIpRiskEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.locatedRiskEvent"
          },
          {
            "title": "suspiciousIpRiskEvent",
            "type": "object"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "userPrincipalName": "String",
          "riskEventDateTime": "DateTimeOffset (timestamp)",
          "riskEventType": "String",
          "riskLevel": {
            "@odata.type": "microsoft.graph.riskLevel"
          },
          "riskEventStatus": {
            "@odata.type": "microsoft.graph.riskEventStatus"
          },
          "closedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "userId": "String",
          "impactedUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "location": {
            "@odata.type": "microsoft.graph.signInLocation"
          },
          "ipAddress": "String"
        }
      },
      "microsoft.graph.unfamiliarLocationRiskEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.locatedRiskEvent"
          },
          {
            "title": "unfamiliarLocationRiskEvent",
            "type": "object"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "userPrincipalName": "String",
          "riskEventDateTime": "DateTimeOffset (timestamp)",
          "riskEventType": "String",
          "riskLevel": {
            "@odata.type": "microsoft.graph.riskLevel"
          },
          "riskEventStatus": {
            "@odata.type": "microsoft.graph.riskEventStatus"
          },
          "closedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "userId": "String",
          "impactedUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "location": {
            "@odata.type": "microsoft.graph.signInLocation"
          },
          "ipAddress": "String"
        }
      },
      "microsoft.graph.malwareRiskEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.locatedRiskEvent"
          },
          {
            "title": "malwareRiskEvent",
            "type": "object",
            "properties": {
              "deviceInformation": {
                "type": "string",
                "nullable": true
              },
              "malwareName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "userPrincipalName": "String",
          "riskEventDateTime": "DateTimeOffset (timestamp)",
          "riskEventType": "String",
          "riskLevel": {
            "@odata.type": "microsoft.graph.riskLevel"
          },
          "riskEventStatus": {
            "@odata.type": "microsoft.graph.riskEventStatus"
          },
          "closedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "userId": "String",
          "impactedUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "location": {
            "@odata.type": "microsoft.graph.signInLocation"
          },
          "ipAddress": "String",
          "deviceInformation": "String",
          "malwareName": "String"
        }
      },
      "microsoft.graph.privilegedRole": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "privilegedRole",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "settings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.privilegedRoleSettings"
                  }
                ],
                "nullable": true
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.privilegedRoleAssignment"
                }
              },
              "summary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.privilegedRoleSummary"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "name": "String",
          "settings": {
            "@odata.type": "microsoft.graph.privilegedRoleSettings"
          },
          "assignments": [
            {
              "@odata.type": "microsoft.graph.privilegedRoleAssignment"
            }
          ],
          "summary": {
            "@odata.type": "microsoft.graph.privilegedRoleSummary"
          }
        }
      },
      "microsoft.graph.privilegedRoleSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "privilegedRoleSettings",
            "type": "object",
            "properties": {
              "approverIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "minElevationDuration": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "format": "duration",
                "nullable": true
              },
              "maxElavationDuration": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "format": "duration",
                "nullable": true
              },
              "elevationDuration": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "format": "duration",
                "nullable": true
              },
              "notificationToUserOnElevation": {
                "type": "boolean",
                "nullable": true
              },
              "ticketingInfoOnElevation": {
                "type": "boolean",
                "nullable": true
              },
              "mfaOnElevation": {
                "type": "boolean",
                "nullable": true
              },
              "lastGlobalAdmin": {
                "type": "boolean",
                "nullable": true
              },
              "isMfaOnElevationConfigurable": {
                "type": "boolean",
                "nullable": true
              },
              "approvalOnElevation": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "approverIds": [
            "String"
          ],
          "minElevationDuration": "Duration",
          "maxElavationDuration": "Duration",
          "elevationDuration": "Duration",
          "notificationToUserOnElevation": true,
          "ticketingInfoOnElevation": true,
          "mfaOnElevation": true,
          "lastGlobalAdmin": true,
          "isMfaOnElevationConfigurable": true,
          "approvalOnElevation": true
        }
      },
      "microsoft.graph.privilegedRoleAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "privilegedRoleAssignment",
            "type": "object",
            "properties": {
              "userId": {
                "type": "string"
              },
              "roleId": {
                "type": "string"
              },
              "isElevated": {
                "type": "boolean",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "resultMessage": {
                "type": "string",
                "nullable": true
              },
              "roleInfo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.privilegedRole"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userId": "String",
          "roleId": "String",
          "isElevated": true,
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "resultMessage": "String",
          "roleInfo": {
            "@odata.type": "microsoft.graph.privilegedRole"
          }
        }
      },
      "microsoft.graph.privilegedRoleSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "privilegedRoleSummary",
            "type": "object",
            "properties": {
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.roleSummaryStatus"
                  }
                ],
                "nullable": true
              },
              "usersCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "managedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "elevatedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "mfaEnabled": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "status": {
            "@odata.type": "microsoft.graph.roleSummaryStatus"
          },
          "usersCount": "Int32",
          "managedCount": "Int32",
          "elevatedCount": "Int32",
          "mfaEnabled": true
        }
      },
      "microsoft.graph.privilegedOperationEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "privilegedOperationEvent",
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "nullable": true
              },
              "userMail": {
                "type": "string",
                "nullable": true
              },
              "roleId": {
                "type": "string",
                "nullable": true
              },
              "roleName": {
                "type": "string",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "creationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "requestorId": {
                "type": "string",
                "nullable": true
              },
              "requestorName": {
                "type": "string",
                "nullable": true
              },
              "tenantId": {
                "type": "string",
                "nullable": true
              },
              "requestType": {
                "type": "string",
                "nullable": true
              },
              "additionalInformation": {
                "type": "string",
                "nullable": true
              },
              "referenceKey": {
                "type": "string",
                "nullable": true
              },
              "referenceSystem": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userId": "String",
          "userName": "String",
          "userMail": "String",
          "roleId": "String",
          "roleName": "String",
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "creationDateTime": "DateTimeOffset (timestamp)",
          "requestorId": "String",
          "requestorName": "String",
          "tenantId": "String",
          "requestType": "String",
          "additionalInformation": "String",
          "referenceKey": "String",
          "referenceSystem": "String"
        }
      },
      "microsoft.graph.privilegedSignupStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "privilegedSignupStatus",
            "type": "object",
            "properties": {
              "isRegistered": {
                "type": "boolean",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.setupStatus"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "isRegistered": true,
          "status": {
            "@odata.type": "microsoft.graph.setupStatus"
          }
        }
      },
      "microsoft.graph.privilegedApproval": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "privilegedApproval",
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "nullable": true
              },
              "roleId": {
                "type": "string",
                "nullable": true
              },
              "approvalType": {
                "type": "string",
                "nullable": true
              },
              "approvalState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.approvalState"
                  }
                ],
                "nullable": true
              },
              "approvalDuration": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "format": "duration",
                "nullable": true
              },
              "requestorReason": {
                "type": "string",
                "nullable": true
              },
              "approverReason": {
                "type": "string",
                "nullable": true
              },
              "startDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "roleInfo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.privilegedRole"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userId": "String",
          "roleId": "String",
          "approvalType": "String",
          "approvalState": {
            "@odata.type": "microsoft.graph.approvalState"
          },
          "approvalDuration": "Duration",
          "requestorReason": "String",
          "approverReason": "String",
          "startDateTime": "DateTimeOffset (timestamp)",
          "endDateTime": "DateTimeOffset (timestamp)",
          "roleInfo": {
            "@odata.type": "microsoft.graph.privilegedRole"
          }
        }
      },
      "microsoft.graph.tenantSetupInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "tenantSetupInfo",
            "type": "object",
            "properties": {
              "userRolesActions": {
                "type": "string",
                "nullable": true
              },
              "firstTimeSetup": {
                "type": "boolean",
                "nullable": true
              },
              "relevantRolesSettings": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "skipSetup": {
                "type": "boolean",
                "nullable": true
              },
              "setupStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.setupStatus"
                  }
                ],
                "nullable": true
              },
              "defaultRolesSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.privilegedRoleSettings"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userRolesActions": "String",
          "firstTimeSetup": true,
          "relevantRolesSettings": [
            "String"
          ],
          "skipSetup": true,
          "setupStatus": {
            "@odata.type": "microsoft.graph.setupStatus"
          },
          "defaultRolesSettings": {
            "@odata.type": "microsoft.graph.privilegedRoleSettings"
          }
        }
      },
      "microsoft.graph.roleSuccessStatistics": {
        "title": "roleSuccessStatistics",
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "temporarySuccess": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "temporaryFail": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "permanentSuccess": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "permanentFail": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "removeSuccess": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "removeFail": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "unknownFail": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "example": {
          "roleId": "String",
          "roleName": "String",
          "temporarySuccess": "Int64",
          "temporaryFail": "Int64",
          "permanentSuccess": "Int64",
          "permanentFail": "Int64",
          "removeSuccess": "Int64",
          "removeFail": "Int64",
          "unknownFail": "Int64"
        }
      },
      "microsoft.graph.invitation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "invitation",
            "type": "object",
            "properties": {
              "invitedUserDisplayName": {
                "type": "string",
                "description": "The display name of the user being invited.",
                "nullable": true
              },
              "invitedUserType": {
                "type": "string",
                "description": "The userType of the user being invited. By default, this is Guest. You can invite as Member if you are a company administrator.",
                "nullable": true
              },
              "invitedUserEmailAddress": {
                "type": "string",
                "description": "The email address of the user being invited. Required."
              },
              "invitedUserMessageInfo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.invitedUserMessageInfo"
                  }
                ],
                "description": "Additional configuration for the message being sent to the invited user, including customizing message text, language and cc recipient list.",
                "nullable": true
              },
              "sendInvitationMessage": {
                "type": "boolean",
                "description": "Indicates whether an email should be sent to the user being invited or not. The default is false.",
                "nullable": true
              },
              "inviteRedirectUrl": {
                "type": "string",
                "description": "The URL user should be redirected to once the invitation is redeemed. Required."
              },
              "inviteRedeemUrl": {
                "type": "string",
                "description": "The URL user can use to redeem his invitation. Read-Only",
                "nullable": true
              },
              "status": {
                "type": "string",
                "description": "The status of the invitation. Possible values: PendingAcceptance, Completed, InProgress, and Error",
                "nullable": true
              },
              "invitedUser": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "invitedUserDisplayName": "String",
          "invitedUserType": "String",
          "invitedUserEmailAddress": "String",
          "invitedUserMessageInfo": {
            "@odata.type": "microsoft.graph.invitedUserMessageInfo"
          },
          "sendInvitationMessage": true,
          "inviteRedirectUrl": "String",
          "inviteRedeemUrl": "String",
          "status": "String",
          "invitedUser": {
            "@odata.type": "microsoft.graph.user"
          }
        }
      },
      "microsoft.graph.invitedUserMessageInfo": {
        "title": "invitedUserMessageInfo",
        "type": "object",
        "properties": {
          "ccRecipients": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "Additional recipients the invitation message should be sent to. Currently only 1 additional recipient is supported."
          },
          "messageLanguage": {
            "type": "string",
            "description": "The language you want to send the default message in. If the customizedMessageBody is specified, this property is ignored, and the message is sent using the customizedMessageBody. The language format should be in ISO 639. The default is en-US.",
            "nullable": true
          },
          "customizedMessageBody": {
            "type": "string",
            "description": "Customized message body you want to send if you don't want the default message.",
            "nullable": true
          }
        },
        "example": {
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "messageLanguage": "String",
          "customizedMessageBody": "String"
        }
      },
      "microsoft.graph.deviceManagement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagement",
            "type": "object",
            "properties": {
              "subscriptionState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementSubscriptionState"
                  }
                ],
                "description": "Tenant mobile device management subscription state."
              },
              "subscriptions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementSubscriptions"
                  }
                ],
                "description": "Tenant's Subscription."
              },
              "adminConsent": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.adminConsent"
                  }
                ],
                "description": "Admin consent information.",
                "nullable": true
              },
              "deviceProtectionOverview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceProtectionOverview"
                  }
                ],
                "description": "Device protection overview.",
                "nullable": true
              },
              "settings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementSettings"
                  }
                ],
                "description": "Account level settings.",
                "nullable": true
              },
              "maximumDepTokens": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Maximum number of dep tokens allowed per-tenant.",
                "format": "int32"
              },
              "intuneAccountId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "Intune Account Id for given tenant",
                "format": "uuid"
              },
              "intuneBrand": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.intuneBrand"
                  }
                ],
                "description": "intuneBrand contains data which is used in customizing the appearance of the Company Portal applications as well as the end user web portal.",
                "nullable": true
              },
              "termsAndConditions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.termsAndConditions"
                }
              },
              "androidForWorkSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkSettings"
                  }
                ],
                "nullable": true
              },
              "androidForWorkAppConfigurationSchemas": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.androidForWorkAppConfigurationSchema"
                }
              },
              "androidForWorkEnrollmentProfiles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.androidForWorkEnrollmentProfile"
                }
              },
              "enrollmentProfiles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.enrollmentProfile"
                }
              },
              "importedDeviceIdentities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.importedDeviceIdentity"
                }
              },
              "importedAppleDeviceIdentities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.importedAppleDeviceIdentity"
                }
              },
              "remoteActionAudits": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.remoteActionAudit"
                }
              },
              "applePushNotificationCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.applePushNotificationCertificate"
                  }
                ],
                "nullable": true
              },
              "deviceManagementScripts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementScript"
                }
              },
              "managedDeviceOverview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedDeviceOverview"
                  }
                ],
                "nullable": true
              },
              "detectedApps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.detectedApp"
                }
              },
              "managedDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDevice"
                }
              },
              "windowsMalwareInformation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsMalwareInformation"
                }
              },
              "deviceConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
                }
              },
              "deviceCompliancePolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
                }
              },
              "deviceSetupConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceSetupConfiguration"
                }
              },
              "softwareUpdateStatusSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.softwareUpdateStatusSummary"
                  }
                ],
                "nullable": true
              },
              "deviceCompliancePolicyDeviceStateSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicyDeviceStateSummary"
                  }
                ],
                "nullable": true
              },
              "deviceCompliancePolicySettingStateSummaries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicySettingStateSummary"
                }
              },
              "deviceConfigurationDeviceStateSummaries": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationDeviceStateSummary"
                  }
                ],
                "nullable": true
              },
              "deviceConfigurationUserStateSummaries": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationUserStateSummary"
                  }
                ],
                "nullable": true
              },
              "cartToClassAssociations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.cartToClassAssociation"
                }
              },
              "iosUpdateStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.iosUpdateDeviceStatus"
                }
              },
              "ndesConnectors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.ndesConnector"
                }
              },
              "deviceCategories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceCategory"
                }
              },
              "exchangeConnectors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeConnector"
                }
              },
              "deviceEnrollmentConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentConfiguration"
                }
              },
              "exchangeOnPremisesPolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeOnPremisesPolicy"
                  }
                ],
                "nullable": true
              },
              "exchangeOnPremisesPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeOnPremisesPolicy"
                }
              },
              "conditionalAccessSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onPremisesConditionalAccessSettings"
                  }
                ],
                "nullable": true
              },
              "mobileThreatDefenseConnectors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileThreatDefenseConnector"
                }
              },
              "deviceManagementPartners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementPartner"
                }
              },
              "depOnboardingSettings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.depOnboardingSetting"
                }
              },
              "notificationMessageTemplates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.notificationMessageTemplate"
                }
              },
              "roleDefinitions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.roleDefinition"
                }
              },
              "roleAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.roleAssignment"
                }
              },
              "resourceOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.resourceOperation"
                }
              },
              "telecomExpenseManagementPartners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.telecomExpenseManagementPartner"
                }
              },
              "windowsAutopilotSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsAutopilotSettings"
                  }
                ],
                "nullable": true
              },
              "windowsAutopilotDeviceIdentities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsAutopilotDeviceIdentity"
                }
              },
              "windowsAutopilotDeploymentProfiles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsAutopilotDeploymentProfile"
                }
              },
              "remoteAssistancePartners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.remoteAssistancePartner"
                }
              },
              "windowsInformationProtectionAppLearningSummaries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionAppLearningSummary"
                }
              },
              "auditEvents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.auditEvent"
                }
              },
              "troubleshootingEvents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent"
                }
              }
            },
            "description": "Singleton entity that acts as a container for Android for Work settings functionality under device management."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "subscriptionState": {
            "@odata.type": "microsoft.graph.deviceManagementSubscriptionState"
          },
          "subscriptions": {
            "@odata.type": "microsoft.graph.deviceManagementSubscriptions"
          },
          "adminConsent": {
            "@odata.type": "microsoft.graph.adminConsent"
          },
          "deviceProtectionOverview": {
            "@odata.type": "microsoft.graph.deviceProtectionOverview"
          },
          "settings": {
            "@odata.type": "microsoft.graph.deviceManagementSettings"
          },
          "maximumDepTokens": "Int32",
          "intuneAccountId": "Guid",
          "intuneBrand": {
            "@odata.type": "microsoft.graph.intuneBrand"
          },
          "termsAndConditions": [
            {
              "@odata.type": "microsoft.graph.termsAndConditions"
            }
          ],
          "androidForWorkSettings": {
            "@odata.type": "microsoft.graph.androidForWorkSettings"
          },
          "androidForWorkAppConfigurationSchemas": [
            {
              "@odata.type": "microsoft.graph.androidForWorkAppConfigurationSchema"
            }
          ],
          "androidForWorkEnrollmentProfiles": [
            {
              "@odata.type": "microsoft.graph.androidForWorkEnrollmentProfile"
            }
          ],
          "enrollmentProfiles": [
            {
              "@odata.type": "microsoft.graph.enrollmentProfile"
            }
          ],
          "importedDeviceIdentities": [
            {
              "@odata.type": "microsoft.graph.importedDeviceIdentity"
            }
          ],
          "importedAppleDeviceIdentities": [
            {
              "@odata.type": "microsoft.graph.importedAppleDeviceIdentity"
            }
          ],
          "remoteActionAudits": [
            {
              "@odata.type": "microsoft.graph.remoteActionAudit"
            }
          ],
          "applePushNotificationCertificate": {
            "@odata.type": "microsoft.graph.applePushNotificationCertificate"
          },
          "deviceManagementScripts": [
            {
              "@odata.type": "microsoft.graph.deviceManagementScript"
            }
          ],
          "managedDeviceOverview": {
            "@odata.type": "microsoft.graph.managedDeviceOverview"
          },
          "detectedApps": [
            {
              "@odata.type": "microsoft.graph.detectedApp"
            }
          ],
          "managedDevices": [
            {
              "@odata.type": "microsoft.graph.managedDevice"
            }
          ],
          "windowsMalwareInformation": [
            {
              "@odata.type": "microsoft.graph.windowsMalwareInformation"
            }
          ],
          "deviceConfigurations": [
            {
              "@odata.type": "microsoft.graph.deviceConfiguration"
            }
          ],
          "deviceCompliancePolicies": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicy"
            }
          ],
          "deviceSetupConfigurations": [
            {
              "@odata.type": "microsoft.graph.deviceSetupConfiguration"
            }
          ],
          "softwareUpdateStatusSummary": {
            "@odata.type": "microsoft.graph.softwareUpdateStatusSummary"
          },
          "deviceCompliancePolicyDeviceStateSummary": {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyDeviceStateSummary"
          },
          "deviceCompliancePolicySettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicySettingStateSummary"
            }
          ],
          "deviceConfigurationDeviceStateSummaries": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStateSummary"
          },
          "deviceConfigurationUserStateSummaries": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStateSummary"
          },
          "cartToClassAssociations": [
            {
              "@odata.type": "microsoft.graph.cartToClassAssociation"
            }
          ],
          "iosUpdateStatuses": [
            {
              "@odata.type": "microsoft.graph.iosUpdateDeviceStatus"
            }
          ],
          "ndesConnectors": [
            {
              "@odata.type": "microsoft.graph.ndesConnector"
            }
          ],
          "deviceCategories": [
            {
              "@odata.type": "microsoft.graph.deviceCategory"
            }
          ],
          "exchangeConnectors": [
            {
              "@odata.type": "microsoft.graph.deviceManagementExchangeConnector"
            }
          ],
          "deviceEnrollmentConfigurations": [
            {
              "@odata.type": "microsoft.graph.deviceEnrollmentConfiguration"
            }
          ],
          "exchangeOnPremisesPolicy": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeOnPremisesPolicy"
          },
          "exchangeOnPremisesPolicies": [
            {
              "@odata.type": "microsoft.graph.deviceManagementExchangeOnPremisesPolicy"
            }
          ],
          "conditionalAccessSettings": {
            "@odata.type": "microsoft.graph.onPremisesConditionalAccessSettings"
          },
          "mobileThreatDefenseConnectors": [
            {
              "@odata.type": "microsoft.graph.mobileThreatDefenseConnector"
            }
          ],
          "deviceManagementPartners": [
            {
              "@odata.type": "microsoft.graph.deviceManagementPartner"
            }
          ],
          "depOnboardingSettings": [
            {
              "@odata.type": "microsoft.graph.depOnboardingSetting"
            }
          ],
          "notificationMessageTemplates": [
            {
              "@odata.type": "microsoft.graph.notificationMessageTemplate"
            }
          ],
          "roleDefinitions": [
            {
              "@odata.type": "microsoft.graph.roleDefinition"
            }
          ],
          "roleAssignments": [
            {
              "@odata.type": "microsoft.graph.roleAssignment"
            }
          ],
          "resourceOperations": [
            {
              "@odata.type": "microsoft.graph.resourceOperation"
            }
          ],
          "telecomExpenseManagementPartners": [
            {
              "@odata.type": "microsoft.graph.telecomExpenseManagementPartner"
            }
          ],
          "windowsAutopilotSettings": {
            "@odata.type": "microsoft.graph.windowsAutopilotSettings"
          },
          "windowsAutopilotDeviceIdentities": [
            {
              "@odata.type": "microsoft.graph.windowsAutopilotDeviceIdentity"
            }
          ],
          "windowsAutopilotDeploymentProfiles": [
            {
              "@odata.type": "microsoft.graph.windowsAutopilotDeploymentProfile"
            }
          ],
          "remoteAssistancePartners": [
            {
              "@odata.type": "microsoft.graph.remoteAssistancePartner"
            }
          ],
          "windowsInformationProtectionAppLearningSummaries": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLearningSummary"
            }
          ],
          "auditEvents": [
            {
              "@odata.type": "microsoft.graph.auditEvent"
            }
          ],
          "troubleshootingEvents": [
            {
              "@odata.type": "microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          ]
        }
      },
      "microsoft.graph.termsAndConditions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "termsAndConditions",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was created.",
                "format": "date-time"
              },
              "modifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time"
              },
              "displayName": {
                "type": "string",
                "description": "Administrator-supplied name for the T&C policy. "
              },
              "description": {
                "type": "string",
                "description": "Administrator-supplied description of the T&C policy.",
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "Administrator-supplied title of the terms and conditions. This is shown to the user on prompts to accept the T&C policy.",
                "nullable": true
              },
              "bodyText": {
                "type": "string",
                "description": "Administrator-supplied body text of the terms and conditions, typically the terms themselves. This is shown to the user on prompts to accept the T&C policy.",
                "nullable": true
              },
              "acceptanceStatement": {
                "type": "string",
                "description": "Administrator-supplied explanation of the terms and conditions, typically describing what it means to accept the terms and conditions set out in the T&C policy. This is shown to the user on prompts to accept the T&C policy.",
                "nullable": true
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Integer indicating the current version of the terms. Incremented when an administrator makes a change to the terms and wishes to require users to re-accept the modified T&C policy.",
                "format": "int32"
              },
              "groupAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.termsAndConditionsGroupAssignment"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.termsAndConditionsAssignment"
                }
              },
              "acceptanceStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.termsAndConditionsAcceptanceStatus"
                }
              }
            },
            "description": "A termsAndConditions entity represents the metadata and contents of a given Terms and Conditions (T&C) policy. T&C policies’ contents are presented to users upon their first attempt to enroll into Intune and subsequently upon edits where an administrator has required re-acceptance. They enable administrators to communicate the provisions to which a user must agree in order to have devices enrolled into Intune."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "modifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "description": "String",
          "title": "String",
          "bodyText": "String",
          "acceptanceStatement": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.termsAndConditionsGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.termsAndConditionsAssignment"
            }
          ],
          "acceptanceStatuses": [
            {
              "@odata.type": "microsoft.graph.termsAndConditionsAcceptanceStatus"
            }
          ]
        }
      },
      "microsoft.graph.androidForWorkSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "androidForWorkSettings",
            "type": "object",
            "properties": {
              "bindStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkBindStatus"
                  }
                ],
                "description": "Bind status of the tenant with the Google EMM API"
              },
              "lastAppSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last completion time for app sync",
                "format": "date-time",
                "nullable": true
              },
              "lastAppSyncStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkSyncStatus"
                  }
                ],
                "description": "Last application sync result"
              },
              "ownerUserPrincipalName": {
                "type": "string",
                "description": "Owner UPN that created the enterprise",
                "nullable": true
              },
              "ownerOrganizationName": {
                "type": "string",
                "description": "Organization name used when onboarding Android for Work",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modification time for Android for Work settings",
                "format": "date-time",
                "nullable": true
              },
              "enrollmentTarget": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkEnrollmentTarget"
                  }
                ],
                "description": "Indicates which users can enroll devices in Android for Work device management"
              },
              "targetGroupIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Specifies which AAD groups can enroll devices in Android for Work device management if enrollmentTarget is set to 'Targeted'"
              }
            },
            "description": "Settings for Android For Work."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "bindStatus": {
            "@odata.type": "microsoft.graph.androidForWorkBindStatus"
          },
          "lastAppSyncDateTime": "DateTimeOffset (timestamp)",
          "lastAppSyncStatus": {
            "@odata.type": "microsoft.graph.androidForWorkSyncStatus"
          },
          "ownerUserPrincipalName": "String",
          "ownerOrganizationName": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "enrollmentTarget": {
            "@odata.type": "microsoft.graph.androidForWorkEnrollmentTarget"
          },
          "targetGroupIds": [
            "String"
          ]
        }
      },
      "microsoft.graph.androidForWorkAppConfigurationSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "androidForWorkAppConfigurationSchema",
            "type": "object",
            "properties": {
              "exampleJson": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkAppConfigurationExample"
                  }
                ],
                "description": "Example JSON confirming to this schema that demonstrates how to set the configuration for this app",
                "nullable": true
              },
              "schemaItems": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.androidForWorkAppConfigurationSchemaItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "Collection of items each representing a named configuration option in the schema"
              }
            },
            "description": "Schema describing an Android for Work application's custom configurations."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "exampleJson": {
            "@odata.type": "microsoft.graph.androidForWorkAppConfigurationExample"
          },
          "schemaItems": [
            {
              "@odata.type": "microsoft.graph.androidForWorkAppConfigurationSchemaItem"
            }
          ]
        }
      },
      "microsoft.graph.androidForWorkEnrollmentProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "androidForWorkEnrollmentProfile",
            "type": "object",
            "properties": {
              "accountId": {
                "type": "string",
                "description": "Tenant GUID the enrollment profile belongs to.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Friendly name for the enrollment profile.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description for the enrollment profile.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date time the enrollment profile was created.",
                "format": "date-time"
              },
              "modifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date time the enrollment profile was last modified.",
                "format": "date-time"
              },
              "tokenValue": {
                "type": "string",
                "description": "Value of the most recently created token for this enrollment profile.",
                "nullable": true
              },
              "tokenExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date time the most recently created token will expire.",
                "format": "date-time"
              },
              "totalEnrollmentCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Total number of Android devices that have enrolled using this enrollment profile.",
                "format": "int32"
              },
              "isTokenActive": {
                "type": "boolean",
                "description": "True if the token is still active; false it if has expired or been revoked."
              },
              "qrCode": {
                "type": "string",
                "description": "String used to generate a QR code for the token.",
                "nullable": true
              }
            },
            "description": "Enrollment Profile used to enroll COSU devices using Google's Cloud Management."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "accountId": "String",
          "name": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "modifiedDateTime": "DateTimeOffset (timestamp)",
          "tokenValue": "String",
          "tokenExpirationDateTime": "DateTimeOffset (timestamp)",
          "totalEnrollmentCount": "Int32",
          "isTokenActive": true,
          "qrCode": "String"
        }
      },
      "microsoft.graph.enrollmentProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "enrollmentProfile",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Name of the profile",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description of the profile",
                "nullable": true
              },
              "requiresUserAuthentication": {
                "type": "boolean",
                "description": "Indicates if the profile requires user authentication"
              },
              "configurationEndpointUrl": {
                "type": "string",
                "description": "Configuration endpoint url to use for Enrollment",
                "nullable": true
              },
              "enableAuthenticationViaCompanyPortal": {
                "type": "boolean",
                "description": "Indicates to authenticate with Apple Setup Assistant instead of Company Portal."
              }
            },
            "description": "The enrollmentProfile resource represents a collection of configurations which must be provided pre-enrollment to enable enrolling certain devices whose identities have been pre-staged. Pre-staged device identities are assigned to this type of profile to apply the profile's configurations at enrollment of the corresponding device."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "requiresUserAuthentication": true,
          "configurationEndpointUrl": "String",
          "enableAuthenticationViaCompanyPortal": true
        }
      },
      "microsoft.graph.importedDeviceIdentity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "importedDeviceIdentity",
            "type": "object",
            "properties": {
              "importedDeviceIdentifier": {
                "type": "string",
                "description": "Imported Device Identifier",
                "nullable": true
              },
              "importedDeviceIdentityType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.importedDeviceIdentityType"
                  }
                ],
                "description": "Type of Imported Device Identity"
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last Modified DateTime of the description",
                "format": "date-time"
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Created Date Time of the device",
                "format": "date-time"
              },
              "lastContactedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last Contacted Date Time of the device",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "description": "The description of the device",
                "nullable": true
              },
              "enrollmentState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.enrollmentState"
                  }
                ],
                "description": "The state of the device in Intune"
              },
              "platform": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.platform"
                  }
                ],
                "description": "The platform of the Device."
              }
            },
            "description": "The importedDeviceIdentity resource represents a unique hardware identity of a device that has been pre-staged for pre-enrollment configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "importedDeviceIdentifier": "String",
          "importedDeviceIdentityType": {
            "@odata.type": "microsoft.graph.importedDeviceIdentityType"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastContactedDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "enrollmentState": {
            "@odata.type": "microsoft.graph.enrollmentState"
          },
          "platform": {
            "@odata.type": "microsoft.graph.platform"
          }
        }
      },
      "microsoft.graph.importedAppleDeviceIdentity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "importedAppleDeviceIdentity",
            "type": "object",
            "properties": {
              "serialNumber": {
                "type": "string",
                "description": "Device serial number",
                "nullable": true
              },
              "requestedEnrollmentProfileId": {
                "type": "string",
                "description": "Enrollment profile Id admin intends to apply to the device during next enrollment",
                "nullable": true
              },
              "requestedEnrollmentProfileAssignmentDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The time enrollment profile was assigned to the device",
                "format": "date-time",
                "nullable": true
              },
              "isSupervised": {
                "type": "boolean",
                "description": "Indicates if the Apple device is supervised. More information is at: https://support.apple.com/en-us/HT202837"
              },
              "discoverySource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.discoverySource"
                  }
                ],
                "description": "Apple device discovery source."
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Created Date Time of the device",
                "format": "date-time"
              },
              "lastContactedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last Contacted Date Time of the device",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "description": "The description of the device",
                "nullable": true
              },
              "enrollmentState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.enrollmentState"
                  }
                ],
                "description": "The state of the device in Intune"
              },
              "platform": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.platform"
                  }
                ],
                "description": "The platform of the Device."
              }
            },
            "description": "The importedAppleDeviceIdentity resource represents the imported device identity of an Apple device ."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "serialNumber": "String",
          "requestedEnrollmentProfileId": "String",
          "requestedEnrollmentProfileAssignmentDateTime": "DateTimeOffset (timestamp)",
          "isSupervised": true,
          "discoverySource": {
            "@odata.type": "microsoft.graph.discoverySource"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastContactedDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "enrollmentState": {
            "@odata.type": "microsoft.graph.enrollmentState"
          },
          "platform": {
            "@odata.type": "microsoft.graph.platform"
          }
        }
      },
      "microsoft.graph.adminConsent": {
        "title": "adminConsent",
        "type": "object",
        "properties": {
          "collectFullIOSAppInventory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.adminConsentState"
              }
            ],
            "description": "The admin consent state of collecting full iOS app inventory."
          }
        },
        "example": {
          "collectFullIOSAppInventory": {
            "@odata.type": "microsoft.graph.adminConsentState"
          }
        }
      },
      "microsoft.graph.deviceProtectionOverview": {
        "title": "deviceProtectionOverview",
        "type": "object",
        "properties": {
          "totalReportedDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Total device count.",
            "format": "int32"
          },
          "inactiveThreatAgentDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Device with inactive threat agent count",
            "format": "int32"
          },
          "unknownStateThreatAgentDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Device with threat agent state as unknown count.",
            "format": "int32"
          },
          "pendingSignatureUpdateDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Device with old signature count.",
            "format": "int32"
          },
          "cleanDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Clean device count.",
            "format": "int32"
          },
          "pendingFullScanDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Pending full scan device count.",
            "format": "int32"
          },
          "pendingRestartDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Pending restart device count.",
            "format": "int32"
          },
          "pendingManualStepsDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Pending manual steps device count.",
            "format": "int32"
          },
          "pendingOfflineScanDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Pending offline scan device count.",
            "format": "int32"
          },
          "criticalFailuresDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Critical failures device count.",
            "format": "int32"
          }
        },
        "example": {
          "totalReportedDeviceCount": "Int32",
          "inactiveThreatAgentDeviceCount": "Int32",
          "unknownStateThreatAgentDeviceCount": "Int32",
          "pendingSignatureUpdateDeviceCount": "Int32",
          "cleanDeviceCount": "Int32",
          "pendingFullScanDeviceCount": "Int32",
          "pendingRestartDeviceCount": "Int32",
          "pendingManualStepsDeviceCount": "Int32",
          "pendingOfflineScanDeviceCount": "Int32",
          "criticalFailuresDeviceCount": "Int32"
        }
      },
      "microsoft.graph.remoteActionAudit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "remoteActionAudit",
            "type": "object",
            "properties": {
              "deviceDisplayName": {
                "type": "string",
                "description": "Intune device name.",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "[deprecated] Please use InitiatedByUserPrincipalName instead.",
                "nullable": true
              },
              "initiatedByUserPrincipalName": {
                "type": "string",
                "description": "User who initiated the device action, format is UPN.",
                "nullable": true
              },
              "action": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.remoteAction"
                  }
                ],
                "description": "The action name."
              },
              "requestDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Time when the action was issued, given in UTC.",
                "format": "date-time"
              },
              "deviceOwnerUserPrincipalName": {
                "type": "string",
                "description": "Upn of the device owner.",
                "nullable": true
              },
              "deviceIMEI": {
                "type": "string",
                "description": "IMEI of the device.",
                "nullable": true
              },
              "actionState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceActionState"
                  }
                ],
                "description": "Action state."
              }
            },
            "description": "Report of remote actions initiated on the devices belonging to a certain tenant."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deviceDisplayName": "String",
          "userName": "String",
          "initiatedByUserPrincipalName": "String",
          "action": {
            "@odata.type": "microsoft.graph.remoteAction"
          },
          "requestDateTime": "DateTimeOffset (timestamp)",
          "deviceOwnerUserPrincipalName": "String",
          "deviceIMEI": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.deviceActionState"
          }
        }
      },
      "microsoft.graph.applePushNotificationCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "applePushNotificationCertificate",
            "type": "object",
            "properties": {
              "appleIdentifier": {
                "type": "string",
                "description": "Apple Id of the account used to create the MDM push certificate.",
                "nullable": true
              },
              "topicIdentifier": {
                "type": "string",
                "description": "Topic Id.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date and time for Apple push notification certificate.",
                "format": "date-time"
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The expiration date and time for Apple push notification certificate.",
                "format": "date-time"
              },
              "certificateUploadStatus": {
                "type": "string",
                "description": "The certificate upload status.",
                "nullable": true
              },
              "certificateUploadFailureReason": {
                "type": "string",
                "description": "The reason the certificate upload failed.",
                "nullable": true
              },
              "certificate": {
                "type": "string",
                "description": "Not yet documented",
                "nullable": true
              }
            },
            "description": "Apple push notification certificate."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "appleIdentifier": "String",
          "topicIdentifier": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "certificateUploadStatus": "String",
          "certificateUploadFailureReason": "String",
          "certificate": "String"
        }
      },
      "microsoft.graph.deviceManagementScript": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementScript",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Name of the device management script.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Optional description for the device management script.",
                "nullable": true
              },
              "runSchedule": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.runSchedule"
                  }
                ],
                "description": "The the interval for script to run. If not defined the script will run once",
                "nullable": true
              },
              "scriptContent": {
                "type": "string",
                "description": "The base64 encoded script text.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the device management script was created.",
                "format": "date-time"
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the device management script was last modified.",
                "format": "date-time"
              },
              "runAsAccount": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.runAsAccountType"
                  }
                ],
                "description": "Indicates the type of execution context the device management script runs in."
              },
              "enforceSignatureCheck": {
                "type": "boolean",
                "description": "Indicate whether the script signature needs be checked."
              },
              "fileName": {
                "type": "string",
                "description": "Script file name.",
                "nullable": true
              },
              "groupAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementScriptGroupAssignment"
                }
              },
              "runSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementScriptRunSummary"
                  }
                ],
                "nullable": true
              },
              "deviceRunStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementScriptDeviceState"
                }
              },
              "userRunStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementScriptUserState"
                }
              }
            },
            "description": "Intune will provide customer the ability to run their Powershell scripts on the enrolled windows 10 Azure Active Directory joined devices. The script can be run once or periodically."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "runSchedule": {
            "@odata.type": "microsoft.graph.runSchedule"
          },
          "scriptContent": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "runAsAccount": {
            "@odata.type": "microsoft.graph.runAsAccountType"
          },
          "enforceSignatureCheck": true,
          "fileName": "String",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceManagementScriptGroupAssignment"
            }
          ],
          "runSummary": {
            "@odata.type": "microsoft.graph.deviceManagementScriptRunSummary"
          },
          "deviceRunStates": [
            {
              "@odata.type": "microsoft.graph.deviceManagementScriptDeviceState"
            }
          ],
          "userRunStates": [
            {
              "@odata.type": "microsoft.graph.deviceManagementScriptUserState"
            }
          ]
        }
      },
      "microsoft.graph.managedDeviceOverview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceOverview",
            "type": "object",
            "properties": {
              "enrolledDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Total enrolled device count. Does not include PC devices managed via Intune PC Agent",
                "format": "int32"
              },
              "mdmEnrolledCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of devices enrolled in MDM",
                "format": "int32"
              },
              "dualEnrolledDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of devices enrolled in both MDM and EAS",
                "format": "int32"
              },
              "deviceOperatingSystemSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceOperatingSystemSummary"
                  }
                ],
                "description": "Device operating system summary.",
                "nullable": true
              },
              "deviceExchangeAccessStateSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceExchangeAccessStateSummary"
                  }
                ],
                "description": "Distribution of Exchange Access State in Intune",
                "nullable": true
              }
            },
            "description": "Summary data for managed devices"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "enrolledDeviceCount": "Int32",
          "mdmEnrolledCount": "Int32",
          "dualEnrolledDeviceCount": "Int32",
          "deviceOperatingSystemSummary": {
            "@odata.type": "microsoft.graph.deviceOperatingSystemSummary"
          },
          "deviceExchangeAccessStateSummary": {
            "@odata.type": "microsoft.graph.deviceExchangeAccessStateSummary"
          }
        }
      },
      "microsoft.graph.detectedApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "detectedApp",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Name of the discovered application. Read-only",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the discovered application. Read-only",
                "nullable": true
              },
              "sizeInByte": {
                "type": "integer",
                "description": "Discovered application size in bytes. Read-only",
                "format": "int64"
              },
              "deviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of devices that have installed this application",
                "format": "int32"
              },
              "managedDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDevice"
                }
              }
            },
            "description": "A managed or unmanaged app that is installed on a managed device. Unmanaged apps will only appear for devices marked as corporate owned."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "version": "String",
          "sizeInByte": "Int64",
          "deviceCount": "Int32",
          "managedDevices": [
            {
              "@odata.type": "microsoft.graph.managedDevice"
            }
          ]
        }
      },
      "microsoft.graph.windowsMalwareInformation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsMalwareInformation",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Malware name",
                "nullable": true
              },
              "additionalInformationUrl": {
                "type": "string",
                "description": "Information URL to learn more about the malware",
                "nullable": true
              },
              "severity": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsMalwareSeverity"
                  }
                ],
                "description": "Severity of the malware",
                "nullable": true
              },
              "category": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsMalwareCategory"
                  }
                ],
                "description": "Category of the malware",
                "nullable": true
              },
              "lastDetectionDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time the malware is detected",
                "format": "date-time",
                "nullable": true
              },
              "windowsDevicesProtectionState": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsProtectionState"
                }
              }
            },
            "description": "Malware information entity."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "additionalInformationUrl": "String",
          "severity": {
            "@odata.type": "microsoft.graph.windowsMalwareSeverity"
          },
          "category": {
            "@odata.type": "microsoft.graph.windowsMalwareCategory"
          },
          "lastDetectionDateTime": "DateTimeOffset (timestamp)",
          "windowsDevicesProtectionState": [
            {
              "@odata.type": "microsoft.graph.windowsProtectionState"
            }
          ]
        }
      },
      "microsoft.graph.deviceManagementSettings": {
        "title": "deviceManagementSettings",
        "type": "object",
        "properties": {
          "windowsCommercialId": {
            "type": "string",
            "nullable": true
          },
          "windowsCommercialIdLastModifiedTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "deviceComplianceCheckinThresholdDays": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of days a device is allowed to go without checking in to remain compliant. Valid values 0 to 120",
            "format": "int32"
          },
          "isScheduledActionEnabled": {
            "type": "boolean",
            "description": "Is feature enabled or not for scheduled action for rule."
          },
          "secureByDefault": {
            "type": "boolean",
            "description": "Device should be noncompliant when there is no compliance policy targeted when this is true"
          }
        },
        "example": {
          "windowsCommercialId": "String",
          "windowsCommercialIdLastModifiedTime": "DateTimeOffset (timestamp)",
          "deviceComplianceCheckinThresholdDays": "Int32",
          "isScheduledActionEnabled": true,
          "secureByDefault": true
        }
      },
      "microsoft.graph.deviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfiguration",
            "type": "object",
            "properties": {
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time"
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was created.",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "description": "Admin provided description of the Device Configuration.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Admin provided name of the device configuration."
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the device configuration.",
                "format": "int32"
              },
              "groupAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationGroupAssignment"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationAssignment"
                }
              },
              "deviceStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationDeviceStatus"
                }
              },
              "userStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationUserStatus"
                }
              },
              "deviceStatusOverview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationDeviceOverview"
                  }
                ],
                "nullable": true
              },
              "userStatusOverview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationUserOverview"
                  }
                ],
                "nullable": true
              },
              "deviceSettingStateSummaries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.settingStateDeviceSummary"
                }
              }
            },
            "description": "Device Configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ]
        }
      },
      "microsoft.graph.deviceCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCompliancePolicy",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was created.",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "description": "Admin provided description of the Device Configuration.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time"
              },
              "displayName": {
                "type": "string",
                "description": "Admin provided name of the device configuration."
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the device configuration.",
                "format": "int32"
              },
              "groupAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicyGroupAssignment"
                }
              },
              "scheduledActionsForRule": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceComplianceScheduledActionForRule"
                }
              },
              "deviceStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceComplianceDeviceStatus"
                }
              },
              "userStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceComplianceUserStatus"
                }
              },
              "deviceStatusOverview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceComplianceDeviceOverview"
                  }
                ],
                "nullable": true
              },
              "userStatusOverview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceComplianceUserOverview"
                  }
                ],
                "nullable": true
              },
              "deviceSettingStateSummaries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.settingStateDeviceSummary"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicyAssignment"
                }
              }
            },
            "description": "This is the base class for Compliance policy. Compliance policies are platform specific and individual per-platform compliance policies inherit from here. "
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyGroupAssignment"
            }
          ],
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ]
        }
      },
      "microsoft.graph.deviceSetupConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceSetupConfiguration",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was created.",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "description": "Admin provided description of the Device Configuration.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time"
              },
              "displayName": {
                "type": "string",
                "description": "Admin provided name of the device configuration."
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the device configuration.",
                "format": "int32"
              }
            },
            "description": "This is the base class for Setup Configuration. Setup configurations are platform specific and individual per-platform setup configurations inherit from here."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32"
        }
      },
      "microsoft.graph.softwareUpdateStatusSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "softwareUpdateStatusSummary",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The name of the policy.",
                "nullable": true
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant devices.",
                "format": "int32"
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of non compliant devices.",
                "format": "int32"
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated devices.",
                "format": "int32"
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of devices had error.",
                "format": "int32"
              },
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown devices.",
                "format": "int32"
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict devices.",
                "format": "int32"
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices.",
                "format": "int32"
              },
              "compliantUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant users.",
                "format": "int32"
              },
              "nonCompliantUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of non compliant users.",
                "format": "int32"
              },
              "remediatedUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated users.",
                "format": "int32"
              },
              "errorUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of users had error.",
                "format": "int32"
              },
              "unknownUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown users.",
                "format": "int32"
              },
              "conflictUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict users.",
                "format": "int32"
              },
              "notApplicableUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable users.",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "compliantDeviceCount": "Int32",
          "nonCompliantDeviceCount": "Int32",
          "remediatedDeviceCount": "Int32",
          "errorDeviceCount": "Int32",
          "unknownDeviceCount": "Int32",
          "conflictDeviceCount": "Int32",
          "notApplicableDeviceCount": "Int32",
          "compliantUserCount": "Int32",
          "nonCompliantUserCount": "Int32",
          "remediatedUserCount": "Int32",
          "errorUserCount": "Int32",
          "unknownUserCount": "Int32",
          "conflictUserCount": "Int32",
          "notApplicableUserCount": "Int32"
        }
      },
      "microsoft.graph.deviceCompliancePolicyDeviceStateSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCompliancePolicyDeviceStateSummary",
            "type": "object",
            "properties": {
              "inGracePeriodCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of devices that are in grace period",
                "format": "int32"
              },
              "configManagerCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of devices that have compliance managed by System Center Configuration Manager",
                "format": "int32"
              },
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown devices",
                "format": "int32"
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32"
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant devices",
                "format": "int32"
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated devices",
                "format": "int32"
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of NonCompliant devices",
                "format": "int32"
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32"
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict devices",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "inGracePeriodCount": "Int32",
          "configManagerCount": "Int32",
          "unknownDeviceCount": "Int32",
          "notApplicableDeviceCount": "Int32",
          "compliantDeviceCount": "Int32",
          "remediatedDeviceCount": "Int32",
          "nonCompliantDeviceCount": "Int32",
          "errorDeviceCount": "Int32",
          "conflictDeviceCount": "Int32"
        }
      },
      "microsoft.graph.deviceCompliancePolicySettingStateSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCompliancePolicySettingStateSummary",
            "type": "object",
            "properties": {
              "setting": {
                "type": "string",
                "description": "The setting class name and property name.",
                "nullable": true
              },
              "settingName": {
                "type": "string",
                "description": "Name of the setting.",
                "nullable": true
              },
              "platformType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.policyPlatformType"
                  }
                ],
                "description": "Setting platform"
              },
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown devices",
                "format": "int32"
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32"
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant devices",
                "format": "int32"
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated devices",
                "format": "int32"
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of NonCompliant devices",
                "format": "int32"
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32"
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict devices",
                "format": "int32"
              },
              "deviceComplianceSettingStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceComplianceSettingState"
                }
              }
            },
            "description": "Device Compilance Policy Setting State summary across the account."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "setting": "String",
          "settingName": "String",
          "platformType": {
            "@odata.type": "microsoft.graph.policyPlatformType"
          },
          "unknownDeviceCount": "Int32",
          "notApplicableDeviceCount": "Int32",
          "compliantDeviceCount": "Int32",
          "remediatedDeviceCount": "Int32",
          "nonCompliantDeviceCount": "Int32",
          "errorDeviceCount": "Int32",
          "conflictDeviceCount": "Int32",
          "deviceComplianceSettingStates": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceSettingState"
            }
          ]
        }
      },
      "microsoft.graph.deviceConfigurationDeviceStateSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationDeviceStateSummary",
            "type": "object",
            "properties": {
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown devices",
                "format": "int32"
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32"
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant devices",
                "format": "int32"
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated devices",
                "format": "int32"
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of NonCompliant devices",
                "format": "int32"
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32"
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict devices",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "unknownDeviceCount": "Int32",
          "notApplicableDeviceCount": "Int32",
          "compliantDeviceCount": "Int32",
          "remediatedDeviceCount": "Int32",
          "nonCompliantDeviceCount": "Int32",
          "errorDeviceCount": "Int32",
          "conflictDeviceCount": "Int32"
        }
      },
      "microsoft.graph.deviceConfigurationUserStateSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationUserStateSummary",
            "type": "object",
            "properties": {
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown devices",
                "format": "int32"
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32"
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant devices",
                "format": "int32"
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated devices",
                "format": "int32"
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of NonCompliant devices",
                "format": "int32"
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32"
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict devices",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "unknownDeviceCount": "Int32",
          "notApplicableDeviceCount": "Int32",
          "compliantDeviceCount": "Int32",
          "remediatedDeviceCount": "Int32",
          "nonCompliantDeviceCount": "Int32",
          "errorDeviceCount": "Int32",
          "conflictDeviceCount": "Int32"
        }
      },
      "microsoft.graph.cartToClassAssociation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "cartToClassAssociation",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was created.",
                "format": "date-time"
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time"
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the CartToClassAssociation.",
                "format": "int32"
              },
              "displayName": {
                "type": "string",
                "description": "Admin provided name of the device configuration.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Admin provided description of the CartToClassAssociation.",
                "nullable": true
              },
              "deviceCartIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Identifiers of device carts to be associated with classes."
              },
              "classroomIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Identifiers of classrooms to be associated with device carts."
              }
            },
            "description": "CartToClassAssociation for associating device carts with classrooms."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "Int32",
          "displayName": "String",
          "description": "String",
          "deviceCartIds": [
            "String"
          ],
          "classroomIds": [
            "String"
          ]
        }
      },
      "microsoft.graph.iosUpdateDeviceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "iosUpdateDeviceStatus",
            "type": "object",
            "properties": {
              "installStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosUpdatesInstallStatus"
                  }
                ],
                "description": "The installation status of the policy report."
              },
              "osVersion": {
                "type": "string",
                "description": "The device version that is being reported.",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "description": "The device id that is being reported.",
                "nullable": true
              },
              "userId": {
                "type": "string",
                "description": "The User id that is being reported.",
                "nullable": true
              },
              "deviceDisplayName": {
                "type": "string",
                "description": "Device name of the DevicePolicyStatus.",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "The User Name that is being reported",
                "nullable": true
              },
              "deviceModel": {
                "type": "string",
                "description": "The device model that is being reported",
                "nullable": true
              },
              "platform": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Platform of the device that is being reported",
                "format": "int32"
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time"
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report."
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time"
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "installStatus": {
            "@odata.type": "microsoft.graph.iosUpdatesInstallStatus"
          },
          "osVersion": "String",
          "deviceId": "String",
          "userId": "String",
          "deviceDisplayName": "String",
          "userName": "String",
          "deviceModel": "String",
          "platform": "Int32",
          "complianceGracePeriodExpirationDateTime": "DateTimeOffset (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "DateTimeOffset (timestamp)",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.ndesConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "ndesConnector",
            "type": "object",
            "properties": {
              "lastConnectionDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last connection time for the Ndes Connector",
                "format": "date-time"
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.ndesConnectorState"
                  }
                ],
                "description": "Ndes Connector Status"
              },
              "displayName": {
                "type": "string",
                "description": "The friendly name of the Ndes Connector.",
                "nullable": true
              }
            },
            "description": "Entity which represents an OnPrem Ndes connector."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastConnectionDateTime": "DateTimeOffset (timestamp)",
          "state": {
            "@odata.type": "microsoft.graph.ndesConnectorState"
          },
          "displayName": "String"
        }
      },
      "microsoft.graph.intuneBrand": {
        "title": "intuneBrand",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Company/organization name that is displayed to end users.",
            "nullable": true
          },
          "contactITName": {
            "type": "string",
            "description": "Name of the person/organization responsible for IT support.",
            "nullable": true
          },
          "contactITPhoneNumber": {
            "type": "string",
            "description": "Phone number of the person/organization responsible for IT support.",
            "nullable": true
          },
          "contactITEmailAddress": {
            "type": "string",
            "description": "Email address of the person/organization responsible for IT support.",
            "nullable": true
          },
          "contactITNotes": {
            "type": "string",
            "description": "Text comments regarding the person/organization responsible for IT support.",
            "nullable": true
          },
          "privacyUrl": {
            "type": "string",
            "description": "URL to the company/organization’s privacy policy.",
            "nullable": true
          },
          "onlineSupportSiteUrl": {
            "type": "string",
            "description": "URL to the company/organization’s IT helpdesk site.",
            "nullable": true
          },
          "onlineSupportSiteName": {
            "type": "string",
            "description": "Display name of the company/organization’s IT helpdesk site.",
            "nullable": true
          },
          "themeColor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.rgbColor"
              }
            ],
            "description": "Primary theme color used in the Company Portal applications and web portal.",
            "nullable": true
          },
          "showLogo": {
            "type": "boolean",
            "description": "Boolean that represents whether the administrator-supplied logo images are shown or not shown."
          },
          "lightBackgroundLogo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mimeContent"
              }
            ],
            "description": "Logo image displayed in Company Portal apps which have a light background behind the logo.",
            "nullable": true
          },
          "darkBackgroundLogo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mimeContent"
              }
            ],
            "description": "Logo image displayed in Company Portal apps which have a dark background behind the logo.",
            "nullable": true
          },
          "showNameNextToLogo": {
            "type": "boolean",
            "description": "Boolean that represents whether the administrator-supplied display name will be shown next to the logo image."
          }
        },
        "example": {
          "displayName": "String",
          "contactITName": "String",
          "contactITPhoneNumber": "String",
          "contactITEmailAddress": "String",
          "contactITNotes": "String",
          "privacyUrl": "String",
          "onlineSupportSiteUrl": "String",
          "onlineSupportSiteName": "String",
          "themeColor": {
            "@odata.type": "microsoft.graph.rgbColor"
          },
          "showLogo": true,
          "lightBackgroundLogo": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "darkBackgroundLogo": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "showNameNextToLogo": true
        }
      },
      "microsoft.graph.rgbColor": {
        "title": "rgbColor",
        "type": "object",
        "properties": {
          "r": {
            "type": "integer",
            "description": "Red value",
            "format": "uint8"
          },
          "g": {
            "type": "integer",
            "description": "Green value",
            "format": "uint8"
          },
          "b": {
            "type": "integer",
            "description": "Blue value",
            "format": "uint8"
          }
        },
        "example": {
          "r": "Byte",
          "g": "Byte",
          "b": "Byte"
        }
      },
      "microsoft.graph.mimeContent": {
        "title": "mimeContent",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Indicates the content mime type.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The byte array that contains the actual content.",
            "format": "base64url",
            "nullable": true
          }
        },
        "example": {
          "type": "String",
          "value": "Binary"
        }
      },
      "microsoft.graph.deviceCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCategory",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Display name for the device category.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Optional description for the device category.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String"
        }
      },
      "microsoft.graph.deviceManagementExchangeConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementExchangeConnector",
            "type": "object",
            "properties": {
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last sync time for the Exchange Connector",
                "format": "date-time"
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeConnectorStatus"
                  }
                ],
                "description": "Exchange Connector Status"
              },
              "primarySmtpAddress": {
                "type": "string",
                "description": "Email address used to configure the Service To Service Exchange Connector.",
                "nullable": true
              },
              "serverName": {
                "type": "string",
                "description": "The name of the server hosting the Exchange Connector.",
                "nullable": true
              },
              "exchangeConnectorType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeConnectorType"
                  }
                ],
                "description": "The type of Exchange Connector Configured."
              },
              "version": {
                "type": "string",
                "description": "The version of the ExchangeConnectorAgent",
                "nullable": true
              },
              "exchangeAlias": {
                "type": "string",
                "description": "An alias assigned to the Exchange server",
                "nullable": true
              },
              "exchangeOrganization": {
                "type": "string",
                "description": "Exchange Organization to the Exchange server",
                "nullable": true
              }
            },
            "description": "Entity which represents a connection to an Exchange environment."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastSyncDateTime": "DateTimeOffset (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeConnectorStatus"
          },
          "primarySmtpAddress": "String",
          "serverName": "String",
          "exchangeConnectorType": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeConnectorType"
          },
          "version": "String",
          "exchangeAlias": "String",
          "exchangeOrganization": "String"
        }
      },
      "microsoft.graph.deviceEnrollmentConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceEnrollmentConfiguration",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Not yet documented",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Not yet documented",
                "nullable": true
              },
              "priority": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32"
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Not yet documented",
                "format": "date-time"
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Not yet documented",
                "format": "date-time"
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32"
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.enrollmentConfigurationAssignment"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "priority": "Int32",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "Int32",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
            }
          ]
        }
      },
      "microsoft.graph.deviceManagementExchangeOnPremisesPolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementExchangeOnPremisesPolicy",
            "type": "object",
            "properties": {
              "notificationContent": {
                "type": "string",
                "description": "Notification text that will be sent to users quarantined by this policy. This is UTF8 encoded byte array HTML.",
                "format": "base64url",
                "nullable": true
              },
              "defaultAccessLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeAccessLevel"
                  }
                ],
                "description": "Default access state in Exchange. This rule applies globally to the entire Exchange organization"
              },
              "accessRules": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeAccessRule"
                    }
                  ],
                  "nullable": true
                },
                "description": "The list of device access rules in Exchange. The access rules apply globally to the entire Exchange organization"
              },
              "knownDeviceClasses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeDeviceClass"
                    }
                  ],
                  "nullable": true
                },
                "description": "The list of device classes known to Exchange"
              },
              "conditionalAccessSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onPremisesConditionalAccessSettings"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Singleton entity which represents the Exchange OnPremises policy configured for a tenant."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "notificationContent": "Binary",
          "defaultAccessLevel": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeAccessLevel"
          },
          "accessRules": [
            {
              "@odata.type": "microsoft.graph.deviceManagementExchangeAccessRule"
            }
          ],
          "knownDeviceClasses": [
            {
              "@odata.type": "microsoft.graph.deviceManagementExchangeDeviceClass"
            }
          ],
          "conditionalAccessSettings": {
            "@odata.type": "microsoft.graph.onPremisesConditionalAccessSettings"
          }
        }
      },
      "microsoft.graph.onPremisesConditionalAccessSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "onPremisesConditionalAccessSettings",
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Indicates if on premises conditional access is enabled for this organization"
              },
              "includedGroups": {
                "type": "array",
                "items": {
                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                  "type": "string",
                  "format": "uuid"
                },
                "description": "User groups that will be targeted by on premises conditional access. All users in these groups will be required to have mobile device managed and compliant for mail access."
              },
              "excludedGroups": {
                "type": "array",
                "items": {
                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                  "type": "string",
                  "format": "uuid"
                },
                "description": "User groups that will be exempt by on premises conditional access. All users in these groups will be exempt from the conditional access policy."
              },
              "overrideDefaultRule": {
                "type": "boolean",
                "description": "Override the default access rule when allowing a device to ensure access is granted."
              }
            },
            "description": "Singleton entity which represents the Exchange OnPremises Conditional Access Settings for a tenant."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "enabled": true,
          "includedGroups": [
            "Guid"
          ],
          "excludedGroups": [
            "Guid"
          ],
          "overrideDefaultRule": true
        }
      },
      "microsoft.graph.mobileThreatDefenseConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileThreatDefenseConnector",
            "type": "object",
            "properties": {
              "lastHeartbeatDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Timestamp of last heartbeat after admin enabled option Connect to MTP",
                "format": "date-time"
              },
              "partnerState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileThreatPartnerTenantState"
                  }
                ],
                "description": "Partner state of this tenant"
              },
              "androidEnabled": {
                "type": "boolean",
                "description": "Android Toggle On or Off"
              },
              "androidDeviceBlockedOnMissingPartnerData": {
                "type": "boolean",
                "description": "For Android, Allows admin to config must receive data from the data sync partner prior to being considered compliant"
              },
              "iosDeviceBlockedOnMissingPartnerData": {
                "type": "boolean",
                "description": "For IOS, Allows admin to config must receive data from the data sync partner prior to being considered compliant"
              },
              "partnerUnsupportedOsVersionBlocked": {
                "type": "boolean",
                "description": "Allows admin to block devices on the enabled platforms that do not meet minimum version requirements"
              },
              "iosEnabled": {
                "type": "boolean",
                "description": "IOS Toggle On or Off"
              },
              "partnerUnresponsivenessThresholdInDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Get or Set days the per tenant tolerance to unresponsiveness for this partner integration",
                "format": "int32"
              }
            },
            "description": "Entity which represents a connection to Mobile threat defense partner."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastHeartbeatDateTime": "DateTimeOffset (timestamp)",
          "partnerState": {
            "@odata.type": "microsoft.graph.mobileThreatPartnerTenantState"
          },
          "androidEnabled": true,
          "androidDeviceBlockedOnMissingPartnerData": true,
          "iosDeviceBlockedOnMissingPartnerData": true,
          "partnerUnsupportedOsVersionBlocked": true,
          "iosEnabled": true,
          "partnerUnresponsivenessThresholdInDays": "Int32"
        }
      },
      "microsoft.graph.deviceManagementPartner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementPartner",
            "type": "object",
            "properties": {
              "lastHeartbeatDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Timestamp of last heartbeat after admin enabled option Connect to Device management Partner",
                "format": "date-time"
              },
              "partnerState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementPartnerTenantState"
                  }
                ],
                "description": "Partner state of this tenant"
              },
              "partnerAppType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementPartnerAppType"
                  }
                ],
                "description": "Partner App type"
              },
              "singleTenantAppId": {
                "type": "string",
                "description": "Partner Single tenant App id",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Partner display name",
                "nullable": true
              },
              "isConfigured": {
                "type": "boolean",
                "description": "Whether device management partner is configured or not"
              },
              "whenPartnerDevicesWillBeRemoved": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime in UTC when PartnerDevices will be removed",
                "format": "date-time",
                "nullable": true
              },
              "whenPartnerDevicesWillBeMarkedAsNonCompliant": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime in UTC when PartnerDevices will be marked as NonCompliant",
                "format": "date-time",
                "nullable": true
              }
            },
            "description": "Entity which represents a connection to device management partner."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastHeartbeatDateTime": "DateTimeOffset (timestamp)",
          "partnerState": {
            "@odata.type": "microsoft.graph.deviceManagementPartnerTenantState"
          },
          "partnerAppType": {
            "@odata.type": "microsoft.graph.deviceManagementPartnerAppType"
          },
          "singleTenantAppId": "String",
          "displayName": "String",
          "isConfigured": true,
          "whenPartnerDevicesWillBeRemoved": "DateTimeOffset (timestamp)",
          "whenPartnerDevicesWillBeMarkedAsNonCompliant": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.notificationMessageTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "notificationMessageTemplate",
            "type": "object",
            "properties": {
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time"
              },
              "displayName": {
                "type": "string",
                "description": "Display name for the Notification Message Template."
              },
              "defaultLocale": {
                "type": "string",
                "description": "The default locale to fallback onto when the requested locale is not available.",
                "nullable": true
              },
              "brandingOptions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notificationTemplateBrandingOptions"
                  }
                ],
                "description": "The Message Template Branding Options. Branding is defined in the Intune Admin Console."
              },
              "localizedNotificationMessages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.localizedNotificationMessage"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "defaultLocale": "String",
          "brandingOptions": {
            "@odata.type": "microsoft.graph.notificationTemplateBrandingOptions"
          },
          "localizedNotificationMessages": [
            {
              "@odata.type": "microsoft.graph.localizedNotificationMessage"
            }
          ]
        }
      },
      "microsoft.graph.roleDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "roleDefinition",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Display Name of the Role definition.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description of the Role definition.",
                "nullable": true
              },
              "permissions": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.rolePermission"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of Role Permissions this role is allowed to perform. These must match the actionName that is defined as part of the rolePermission."
              },
              "rolePermissions": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.rolePermission"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of Role Permissions this role is allowed to perform. These must match the actionName that is defined as part of the rolePermission."
              },
              "isBuiltInRoleDefinition": {
                "type": "boolean",
                "description": "Type of Role. Set to True if it is built-in, or set to False if it is a custom role definition."
              },
              "isBuiltIn": {
                "type": "boolean",
                "description": "Type of Role. Set to True if it is built-in, or set to False if it is a custom role definition."
              },
              "roleAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.roleAssignment"
                }
              }
            },
            "description": "The Role Definition resource. The role definition is the foundation of role based access in Intune. The role combines an Intune resource such as a Mobile App and associated role permissions such as Create or Read for the resource. There are two types of roles, built-in and custom. Built-in roles cannot be modified. Both built-in roles and custom roles must have assignments to be enforced. Create custom roles if you want to define a role that allows any of the available resources and role permissions to be combined into a single role."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "permissions": [
            {
              "@odata.type": "microsoft.graph.rolePermission"
            }
          ],
          "rolePermissions": [
            {
              "@odata.type": "microsoft.graph.rolePermission"
            }
          ],
          "isBuiltInRoleDefinition": true,
          "isBuiltIn": true,
          "roleAssignments": [
            {
              "@odata.type": "microsoft.graph.roleAssignment"
            }
          ]
        }
      },
      "microsoft.graph.roleAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "roleAssignment",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The display or friendly name of the role Assignment.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description of the Role Assignment.",
                "nullable": true
              },
              "members": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The list of ids of role member security groups. These are IDs from Azure Active Directory."
              },
              "scopeMembers": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "List of ids of role scope member security groups.  These are IDs from Azure Active Directory."
              },
              "resourceScopes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "List of ids of role scope member security groups.  These are IDs from Azure Active Directory."
              },
              "roleDefinition": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.roleDefinition"
                  }
                ],
                "nullable": true
              }
            },
            "description": "The Role Assignment resource. Role assignments tie together a role definition with members and scopes. There can be one or more role assignments per role. This applies to custom and built-in roles."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "members": [
            "String"
          ],
          "scopeMembers": [
            "String"
          ],
          "resourceScopes": [
            "String"
          ],
          "roleDefinition": {
            "@odata.type": "microsoft.graph.roleDefinition"
          }
        }
      },
      "microsoft.graph.resourceOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "resourceOperation",
            "type": "object",
            "properties": {
              "resourceName": {
                "type": "string",
                "description": "Name of the Resource this operation is performed on.",
                "nullable": true
              },
              "actionName": {
                "type": "string",
                "description": "Type of action this operation is going to perform. The actionName should be concise and limited to as few words as possible.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description of the resource operation. The description is used in mouse-over text for the operation when shown in the Azure Portal.",
                "nullable": true
              }
            },
            "description": "This defines an operation or action that can be performed on an Intune resource (or entity).  Common operations are Read, Delete, Update or Create.  These operations provide basic management of the underlying Intune resource itself.  In some cases, an Intune resource can have operations that are used by the resource to take action in combination with other resources.  For example, the Assign operation is used to assign a MobileApp resource to an AAD security group.  Resource operations cannot be modified for built-in roles.This defines an operation or action that can be performed on an Intune resource (or entity).  Common operations are Get, List, Delete, Update or Create.  These operations provide basic management of the underlying Intune resource itself.  In some cases, an Intune resource can have operations that are used by the resource to take action in combination with other resources.  For example, the \"Assign\" operation is used to assign a MobileApp resource to an AAD security group.  Resource operations cannot be modified for built-in roles."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "resourceName": "String",
          "actionName": "String",
          "description": "String"
        }
      },
      "microsoft.graph.telecomExpenseManagementPartner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "telecomExpenseManagementPartner",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Display name of the TEM partner.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "description": "URL of the TEM partner's administrative control panel, where an administrator can configure their TEM service.",
                "nullable": true
              },
              "appAuthorized": {
                "type": "boolean",
                "description": "Whether the partner's AAD app has been authorized to access Intune."
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether Intune's connection to the TEM service is currently enabled or disabled."
              },
              "lastConnectionDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Timestamp of the last request sent to Intune by the TEM partner.",
                "format": "date-time"
              }
            },
            "description": "telecomExpenseManagementPartner resources represent the metadata and status of a given TEM service. Once your organization has onboarded with a partner, the partner can be enabled or disabled to switch TEM functionality on or off."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "url": "String",
          "appAuthorized": true,
          "enabled": true,
          "lastConnectionDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.windowsAutopilotSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsAutopilotSettings",
            "type": "object",
            "properties": {
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last data sync date time with DDS service.",
                "format": "date-time"
              },
              "lastManualSyncTriggerDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last data sync date time with DDS service.",
                "format": "date-time"
              },
              "syncStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsAutopilotSyncStatus"
                  }
                ],
                "description": "Indicates the status of sync with Device data sync (DDS) service."
              }
            },
            "description": "The windowsAutopilotSettings resource represents a Windows Autopilot Account to sync data with Windows device data sync service."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastSyncDateTime": "DateTimeOffset (timestamp)",
          "lastManualSyncTriggerDateTime": "DateTimeOffset (timestamp)",
          "syncStatus": {
            "@odata.type": "microsoft.graph.windowsAutopilotSyncStatus"
          }
        }
      },
      "microsoft.graph.windowsAutopilotDeviceIdentity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsAutopilotDeviceIdentity",
            "type": "object",
            "properties": {
              "deploymentProfileAssignmentStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsAutopilotProfileAssignmentStatus"
                  }
                ],
                "description": "Profile assignment status of the Windows autopilot device."
              },
              "deploymentProfileAssignedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Profile set time of the Windows autopilot device.",
                "format": "date-time"
              },
              "orderIdentifier": {
                "type": "string",
                "description": "Order Identifier of the Windows autopilot device.",
                "nullable": true
              },
              "serialNumber": {
                "type": "string",
                "description": "Serial number of the Windows autopilot device.",
                "nullable": true
              },
              "productKey": {
                "type": "string",
                "description": "Product Key of the Windows autopilot device.",
                "nullable": true
              },
              "manufacturer": {
                "type": "string",
                "description": "Oem manufacturer of the Windows autopilot device.",
                "nullable": true
              },
              "model": {
                "type": "string",
                "description": "Model name of the Windows autopilot device.",
                "nullable": true
              },
              "enrollmentState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.enrollmentState"
                  }
                ],
                "description": "Intune enrollment state of the Windows autopilot device."
              },
              "lastContactedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Intune Last Contacted Date Time of the Windows autopilot device.",
                "format": "date-time"
              },
              "deploymentProfile": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsAutopilotDeploymentProfile"
                  }
                ],
                "nullable": true
              }
            },
            "description": "The windowsAutopilotDeviceIdentity resource represents a Windows Autopilot Device."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deploymentProfileAssignmentStatus": {
            "@odata.type": "microsoft.graph.windowsAutopilotProfileAssignmentStatus"
          },
          "deploymentProfileAssignedDateTime": "DateTimeOffset (timestamp)",
          "orderIdentifier": "String",
          "serialNumber": "String",
          "productKey": "String",
          "manufacturer": "String",
          "model": "String",
          "enrollmentState": {
            "@odata.type": "microsoft.graph.enrollmentState"
          },
          "lastContactedDateTime": "DateTimeOffset (timestamp)",
          "deploymentProfile": {
            "@odata.type": "microsoft.graph.windowsAutopilotDeploymentProfile"
          }
        }
      },
      "microsoft.graph.windowsAutopilotDeploymentProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsAutopilotDeploymentProfile",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Name of the profile",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description of the profile",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Profile creation time",
                "format": "date-time"
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Profile last modified time",
                "format": "date-time"
              },
              "outOfBoxExperienceSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.outOfBoxExperienceSettings"
                  }
                ],
                "description": "Out of box experience setting",
                "nullable": true
              },
              "assignedDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsAutopilotDeviceIdentity"
                }
              }
            },
            "description": "Windows Auto Pilot Deployment Profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "outOfBoxExperienceSettings": {
            "@odata.type": "microsoft.graph.outOfBoxExperienceSettings"
          },
          "assignedDevices": [
            {
              "@odata.type": "microsoft.graph.windowsAutopilotDeviceIdentity"
            }
          ]
        }
      },
      "microsoft.graph.remoteAssistancePartner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "remoteAssistancePartner",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Display name of the partner.",
                "nullable": true
              },
              "onboardingUrl": {
                "type": "string",
                "description": "URL of the partner's onboarding portal, where an administrator can configure their Remote Assistance service.",
                "nullable": true
              },
              "onboardingStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.remoteAssistanceOnboardingStatus"
                  }
                ],
                "description": "TBD"
              },
              "lastConnectionDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Timestamp of the last request sent to Intune by the TEM partner.",
                "format": "date-time"
              }
            },
            "description": "remoteAssistPartner resources represent the metadata and status of a given Remote Assistance partner service."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "onboardingUrl": "String",
          "onboardingStatus": {
            "@odata.type": "microsoft.graph.remoteAssistanceOnboardingStatus"
          },
          "lastConnectionDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.windowsInformationProtectionAppLearningSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsInformationProtectionAppLearningSummary",
            "type": "object",
            "properties": {
              "applicationName": {
                "type": "string",
                "description": "Application Name",
                "nullable": true
              },
              "applicationType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.applicationType"
                  }
                ],
                "description": "Application Type"
              },
              "deviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device Count",
                "format": "int32"
              }
            },
            "description": "Windows Information Protection AppLearning Summary entity."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "applicationName": "String",
          "applicationType": {
            "@odata.type": "microsoft.graph.applicationType"
          },
          "deviceCount": "Int32"
        }
      },
      "microsoft.graph.auditEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "auditEvent",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Event display name.",
                "nullable": true
              },
              "componentName": {
                "type": "string",
                "description": "Component name.",
                "nullable": true
              },
              "actor": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.auditActor"
                  }
                ],
                "description": "AAD user and application that are associated with the audit event.",
                "nullable": true
              },
              "activity": {
                "type": "string",
                "description": "Friendly name of the activity.",
                "nullable": true
              },
              "activityDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date time in UTC when the activity was performed.",
                "format": "date-time"
              },
              "activityType": {
                "type": "string",
                "description": "The type of activity that was being performed.",
                "nullable": true
              },
              "activityOperationType": {
                "type": "string",
                "description": "The HTTP operation type of the activity.",
                "nullable": true
              },
              "activityResult": {
                "type": "string",
                "description": "The result of the activity.",
                "nullable": true
              },
              "correlationId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "The client request Id that is used to correlate activity within the system.",
                "format": "uuid"
              },
              "resources": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.auditResource"
                    }
                  ],
                  "nullable": true
                },
                "description": "Resources being modified."
              },
              "category": {
                "type": "string",
                "description": "Audit category.",
                "nullable": true
              }
            },
            "description": "A class containing the properties for Audit Event."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "componentName": "String",
          "actor": {
            "@odata.type": "microsoft.graph.auditActor"
          },
          "activity": "String",
          "activityDateTime": "DateTimeOffset (timestamp)",
          "activityType": "String",
          "activityOperationType": "String",
          "activityResult": "String",
          "correlationId": "Guid",
          "resources": [
            {
              "@odata.type": "microsoft.graph.auditResource"
            }
          ],
          "category": "String"
        }
      },
      "microsoft.graph.androidForWorkAppConfigurationExample": {
        "title": "androidForWorkAppConfigurationExample",
        "type": "object"
      },
      "microsoft.graph.androidForWorkAppConfigurationSchemaItem": {
        "title": "androidForWorkAppConfigurationSchemaItem",
        "type": "object",
        "properties": {
          "schemaItemKey": {
            "type": "string",
            "description": "Unique key the application uses to identify the item",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "Human readable name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of what the item controls within the application",
            "nullable": true
          },
          "defaultBoolValue": {
            "type": "boolean",
            "description": "Default value for boolean type items, if specified by the app developer",
            "nullable": true
          },
          "defaultIntValue": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Default value for integer type items, if specified by the app developer",
            "format": "int32",
            "nullable": true
          },
          "defaultStringValue": {
            "type": "string",
            "description": "Default value for string type items, if specified by the app developer",
            "nullable": true
          },
          "defaultStringArrayValue": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Default value for string array type items, if specified by the app developer"
          },
          "dataType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.androidForWorkAppConfigurationSchemaItemDataType"
              }
            ],
            "description": "The type of value this item describes"
          },
          "selections": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.keyValuePair"
                }
              ],
              "nullable": true
            },
            "description": "List of human readable name/value pairs for the valid values that can be set for this item (Choice and Multiselect items only)"
          }
        },
        "example": {
          "schemaItemKey": "String",
          "displayName": "String",
          "description": "String",
          "defaultBoolValue": true,
          "defaultIntValue": "Int32",
          "defaultStringValue": "String",
          "defaultStringArrayValue": [
            "String"
          ],
          "dataType": {
            "@odata.type": "microsoft.graph.androidForWorkAppConfigurationSchemaItemDataType"
          },
          "selections": [
            {
              "@odata.type": "microsoft.graph.keyValuePair"
            }
          ]
        }
      },
      "microsoft.graph.keyValuePair": {
        "title": "keyValuePair",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name for this key-value pair"
          },
          "value": {
            "type": "string",
            "description": "Value for this key-value pair",
            "nullable": true
          }
        },
        "example": {
          "name": "String",
          "value": "String"
        }
      },
      "microsoft.graph.androidForWorkAppConfigurationExampleJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.androidForWorkAppConfigurationExample"
          },
          {
            "title": "androidForWorkAppConfigurationExampleJson",
            "type": "object",
            "properties": {
              "example": {
                "type": "string",
                "description": "Example as JSON.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "example": "String"
        }
      },
      "microsoft.graph.deviceAppManagement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceAppManagement",
            "type": "object",
            "properties": {
              "microsoftStoreForBusinessLastSuccessfulSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time the apps from the Microsoft Store for Business were synced successfully for the account.",
                "format": "date-time"
              },
              "isEnabledForMicrosoftStoreForBusiness": {
                "type": "boolean",
                "description": "Whether the account is enabled for syncing applications from the Microsoft Store for Business."
              },
              "microsoftStoreForBusinessLanguage": {
                "type": "string",
                "description": "The locale information used to sync applications from the Microsoft Store for Business. Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is <languagecode2>-<country/regioncode2>, where <languagecode2> is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166. For example, en-US for English (United States) is a specific culture.",
                "nullable": true
              },
              "microsoftStoreForBusinessLastCompletedApplicationSyncTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time an application sync from the Microsoft Store for Business was completed.",
                "format": "date-time"
              },
              "windowsManagementApp": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsManagementApp"
                  }
                ],
                "nullable": true
              },
              "mobileApps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileApp"
                }
              },
              "mobileAppCategories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppCategory"
                }
              },
              "enterpriseCodeSigningCertificates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.enterpriseCodeSigningCertificate"
                }
              },
              "iosLobAppProvisioningConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.iosLobAppProvisioningConfiguration"
                }
              },
              "symantecCodeSigningCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.symantecCodeSigningCertificate"
                  }
                ],
                "nullable": true
              },
              "mobileAppConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfiguration"
                }
              },
              "sideLoadingKeys": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.sideLoadingKey"
                }
              },
              "vppTokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.vppToken"
                }
              },
              "managedAppPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
                }
              },
              "iosManagedAppProtections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.iosManagedAppProtection"
                }
              },
              "androidManagedAppProtections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.androidManagedAppProtection"
                }
              },
              "defaultManagedAppProtections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.defaultManagedAppProtection"
                }
              },
              "targetedManagedAppConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppConfiguration"
                }
              },
              "mdmWindowsInformationProtectionPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mdmWindowsInformationProtectionPolicy"
                }
              },
              "windowsInformationProtectionPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionPolicy"
                }
              },
              "managedAppRegistrations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
                }
              },
              "managedAppStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppStatus"
                }
              },
              "managedEBooks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedEBook"
                }
              }
            },
            "description": "Singleton entity that acts as a container for all device app management functionality."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "microsoftStoreForBusinessLastSuccessfulSyncDateTime": "DateTimeOffset (timestamp)",
          "isEnabledForMicrosoftStoreForBusiness": true,
          "microsoftStoreForBusinessLanguage": "String",
          "microsoftStoreForBusinessLastCompletedApplicationSyncTime": "DateTimeOffset (timestamp)",
          "windowsManagementApp": {
            "@odata.type": "microsoft.graph.windowsManagementApp"
          },
          "mobileApps": [
            {
              "@odata.type": "microsoft.graph.mobileApp"
            }
          ],
          "mobileAppCategories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "enterpriseCodeSigningCertificates": [
            {
              "@odata.type": "microsoft.graph.enterpriseCodeSigningCertificate"
            }
          ],
          "iosLobAppProvisioningConfigurations": [
            {
              "@odata.type": "microsoft.graph.iosLobAppProvisioningConfiguration"
            }
          ],
          "symantecCodeSigningCertificate": {
            "@odata.type": "microsoft.graph.symantecCodeSigningCertificate"
          },
          "mobileAppConfigurations": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfiguration"
            }
          ],
          "sideLoadingKeys": [
            {
              "@odata.type": "microsoft.graph.sideLoadingKey"
            }
          ],
          "vppTokens": [
            {
              "@odata.type": "microsoft.graph.vppToken"
            }
          ],
          "managedAppPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "iosManagedAppProtections": [
            {
              "@odata.type": "microsoft.graph.iosManagedAppProtection"
            }
          ],
          "androidManagedAppProtections": [
            {
              "@odata.type": "microsoft.graph.androidManagedAppProtection"
            }
          ],
          "defaultManagedAppProtections": [
            {
              "@odata.type": "microsoft.graph.defaultManagedAppProtection"
            }
          ],
          "targetedManagedAppConfigurations": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppConfiguration"
            }
          ],
          "mdmWindowsInformationProtectionPolicies": [
            {
              "@odata.type": "microsoft.graph.mdmWindowsInformationProtectionPolicy"
            }
          ],
          "windowsInformationProtectionPolicies": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionPolicy"
            }
          ],
          "managedAppRegistrations": [
            {
              "@odata.type": "microsoft.graph.managedAppRegistration"
            }
          ],
          "managedAppStatuses": [
            {
              "@odata.type": "microsoft.graph.managedAppStatus"
            }
          ],
          "managedEBooks": [
            {
              "@odata.type": "microsoft.graph.managedEBook"
            }
          ]
        }
      },
      "microsoft.graph.windowsManagementApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsManagementApp",
            "type": "object",
            "properties": {
              "availableVersion": {
                "type": "string",
                "description": "Windows management app available version.",
                "nullable": true
              },
              "healthSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsManagementAppHealthSummary"
                  }
                ],
                "nullable": true
              },
              "healthStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsManagementAppHealthState"
                }
              }
            },
            "description": "Windows management app entity."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "availableVersion": "String",
          "healthSummary": {
            "@odata.type": "microsoft.graph.windowsManagementAppHealthSummary"
          },
          "healthStates": [
            {
              "@odata.type": "microsoft.graph.windowsManagementAppHealthState"
            }
          ]
        }
      },
      "microsoft.graph.mobileApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileApp",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The admin provided or imported title of the app.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "The description of the app.",
                "nullable": true
              },
              "publisher": {
                "type": "string",
                "description": "The publisher of the app.",
                "nullable": true
              },
              "largeIcon": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mimeContent"
                  }
                ],
                "description": "The large icon, to be displayed in the app details and used for upload of the icon.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the app was created.",
                "format": "date-time"
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the app was last modified.",
                "format": "date-time"
              },
              "isFeatured": {
                "type": "boolean",
                "description": "The value indicating whether the app is marked as featured by the admin."
              },
              "privacyInformationUrl": {
                "type": "string",
                "description": "The privacy statement Url.",
                "nullable": true
              },
              "informationUrl": {
                "type": "string",
                "description": "The more information Url.",
                "nullable": true
              },
              "owner": {
                "type": "string",
                "description": "The owner of the app.",
                "nullable": true
              },
              "developer": {
                "type": "string",
                "description": "The developer of the app.",
                "nullable": true
              },
              "notes": {
                "type": "string",
                "description": "Notes for the app.",
                "nullable": true
              },
              "uploadState": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The upload state.",
                "format": "int32"
              },
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppCategory"
                }
              },
              "groupAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppGroupAssignment"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppAssignment"
                }
              },
              "installSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileAppInstallSummary"
                  }
                ],
                "nullable": true
              },
              "deviceStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppInstallStatus"
                }
              },
              "userStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.userAppInstallStatus"
                }
              }
            },
            "description": "An abstract class containing the base properties for Intune mobile apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ]
        }
      },
      "microsoft.graph.mobileAppCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppCategory",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The name of the app category.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the mobileAppCategory was last modified.",
                "format": "date-time"
              }
            },
            "description": "Contains properties for a single Intune app category."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.enterpriseCodeSigningCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "enterpriseCodeSigningCertificate",
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "The Windows Enterprise Code-Signing Certificate in the raw data format.",
                "format": "base64url",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.certificateStatus"
                  }
                ],
                "description": "The Certificate Status Provisioned or not Provisioned."
              },
              "subjectName": {
                "type": "string",
                "description": "The Subject Name for the cert.",
                "nullable": true
              },
              "subject": {
                "type": "string",
                "description": "The Subject Value for the cert.",
                "nullable": true
              },
              "issuerName": {
                "type": "string",
                "description": "The Issuer Name for the cert.",
                "nullable": true
              },
              "issuer": {
                "type": "string",
                "description": "The Issuer value for the cert.",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Cert Expiration Date.",
                "format": "date-time"
              },
              "uploadDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date time of CodeSigning Cert when it is uploaded.",
                "format": "date-time"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "content": "Binary",
          "status": {
            "@odata.type": "microsoft.graph.certificateStatus"
          },
          "subjectName": "String",
          "subject": "String",
          "issuerName": "String",
          "issuer": "String",
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "uploadDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.iosLobAppProvisioningConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "iosLobAppProvisioningConfiguration",
            "type": "object",
            "properties": {
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Optional profile expiration date and time.",
                "format": "date-time",
                "nullable": true
              },
              "payloadFileName": {
                "type": "string",
                "description": "Payload file name (*.mobileprovision | *.xml)."
              },
              "payload": {
                "type": "string",
                "description": "Payload. (UTF8 encoded byte array)",
                "format": "base64url"
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was created.",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "description": "Admin provided description of the Device Configuration.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time"
              },
              "displayName": {
                "type": "string",
                "description": "Admin provided name of the device configuration."
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the device configuration.",
                "format": "int32"
              },
              "groupAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppProvisioningConfigGroupAssignment"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.iosLobAppProvisioningConfigurationAssignment"
                }
              },
              "deviceStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
                }
              },
              "userStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
                }
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the IOS Lob App Provisioning Configuration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "payloadFileName": "String",
          "payload": "Binary",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppProvisioningConfigGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.iosLobAppProvisioningConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
            }
          ]
        }
      },
      "microsoft.graph.symantecCodeSigningCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "symantecCodeSigningCertificate",
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "The Windows Symantec Code-Signing Certificate in the raw data format.",
                "format": "base64url",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.certificateStatus"
                  }
                ],
                "description": "The Cert Status Provisioned or not Provisioned."
              },
              "password": {
                "type": "string",
                "description": "The Password required for .pfx file.",
                "nullable": true
              },
              "subjectName": {
                "type": "string",
                "description": "The Subject Name for the cert.",
                "nullable": true
              },
              "subject": {
                "type": "string",
                "description": "The Subject value for the cert.",
                "nullable": true
              },
              "issuerName": {
                "type": "string",
                "description": "The Issuer Name for the cert.",
                "nullable": true
              },
              "issuer": {
                "type": "string",
                "description": "The Issuer value for the cert.",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Cert Expiration Date.",
                "format": "date-time"
              },
              "uploadDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Type of the CodeSigning Cert as Symantec Cert.",
                "format": "date-time"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "content": "Binary",
          "status": {
            "@odata.type": "microsoft.graph.certificateStatus"
          },
          "password": "String",
          "subjectName": "String",
          "subject": "String",
          "issuerName": "String",
          "issuer": "String",
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "uploadDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfiguration",
            "type": "object",
            "properties": {
              "targetedMobileApps": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "the associated app."
              },
              "legacyAppConfiguration": {
                "type": "boolean",
                "description": "App configuration creation source check."
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was created.",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "description": "Admin provided description of the Device Configuration.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time"
              },
              "displayName": {
                "type": "string",
                "description": "Admin provided name of the device configuration."
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the device configuration.",
                "format": "int32"
              },
              "groupAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mdmAppConfigGroupAssignment"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
                }
              },
              "deviceStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
                }
              },
              "userStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
                }
              },
              "deviceStatusSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary"
                  }
                ],
                "nullable": true
              },
              "userStatusSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationUserSummary"
                  }
                ],
                "nullable": true
              }
            },
            "description": "An abstract class for Mobile app configuration for enrolled devices."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetedMobileApps": [
            "String"
          ],
          "legacyAppConfiguration": true,
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mdmAppConfigGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
            }
          ],
          "deviceStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary"
          },
          "userStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary"
          }
        }
      },
      "microsoft.graph.sideLoadingKey": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "sideLoadingKey",
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Side Loading Key Value, it is 5x5 value, seperated by hiphens.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Side Loading Key Name displayed to the ITPro Admins.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Side Loading Key description displayed to the ITPro Admins..",
                "nullable": true
              },
              "totalActivation": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Side Loading Key Total Activation displayed to the ITPro Admins.",
                "format": "int32"
              },
              "lastUpdatedDateTime": {
                "type": "string",
                "description": "Side Loading Key Last Updated Date displayed to the ITPro Admins.",
                "nullable": true
              }
            },
            "description": "SideLoadingKey entity is required for Windows 8 and 8.1 devices to intall Line Of Business Apps for a tenant."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "value": "String",
          "displayName": "String",
          "description": "String",
          "totalActivation": "Int32",
          "lastUpdatedDateTime": "String"
        }
      },
      "microsoft.graph.vppToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "vppToken",
            "type": "object",
            "properties": {
              "organizationName": {
                "type": "string",
                "description": "The organization associated with the Apple Volume Purchase Program Token",
                "nullable": true
              },
              "vppTokenAccountType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vppTokenAccountType"
                  }
                ],
                "description": "The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: `business`, `education`."
              },
              "appleId": {
                "type": "string",
                "description": "The apple Id associated with the given Apple Volume Purchase Program Token.",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The expiration date time of the Apple Volume Purchase Program Token.",
                "format": "date-time"
              },
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.",
                "format": "date-time"
              },
              "token": {
                "type": "string",
                "description": "The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modification date time associated with the Apple Volume Purchase Program Token.",
                "format": "date-time"
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vppTokenState"
                  }
                ],
                "description": "Current state of the Apple Volume Purchase Program Token. Possible values are: `unknown`, `valid`, `expired`, `invalid`."
              },
              "tokenActionResults": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.vppTokenActionResult"
                    }
                  ],
                  "nullable": true
                },
                "description": "The collection of statuses of the actions performed on the Apple Volume Purchase Program Token."
              },
              "lastSyncStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vppTokenSyncStatus"
                  }
                ],
                "description": "Current sync status of the last application sync which was triggered using the Apple Volume Purchase Program Token. Possible values are: `none`, `inProgress`, `completed`, `failed`."
              },
              "automaticallyUpdateApps": {
                "type": "boolean",
                "description": "Whether or not apps for the VPP token will be automatically updated."
              },
              "countryOrRegion": {
                "type": "string",
                "description": "Whether or not apps for the VPP token will be automatically updated.",
                "nullable": true
              }
            },
            "description": "You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education. This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune. You can then synchronize your volume purchase information with Intune and track your volume-purchased app use. You can upload multiple Apple VPP Business or Education tokens."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "organizationName": "String",
          "vppTokenAccountType": {
            "@odata.type": "microsoft.graph.vppTokenAccountType"
          },
          "appleId": "String",
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "lastSyncDateTime": "DateTimeOffset (timestamp)",
          "token": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "state": {
            "@odata.type": "microsoft.graph.vppTokenState"
          },
          "tokenActionResults": [
            {
              "@odata.type": "microsoft.graph.vppTokenActionResult"
            }
          ],
          "lastSyncStatus": {
            "@odata.type": "microsoft.graph.vppTokenSyncStatus"
          },
          "automaticallyUpdateApps": true,
          "countryOrRegion": "String"
        }
      },
      "microsoft.graph.managedAppPolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedAppPolicy",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Policy display name."
              },
              "description": {
                "type": "string",
                "description": "The policy's description.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the policy was created.",
                "format": "date-time"
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last time the policy was modified.",
                "format": "date-time"
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            },
            "description": "The ManagedAppPolicy resource represents a base type for platform specific policies."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "String"
        }
      },
      "microsoft.graph.managedAppProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
          },
          {
            "title": "managedAppProtection",
            "type": "object",
            "properties": {
              "periodOfflineBeforeAccessCheck": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "description": "The period after which access is checked when the device is not connected to the internet.",
                "format": "duration"
              },
              "periodOnlineBeforeAccessCheck": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "description": "The period after which access is checked when the device is connected to the internet.",
                "format": "duration"
              },
              "allowedInboundDataTransferSources": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppDataTransferLevel"
                  }
                ],
                "description": "Sources from which data is allowed to be transferred."
              },
              "allowedOutboundDataTransferDestinations": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppDataTransferLevel"
                  }
                ],
                "description": "Destinations to which data is allowed to be transferred."
              },
              "organizationalCredentialsRequired": {
                "type": "boolean",
                "description": "Indicates whether organizational credentials are required for app use."
              },
              "allowedOutboundClipboardSharingLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppClipboardSharingLevel"
                  }
                ],
                "description": "The level to which the clipboard may be shared between apps on the managed device."
              },
              "dataBackupBlocked": {
                "type": "boolean",
                "description": "Indicates whether the backup of a managed app's data is blocked."
              },
              "deviceComplianceRequired": {
                "type": "boolean",
                "description": "Indicates whether device compliance is required."
              },
              "managedBrowserToOpenLinksRequired": {
                "type": "boolean",
                "description": "Indicates whether internet links should be opened in the managed browser app."
              },
              "saveAsBlocked": {
                "type": "boolean",
                "description": "Indicates whether users may use the \"Save As\" menu item to save a copy of protected files."
              },
              "periodOfflineBeforeWipeIsEnforced": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "description": "The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.",
                "format": "duration"
              },
              "pinRequired": {
                "type": "boolean",
                "description": "Indicates whether an app-level pin is required."
              },
              "maximumPinRetries": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Maximum number of incorrect pin retry attempts before the managed app is wiped.",
                "format": "int32"
              },
              "simplePinBlocked": {
                "type": "boolean",
                "description": "Indicates whether simplePin is blocked."
              },
              "minimumPinLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum pin length required for an app-level pin if PinRequired is set to True",
                "format": "int32"
              },
              "pinCharacterSet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppPinCharacterSet"
                  }
                ],
                "description": "Character set which may be used for an app-level pin if PinRequired is set to True."
              },
              "periodBeforePinReset": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "description": "TimePeriod before the all-level pin must be reset if PinRequired is set to True.",
                "format": "duration"
              },
              "allowedDataStorageLocations": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.managedAppDataStorageLocation"
                    }
                  ]
                },
                "description": "Data storage locations where a user may store managed data."
              },
              "contactSyncBlocked": {
                "type": "boolean",
                "description": "Indicates whether contacts can be synced to the user's device."
              },
              "printBlocked": {
                "type": "boolean",
                "description": "Indicates whether printing is allowed from managed apps."
              },
              "fingerprintBlocked": {
                "type": "boolean",
                "description": "Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True."
              },
              "disableAppPinIfDevicePinIsSet": {
                "type": "boolean",
                "description": "Indicates whether use of the app pin is required if the device pin is set."
              },
              "minimumRequiredOsVersion": {
                "type": "string",
                "description": "Versions less than the specified version will block the managed app from accessing company data.",
                "nullable": true
              },
              "minimumWarningOsVersion": {
                "type": "string",
                "description": "Versions less than the specified version will result in warning message on the managed app from accessing company data.",
                "nullable": true
              },
              "minimumRequiredAppVersion": {
                "type": "string",
                "description": "Versions less than the specified version will block the managed app from accessing company data.",
                "nullable": true
              },
              "minimumWarningAppVersion": {
                "type": "string",
                "description": "Versions less than the specified version will result in warning message on the managed app.",
                "nullable": true
              }
            },
            "description": "Policy used to configure detailed management settings for a specified set of apps"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "String",
          "periodOfflineBeforeAccessCheck": "Duration",
          "periodOnlineBeforeAccessCheck": "Duration",
          "allowedInboundDataTransferSources": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "allowedOutboundDataTransferDestinations": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "organizationalCredentialsRequired": true,
          "allowedOutboundClipboardSharingLevel": {
            "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
          },
          "dataBackupBlocked": true,
          "deviceComplianceRequired": true,
          "managedBrowserToOpenLinksRequired": true,
          "saveAsBlocked": true,
          "periodOfflineBeforeWipeIsEnforced": "Duration",
          "pinRequired": true,
          "maximumPinRetries": "Int32",
          "simplePinBlocked": true,
          "minimumPinLength": "Int32",
          "pinCharacterSet": {
            "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
          },
          "periodBeforePinReset": "Duration",
          "allowedDataStorageLocations": [
            {
              "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
            }
          ],
          "contactSyncBlocked": true,
          "printBlocked": true,
          "fingerprintBlocked": true,
          "disableAppPinIfDevicePinIsSet": true,
          "minimumRequiredOsVersion": "String",
          "minimumWarningOsVersion": "String",
          "minimumRequiredAppVersion": "String",
          "minimumWarningAppVersion": "String"
        }
      },
      "microsoft.graph.targetedManagedAppProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppProtection"
          },
          {
            "title": "targetedManagedAppProtection",
            "type": "object",
            "properties": {
              "isAssigned": {
                "type": "boolean",
                "description": "Indicates if the policy is deployed to any inclusion groups or not."
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppPolicyAssignment"
                }
              }
            },
            "description": "Policy used to configure detailed management settings targeted to specific security groups"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "String",
          "periodOfflineBeforeAccessCheck": "Duration",
          "periodOnlineBeforeAccessCheck": "Duration",
          "allowedInboundDataTransferSources": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "allowedOutboundDataTransferDestinations": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "organizationalCredentialsRequired": true,
          "allowedOutboundClipboardSharingLevel": {
            "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
          },
          "dataBackupBlocked": true,
          "deviceComplianceRequired": true,
          "managedBrowserToOpenLinksRequired": true,
          "saveAsBlocked": true,
          "periodOfflineBeforeWipeIsEnforced": "Duration",
          "pinRequired": true,
          "maximumPinRetries": "Int32",
          "simplePinBlocked": true,
          "minimumPinLength": "Int32",
          "pinCharacterSet": {
            "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
          },
          "periodBeforePinReset": "Duration",
          "allowedDataStorageLocations": [
            {
              "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
            }
          ],
          "contactSyncBlocked": true,
          "printBlocked": true,
          "fingerprintBlocked": true,
          "disableAppPinIfDevicePinIsSet": true,
          "minimumRequiredOsVersion": "String",
          "minimumWarningOsVersion": "String",
          "minimumRequiredAppVersion": "String",
          "minimumWarningAppVersion": "String",
          "isAssigned": true,
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ]
        }
      },
      "microsoft.graph.iosManagedAppProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppProtection"
          },
          {
            "title": "iosManagedAppProtection",
            "type": "object",
            "properties": {
              "appDataEncryptionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppDataEncryptionType"
                  }
                ],
                "description": "Type of encryption which should be used for data in a managed app."
              },
              "minimumRequiredSdkVersion": {
                "type": "string",
                "description": "Versions less than the specified version will block the managed app from accessing company data.",
                "nullable": true
              },
              "deployedAppCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of apps to which the current policy is deployed.",
                "format": "int32"
              },
              "apps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedMobileApp"
                }
              },
              "deploymentSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppPolicyDeploymentSummary"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "String",
          "periodOfflineBeforeAccessCheck": "Duration",
          "periodOnlineBeforeAccessCheck": "Duration",
          "allowedInboundDataTransferSources": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "allowedOutboundDataTransferDestinations": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "organizationalCredentialsRequired": true,
          "allowedOutboundClipboardSharingLevel": {
            "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
          },
          "dataBackupBlocked": true,
          "deviceComplianceRequired": true,
          "managedBrowserToOpenLinksRequired": true,
          "saveAsBlocked": true,
          "periodOfflineBeforeWipeIsEnforced": "Duration",
          "pinRequired": true,
          "maximumPinRetries": "Int32",
          "simplePinBlocked": true,
          "minimumPinLength": "Int32",
          "pinCharacterSet": {
            "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
          },
          "periodBeforePinReset": "Duration",
          "allowedDataStorageLocations": [
            {
              "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
            }
          ],
          "contactSyncBlocked": true,
          "printBlocked": true,
          "fingerprintBlocked": true,
          "disableAppPinIfDevicePinIsSet": true,
          "minimumRequiredOsVersion": "String",
          "minimumWarningOsVersion": "String",
          "minimumRequiredAppVersion": "String",
          "minimumWarningAppVersion": "String",
          "isAssigned": true,
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ],
          "appDataEncryptionType": {
            "@odata.type": "microsoft.graph.managedAppDataEncryptionType"
          },
          "minimumRequiredSdkVersion": "String",
          "deployedAppCount": "Int32",
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          }
        }
      },
      "microsoft.graph.androidManagedAppProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppProtection"
          },
          {
            "title": "androidManagedAppProtection",
            "type": "object",
            "properties": {
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether a managed user can take screen captures of managed apps"
              },
              "disableAppEncryptionIfDeviceEncryptionIsEnabled": {
                "type": "boolean",
                "description": "When this setting is enabled, app level encryption is disabled if device level encryption is enabled"
              },
              "encryptAppData": {
                "type": "boolean",
                "description": "Indicates whether application data for managed apps should be encrypted"
              },
              "deployedAppCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of apps to which the current policy is deployed.",
                "format": "int32"
              },
              "minimumRequiredPatchVersion": {
                "type": "string",
                "description": "Define the oldest required Android security patch level a user can have to gain secure access to the app.",
                "nullable": true
              },
              "minimumWarningPatchVersion": {
                "type": "string",
                "description": "Define the oldest recommended Android security patch level a user can have for secure access to the app.",
                "nullable": true
              },
              "apps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedMobileApp"
                }
              },
              "deploymentSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppPolicyDeploymentSummary"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "String",
          "periodOfflineBeforeAccessCheck": "Duration",
          "periodOnlineBeforeAccessCheck": "Duration",
          "allowedInboundDataTransferSources": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "allowedOutboundDataTransferDestinations": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "organizationalCredentialsRequired": true,
          "allowedOutboundClipboardSharingLevel": {
            "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
          },
          "dataBackupBlocked": true,
          "deviceComplianceRequired": true,
          "managedBrowserToOpenLinksRequired": true,
          "saveAsBlocked": true,
          "periodOfflineBeforeWipeIsEnforced": "Duration",
          "pinRequired": true,
          "maximumPinRetries": "Int32",
          "simplePinBlocked": true,
          "minimumPinLength": "Int32",
          "pinCharacterSet": {
            "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
          },
          "periodBeforePinReset": "Duration",
          "allowedDataStorageLocations": [
            {
              "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
            }
          ],
          "contactSyncBlocked": true,
          "printBlocked": true,
          "fingerprintBlocked": true,
          "disableAppPinIfDevicePinIsSet": true,
          "minimumRequiredOsVersion": "String",
          "minimumWarningOsVersion": "String",
          "minimumRequiredAppVersion": "String",
          "minimumWarningAppVersion": "String",
          "isAssigned": true,
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ],
          "screenCaptureBlocked": true,
          "disableAppEncryptionIfDeviceEncryptionIsEnabled": true,
          "encryptAppData": true,
          "deployedAppCount": "Int32",
          "minimumRequiredPatchVersion": "String",
          "minimumWarningPatchVersion": "String",
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          }
        }
      },
      "microsoft.graph.defaultManagedAppProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppProtection"
          },
          {
            "title": "defaultManagedAppProtection",
            "type": "object",
            "properties": {
              "appDataEncryptionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppDataEncryptionType"
                  }
                ],
                "description": "Type of encryption which should be used for data in a managed app. (iOS Only)"
              },
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether screen capture is blocked."
              },
              "encryptAppData": {
                "type": "boolean",
                "description": "Indicates whether managed-app data should be encrypted. (Android only)"
              },
              "disableAppEncryptionIfDeviceEncryptionIsEnabled": {
                "type": "boolean",
                "description": "When this setting is enabled, app level encryption is disabled if device level encryption is enabled"
              },
              "minimumRequiredSdkVersion": {
                "type": "string",
                "description": "Versions less than the specified version will block the managed app from accessing company data.",
                "nullable": true
              },
              "customSettings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.keyValuePair"
                },
                "description": "A set of string key and string value pairs to be sent to the affected users, unalterned by this service"
              },
              "deployedAppCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of apps to which the current policy is deployed.",
                "format": "int32"
              },
              "minimumRequiredPatchVersion": {
                "type": "string",
                "description": "Define the oldest required Android security patch level a user can have to gain secure access to the app.",
                "nullable": true
              },
              "minimumWarningPatchVersion": {
                "type": "string",
                "description": "Define the oldest recommended Android security patch level a user can have for secure access to the app.",
                "nullable": true
              },
              "apps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedMobileApp"
                }
              },
              "deploymentSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppPolicyDeploymentSummary"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Policy used to configure detailed management settings for a specified set of apps for all users not targeted by a TargetedManagedAppProtection Policy"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "String",
          "periodOfflineBeforeAccessCheck": "Duration",
          "periodOnlineBeforeAccessCheck": "Duration",
          "allowedInboundDataTransferSources": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "allowedOutboundDataTransferDestinations": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "organizationalCredentialsRequired": true,
          "allowedOutboundClipboardSharingLevel": {
            "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
          },
          "dataBackupBlocked": true,
          "deviceComplianceRequired": true,
          "managedBrowserToOpenLinksRequired": true,
          "saveAsBlocked": true,
          "periodOfflineBeforeWipeIsEnforced": "Duration",
          "pinRequired": true,
          "maximumPinRetries": "Int32",
          "simplePinBlocked": true,
          "minimumPinLength": "Int32",
          "pinCharacterSet": {
            "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
          },
          "periodBeforePinReset": "Duration",
          "allowedDataStorageLocations": [
            {
              "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
            }
          ],
          "contactSyncBlocked": true,
          "printBlocked": true,
          "fingerprintBlocked": true,
          "disableAppPinIfDevicePinIsSet": true,
          "minimumRequiredOsVersion": "String",
          "minimumWarningOsVersion": "String",
          "minimumRequiredAppVersion": "String",
          "minimumWarningAppVersion": "String",
          "appDataEncryptionType": {
            "@odata.type": "microsoft.graph.managedAppDataEncryptionType"
          },
          "screenCaptureBlocked": true,
          "encryptAppData": true,
          "disableAppEncryptionIfDeviceEncryptionIsEnabled": true,
          "minimumRequiredSdkVersion": "String",
          "customSettings": [
            {
              "@odata.type": "microsoft.graph.keyValuePair"
            }
          ],
          "deployedAppCount": "Int32",
          "minimumRequiredPatchVersion": "String",
          "minimumWarningPatchVersion": "String",
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          }
        }
      },
      "microsoft.graph.managedAppConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
          },
          {
            "title": "managedAppConfiguration",
            "type": "object",
            "properties": {
              "customSettings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.keyValuePair"
                },
                "description": "A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service"
              }
            },
            "description": "Configuration used to deliver a set of custom settings as-is to apps for users to whom the configuration is scoped"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "String",
          "customSettings": [
            {
              "@odata.type": "microsoft.graph.keyValuePair"
            }
          ]
        }
      },
      "microsoft.graph.targetedManagedAppConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppConfiguration"
          },
          {
            "title": "targetedManagedAppConfiguration",
            "type": "object",
            "properties": {
              "deployedAppCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of apps to which the current policy is deployed.",
                "format": "int32"
              },
              "isAssigned": {
                "type": "boolean",
                "description": "Indicates if the policy is deployed to any inclusion groups or not."
              },
              "apps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedMobileApp"
                }
              },
              "deploymentSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppPolicyDeploymentSummary"
                  }
                ],
                "nullable": true
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppPolicyAssignment"
                }
              }
            },
            "description": "Configuration used to deliver a set of custom settings as-is to all users in the targeted security group"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "String",
          "customSettings": [
            {
              "@odata.type": "microsoft.graph.keyValuePair"
            }
          ],
          "deployedAppCount": "Int32",
          "isAssigned": true,
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          },
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ]
        }
      },
      "microsoft.graph.windowsInformationProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
          },
          {
            "title": "windowsInformationProtection",
            "type": "object",
            "properties": {
              "enforcementLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionEnforcementLevel"
                  }
                ],
                "description": "WIP enforcement level.See the Enum definition for supported values"
              },
              "enterpriseDomain": {
                "type": "string",
                "description": "Primary enterprise domain",
                "nullable": true
              },
              "enterpriseProtectedDomainNames": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of enterprise domains to be protected"
              },
              "protectionUnderLockConfigRequired": {
                "type": "boolean",
                "description": "Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured"
              },
              "dataRecoveryCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
                  }
                ],
                "description": "Specifies a recovery certificate that can be used for data recovery of encrypted files. This is the same as the data recovery agent(DRA) certificate for encrypting file system(EFS)",
                "nullable": true
              },
              "revokeOnUnenrollDisabled": {
                "type": "boolean",
                "description": "This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently."
              },
              "rightsManagementServicesTemplateId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access",
                "format": "uuid",
                "nullable": true
              },
              "azureRightsManagementServicesAllowed": {
                "type": "boolean",
                "description": "Specifies whether to allow Azure RMS encryption for WIP"
              },
              "iconsVisible": {
                "type": "boolean",
                "description": "Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app"
              },
              "protectedApps": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionApp"
                    }
                  ],
                  "nullable": true
                },
                "description": "Protected applications can access enterprise data and the data handled by those applications are protected with encryption"
              },
              "exemptApps": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionApp"
                    }
                  ],
                  "nullable": true
                },
                "description": "Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data."
              },
              "enterpriseNetworkDomainNames": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to"
              },
              "enterpriseProxiedDomains": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy"
              },
              "enterpriseIPRanges": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionIPRangeCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to"
              },
              "enterpriseIPRangesAreAuthoritative": {
                "type": "boolean",
                "description": "Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false"
              },
              "enterpriseProxyServers": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "This is a list of proxy servers. Any server not on this list is considered non-enterprise"
              },
              "enterpriseInternalProxyServers": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "This is the comma-separated list of internal proxy servers. For example, \"157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59\". These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies"
              },
              "enterpriseProxyServersAreAuthoritative": {
                "type": "boolean",
                "description": "Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false"
              },
              "neutralDomainResources": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of domain names that can used for work or personal resource"
              },
              "indexingEncryptedStoresOrItemsBlocked": {
                "type": "boolean",
                "description": "This switch is for the Windows Search Indexer, to allow or disallow indexing of items"
              },
              "smbAutoEncryptedFileExtensions": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary"
              },
              "isAssigned": {
                "type": "boolean",
                "description": "Indicates if the policy is deployed to any inclusion groups or not."
              },
              "protectedAppLockerFiles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionAppLockerFile"
                }
              },
              "exemptAppLockerFiles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionAppLockerFile"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppPolicyAssignment"
                }
              }
            },
            "description": "Policy for Windows information protection to configure detailed management settings"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "String",
          "enforcementLevel": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionEnforcementLevel"
          },
          "enterpriseDomain": "String",
          "enterpriseProtectedDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "protectionUnderLockConfigRequired": true,
          "dataRecoveryCertificate": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
          },
          "revokeOnUnenrollDisabled": true,
          "rightsManagementServicesTemplateId": "Guid",
          "azureRightsManagementServicesAllowed": true,
          "iconsVisible": true,
          "protectedApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "exemptApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "enterpriseNetworkDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxiedDomains": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
            }
          ],
          "enterpriseIPRanges": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionIPRangeCollection"
            }
          ],
          "enterpriseIPRangesAreAuthoritative": true,
          "enterpriseProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseInternalProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxyServersAreAuthoritative": true,
          "neutralDomainResources": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "indexingEncryptedStoresOrItemsBlocked": true,
          "smbAutoEncryptedFileExtensions": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "isAssigned": true,
          "protectedAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "exemptAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ]
        }
      },
      "microsoft.graph.mdmWindowsInformationProtectionPolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtection"
          },
          {
            "title": "mdmWindowsInformationProtectionPolicy",
            "type": "object",
            "description": "Policy for Windows information protection with MDM"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "String",
          "enforcementLevel": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionEnforcementLevel"
          },
          "enterpriseDomain": "String",
          "enterpriseProtectedDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "protectionUnderLockConfigRequired": true,
          "dataRecoveryCertificate": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
          },
          "revokeOnUnenrollDisabled": true,
          "rightsManagementServicesTemplateId": "Guid",
          "azureRightsManagementServicesAllowed": true,
          "iconsVisible": true,
          "protectedApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "exemptApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "enterpriseNetworkDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxiedDomains": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
            }
          ],
          "enterpriseIPRanges": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionIPRangeCollection"
            }
          ],
          "enterpriseIPRangesAreAuthoritative": true,
          "enterpriseProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseInternalProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxyServersAreAuthoritative": true,
          "neutralDomainResources": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "indexingEncryptedStoresOrItemsBlocked": true,
          "smbAutoEncryptedFileExtensions": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "isAssigned": true,
          "protectedAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "exemptAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ]
        }
      },
      "microsoft.graph.windowsInformationProtectionPolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtection"
          },
          {
            "title": "windowsInformationProtectionPolicy",
            "type": "object",
            "properties": {
              "revokeOnMdmHandoffDisabled": {
                "type": "boolean",
                "description": "New property in RS2, pending documentation"
              },
              "mdmEnrollmentUrl": {
                "type": "string",
                "description": "Enrollment url for the MDM",
                "nullable": true
              },
              "windowsHelloForBusinessBlocked": {
                "type": "boolean",
                "description": "Boolean value that sets Windows Hello for Business as a method for signing into Windows."
              },
              "pinMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.",
                "format": "int32"
              },
              "pinUppercaseLetters": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
                  }
                ],
                "description": "Integer value that configures the use of uppercase letters in the Windows Hello for Business PIN. Default is NotAllow."
              },
              "pinLowercaseLetters": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
                  }
                ],
                "description": "Integer value that configures the use of lowercase letters in the Windows Hello for Business PIN. Default is NotAllow."
              },
              "pinSpecialCharacters": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
                  }
                ],
                "description": "Integer value that configures the use of special characters in the Windows Hello for Business PIN. Valid special characters for Windows Hello for Business PIN gestures include: ! \" # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \\ ] ^ _ ` { | } ~. Default is NotAllow."
              },
              "pinExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.",
                "format": "int32"
              },
              "numberOfPastPinsRemembered": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.",
                "format": "int32"
              },
              "passwordMaximumAttemptCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.",
                "format": "int32"
              },
              "minutesOfInactivityBeforeDeviceLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.",
                "format": "int32"
              }
            },
            "description": "Policy for Windows information protection without MDM"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "String",
          "enforcementLevel": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionEnforcementLevel"
          },
          "enterpriseDomain": "String",
          "enterpriseProtectedDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "protectionUnderLockConfigRequired": true,
          "dataRecoveryCertificate": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
          },
          "revokeOnUnenrollDisabled": true,
          "rightsManagementServicesTemplateId": "Guid",
          "azureRightsManagementServicesAllowed": true,
          "iconsVisible": true,
          "protectedApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "exemptApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "enterpriseNetworkDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxiedDomains": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
            }
          ],
          "enterpriseIPRanges": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionIPRangeCollection"
            }
          ],
          "enterpriseIPRangesAreAuthoritative": true,
          "enterpriseProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseInternalProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxyServersAreAuthoritative": true,
          "neutralDomainResources": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "indexingEncryptedStoresOrItemsBlocked": true,
          "smbAutoEncryptedFileExtensions": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "isAssigned": true,
          "protectedAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "exemptAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ],
          "revokeOnMdmHandoffDisabled": true,
          "mdmEnrollmentUrl": "String",
          "windowsHelloForBusinessBlocked": true,
          "pinMinimumLength": "Int32",
          "pinUppercaseLetters": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
          },
          "pinLowercaseLetters": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
          },
          "pinSpecialCharacters": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
          },
          "pinExpirationDays": "Int32",
          "numberOfPastPinsRemembered": "Int32",
          "passwordMaximumAttemptCount": "Int32",
          "minutesOfInactivityBeforeDeviceLock": "Int32"
        }
      },
      "microsoft.graph.managedAppStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedAppStatus",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Friendly name of the status report.",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            },
            "description": "Represents app protection and configuration status for the organization."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "version": "String"
        }
      },
      "microsoft.graph.managedEBook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedEBook",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Name of the eBook."
              },
              "description": {
                "type": "string",
                "description": "Description.",
                "nullable": true
              },
              "publisher": {
                "type": "string",
                "description": "Publisher.",
                "nullable": true
              },
              "publishedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when the eBook was published.",
                "format": "date-time"
              },
              "largeCover": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mimeContent"
                  }
                ],
                "description": "Book cover.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when the eBook file was created.",
                "format": "date-time"
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when teh eBook was last modified.",
                "format": "date-time"
              },
              "informationUrl": {
                "type": "string",
                "description": "The more information Url.",
                "nullable": true
              },
              "privacyInformationUrl": {
                "type": "string",
                "description": "The privacy statement Url.",
                "nullable": true
              },
              "groupAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.eBookGroupAssignment"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedEBookAssignment"
                }
              },
              "installSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.eBookInstallSummary"
                  }
                ],
                "nullable": true
              },
              "deviceStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceInstallState"
                }
              },
              "userStateSummary": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.userInstallStateSummary"
                }
              }
            },
            "description": "An abstract class containing the base properties for Managed eBook."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "publishedDateTime": "DateTimeOffset (timestamp)",
          "largeCover": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "informationUrl": "String",
          "privacyInformationUrl": "String",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.eBookGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.managedEBookAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.eBookInstallSummary"
          },
          "deviceStates": [
            {
              "@odata.type": "microsoft.graph.deviceInstallState"
            }
          ],
          "userStateSummary": [
            {
              "@odata.type": "microsoft.graph.userInstallStateSummary"
            }
          ]
        }
      },
      "microsoft.graph.mobileAppGroupAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppGroupAssignment",
            "type": "object",
            "properties": {
              "targetGroupId": {
                "type": "string",
                "description": "The Id of the AAD group we are targeting the mobile app to.",
                "nullable": true
              },
              "vpnConfigurationId": {
                "type": "string",
                "description": "The Id of the Vpn Profile to apply for this app.",
                "nullable": true
              },
              "installIntent": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appInstallIntent"
                  }
                ],
                "description": "The install intent defined by the admin."
              },
              "app": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileApp"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Contains properties used to assign a mobile app to a group."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetGroupId": "String",
          "vpnConfigurationId": "String",
          "installIntent": {
            "@odata.type": "microsoft.graph.appInstallIntent"
          },
          "app": {
            "@odata.type": "microsoft.graph.mobileApp"
          }
        }
      },
      "microsoft.graph.mobileAppAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppAssignment",
            "type": "object",
            "properties": {
              "intent": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.installIntent"
                  }
                ],
                "description": "The install intent defined by the admin."
              },
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "The target group assignment defined by the admin.",
                "nullable": true
              },
              "settings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileAppAssignmentSettings"
                  }
                ],
                "description": "The settings for target assignment defined by the admin.",
                "nullable": true
              }
            },
            "description": "A class containing the properties used for Group Assignment of a Mobile App."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "intent": {
            "@odata.type": "microsoft.graph.installIntent"
          },
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          },
          "settings": {
            "@odata.type": "microsoft.graph.mobileAppAssignmentSettings"
          }
        }
      },
      "microsoft.graph.mobileAppInstallSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppInstallSummary",
            "type": "object",
            "properties": {
              "installedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Devices that have successfully installed this app.",
                "format": "int32"
              },
              "failedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Devices that have failed to install this app.",
                "format": "int32"
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Devices that are not applicable for this app.",
                "format": "int32"
              },
              "notInstalledDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Devices that does not have this app installed.",
                "format": "int32"
              },
              "pendingInstallDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Devices that have been notified to install this app.",
                "format": "int32"
              },
              "installedUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Users whose devices have all succeeded to install this app.",
                "format": "int32"
              },
              "failedUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Users that have 1 or more device that failed to install this app.",
                "format": "int32"
              },
              "notApplicableUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Users whose devices were all not applicable for this app.",
                "format": "int32"
              },
              "notInstalledUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Users that have 1 or more devices that did not install this app.",
                "format": "int32"
              },
              "pendingInstallUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Users that have 1 or more device that have been notified to install this app and have 0 devices with failures.",
                "format": "int32"
              }
            },
            "description": "Contains properties for the installation summary of a mobile app."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "installedDeviceCount": "Int32",
          "failedDeviceCount": "Int32",
          "notApplicableDeviceCount": "Int32",
          "notInstalledDeviceCount": "Int32",
          "pendingInstallDeviceCount": "Int32",
          "installedUserCount": "Int32",
          "failedUserCount": "Int32",
          "notApplicableUserCount": "Int32",
          "notInstalledUserCount": "Int32",
          "pendingInstallUserCount": "Int32"
        }
      },
      "microsoft.graph.mobileAppInstallStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppInstallStatus",
            "type": "object",
            "properties": {
              "deviceName": {
                "type": "string",
                "description": "Device name",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "description": "Device ID",
                "nullable": true
              },
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last sync date time",
                "format": "date-time"
              },
              "mobileAppInstallStatusValue": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.resultantAppState"
                  }
                ],
                "description": "The install state of the app."
              },
              "errorCode": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The error code for install failures.",
                "format": "int32"
              },
              "osVersion": {
                "type": "string",
                "description": "OS Version",
                "nullable": true
              },
              "osDescription": {
                "type": "string",
                "description": "OS Description",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "Device User Name",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "User Principal Name",
                "nullable": true
              },
              "displayVersion": {
                "type": "string",
                "description": "Human readable version of the application",
                "nullable": true
              },
              "app": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileApp"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Contains properties for the installation state of a mobile app for a device."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deviceName": "String",
          "deviceId": "String",
          "lastSyncDateTime": "DateTimeOffset (timestamp)",
          "mobileAppInstallStatusValue": {
            "@odata.type": "microsoft.graph.resultantAppState"
          },
          "errorCode": "Int32",
          "osVersion": "String",
          "osDescription": "String",
          "userName": "String",
          "userPrincipalName": "String",
          "displayVersion": "String",
          "app": {
            "@odata.type": "microsoft.graph.mobileApp"
          }
        }
      },
      "microsoft.graph.userAppInstallStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "userAppInstallStatus",
            "type": "object",
            "properties": {
              "userName": {
                "type": "string",
                "description": "User name.",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "User Principal Name.",
                "nullable": true
              },
              "installedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Installed Device Count.",
                "format": "int32"
              },
              "failedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Failed Device Count.",
                "format": "int32"
              },
              "notInstalledDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not installed device count.",
                "format": "int32"
              },
              "app": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileApp"
                  }
                ],
                "nullable": true
              },
              "deviceStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppInstallStatus"
                }
              }
            },
            "description": "Contains properties for the installation status for a user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userName": "String",
          "userPrincipalName": "String",
          "installedDeviceCount": "Int32",
          "failedDeviceCount": "Int32",
          "notInstalledDeviceCount": "Int32",
          "app": {
            "@odata.type": "microsoft.graph.mobileApp"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ]
        }
      },
      "microsoft.graph.deviceAndAppManagementAssignmentTarget": {
        "title": "deviceAndAppManagementAssignmentTarget",
        "type": "object"
      },
      "microsoft.graph.mobileAppAssignmentSettings": {
        "title": "mobileAppAssignmentSettings",
        "type": "object"
      },
      "microsoft.graph.mobileAppContentFile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppContentFile",
            "type": "object",
            "properties": {
              "azureStorageUri": {
                "type": "string",
                "description": "The Azure Storage URI.",
                "nullable": true
              },
              "isCommitted": {
                "type": "boolean",
                "description": "A value indicating whether the file is committed."
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The time the file was created.",
                "format": "date-time"
              },
              "name": {
                "type": "string",
                "description": "the file name.",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "description": "The size of the file prior to encryption.",
                "format": "int64"
              },
              "sizeEncrypted": {
                "type": "integer",
                "description": "The size of the file after encryption.",
                "format": "int64"
              },
              "azureStorageUriExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The time the Azure storage Uri expires.",
                "format": "date-time",
                "nullable": true
              },
              "manifest": {
                "type": "string",
                "description": "The manifest information.",
                "format": "base64url",
                "nullable": true
              },
              "uploadState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileAppContentFileUploadState"
                  }
                ],
                "description": "The state of the current upload request."
              }
            },
            "description": "Contains properties for a single installer file that is associated with a given mobileAppContent version."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "azureStorageUri": "String",
          "isCommitted": true,
          "createdDateTime": "DateTimeOffset (timestamp)",
          "name": "String",
          "size": "Int64",
          "sizeEncrypted": "Int64",
          "azureStorageUriExpirationDateTime": "DateTimeOffset (timestamp)",
          "manifest": "Binary",
          "uploadState": {
            "@odata.type": "microsoft.graph.mobileAppContentFileUploadState"
          }
        }
      },
      "microsoft.graph.fileEncryptionInfo": {
        "title": "fileEncryptionInfo",
        "type": "object",
        "properties": {
          "encryptionKey": {
            "type": "string",
            "description": "The key used to encrypt the file content.",
            "format": "base64url",
            "nullable": true
          },
          "initializationVector": {
            "type": "string",
            "description": "The initialization vector used for the encryption algorithm.",
            "format": "base64url",
            "nullable": true
          },
          "mac": {
            "type": "string",
            "description": "The hash of the encrypted file content + IV (content hash).",
            "format": "base64url",
            "nullable": true
          },
          "macKey": {
            "type": "string",
            "description": "The key used to get mac.",
            "format": "base64url",
            "nullable": true
          },
          "profileIdentifier": {
            "type": "string",
            "description": "The the profile identifier.",
            "nullable": true
          },
          "fileDigest": {
            "type": "string",
            "description": "The file digest prior to encryption.",
            "format": "base64url",
            "nullable": true
          },
          "fileDigestAlgorithm": {
            "type": "string",
            "description": "The file digest algorithm.",
            "nullable": true
          }
        },
        "example": {
          "encryptionKey": "Binary",
          "initializationVector": "Binary",
          "mac": "Binary",
          "macKey": "Binary",
          "profileIdentifier": "String",
          "fileDigest": "Binary",
          "fileDigestAlgorithm": "String"
        }
      },
      "microsoft.graph.mobileAppProvisioningConfigGroupAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppProvisioningConfigGroupAssignment",
            "type": "object",
            "properties": {
              "targetGroupId": {
                "type": "string",
                "description": "The ID of the AAD group in which the app provisioning configuration is being targeted.",
                "nullable": true
              }
            },
            "description": "Contains the properties used to assign an App provisioning configuration to a group."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetGroupId": "String"
        }
      },
      "microsoft.graph.iosLobAppProvisioningConfigurationAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "iosLobAppProvisioningConfigurationAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "The target group assignment defined by the admin.",
                "nullable": true
              }
            },
            "description": "A class containing the properties used for Group Assignment of an iOS LOB App Provisioning and Configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfigurationDeviceStatus",
            "type": "object",
            "properties": {
              "deviceDisplayName": {
                "type": "string",
                "description": "Device name of the DevicePolicyStatus.",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "The User Name that is being reported",
                "nullable": true
              },
              "deviceModel": {
                "type": "string",
                "description": "The device model that is being reported",
                "nullable": true
              },
              "platform": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Platform of the device that is being reported",
                "format": "int32"
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time"
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report."
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time"
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            },
            "description": "Contains properties, inherited properties and actions for an MDM mobile app configuration status for a device."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deviceDisplayName": "String",
          "userName": "String",
          "deviceModel": "String",
          "platform": "Int32",
          "complianceGracePeriodExpirationDateTime": "DateTimeOffset (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "DateTimeOffset (timestamp)",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfigurationUserStatus",
            "type": "object",
            "properties": {
              "userDisplayName": {
                "type": "string",
                "description": "User name of the DevicePolicyStatus.",
                "nullable": true
              },
              "devicesCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Devices count for that user.",
                "format": "int32"
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report."
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time"
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            },
            "description": "Contains properties, inherited properties and actions for an MDM mobile app configuration status for a user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "devicesCount": "Int32",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "DateTimeOffset (timestamp)",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.mdmAppConfigGroupAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mdmAppConfigGroupAssignment",
            "type": "object",
            "properties": {
              "appConfiguration": {
                "type": "string",
                "description": "The navigation link to the mdm app Configuration being targeted.",
                "nullable": true
              },
              "targetGroupId": {
                "type": "string",
                "description": "The Id of the AAD group we are targeting the mdm app configuration to.",
                "nullable": true
              }
            },
            "description": "Contains the properties used to assign an MDM app configuration to a group."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "appConfiguration": "String",
          "targetGroupId": "String"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfigurationAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "Assignment target that the T&C policy is assigned to.",
                "nullable": true
              }
            },
            "description": "Contains the properties used to assign an MDM app configuration to a group."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfigurationDeviceSummary",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending devices",
                "format": "int32"
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32"
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded devices",
                "format": "int32"
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32"
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed devices",
                "format": "int32"
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time"
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32"
              }
            },
            "description": "Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "pendingCount": "Int32",
          "notApplicableCount": "Int32",
          "successCount": "Int32",
          "errorCount": "Int32",
          "failedCount": "Int32",
          "lastUpdateDateTime": "DateTimeOffset (timestamp)",
          "configurationVersion": "Int32"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfigurationUserSummary",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending Users",
                "format": "int32"
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32"
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded Users",
                "format": "int32"
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error Users",
                "format": "int32"
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed Users",
                "format": "int32"
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time"
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32"
              }
            },
            "description": "Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "pendingCount": "Int32",
          "notApplicableCount": "Int32",
          "successCount": "Int32",
          "errorCount": "Int32",
          "failedCount": "Int32",
          "lastUpdateDateTime": "DateTimeOffset (timestamp)",
          "configurationVersion": "Int32"
        }
      },
      "microsoft.graph.mobileAppVppGroupAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileAppGroupAssignment"
          },
          {
            "title": "mobileAppVppGroupAssignment",
            "type": "object",
            "properties": {
              "useDeviceLicensing": {
                "type": "boolean",
                "description": "Whether or not to use device licensing."
              }
            },
            "description": "Contains properties used to assign a Vpp mobile app to a group."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetGroupId": "String",
          "vpnConfigurationId": "String",
          "installIntent": {
            "@odata.type": "microsoft.graph.appInstallIntent"
          },
          "app": {
            "@odata.type": "microsoft.graph.mobileApp"
          },
          "useDeviceLicensing": true
        }
      },
      "microsoft.graph.allLicensedUsersAssignmentTarget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
          },
          {
            "title": "allLicensedUsersAssignmentTarget",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.groupAssignmentTarget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
          },
          {
            "title": "groupAssignmentTarget",
            "type": "object",
            "properties": {
              "groupId": {
                "type": "string",
                "description": "The group Id that is the target of the assignment.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "groupId": "String"
        }
      },
      "microsoft.graph.exclusionGroupAssignmentTarget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.groupAssignmentTarget"
          },
          {
            "title": "exclusionGroupAssignmentTarget",
            "type": "object"
          }
        ],
        "example": {
          "groupId": "String"
        }
      },
      "microsoft.graph.allDevicesAssignmentTarget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
          },
          {
            "title": "allDevicesAssignmentTarget",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.iosLobAppAssignmentSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileAppAssignmentSettings"
          },
          {
            "title": "iosLobAppAssignmentSettings",
            "type": "object",
            "properties": {
              "vpnConfigurationId": {
                "type": "string",
                "description": "The VPN Configuration Id to apply for this app.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "vpnConfigurationId": "String"
        }
      },
      "microsoft.graph.iosStoreAppAssignmentSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileAppAssignmentSettings"
          },
          {
            "title": "iosStoreAppAssignmentSettings",
            "type": "object",
            "properties": {
              "vpnConfigurationId": {
                "type": "string",
                "description": "The VPN Configuration Id to apply for this app.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "vpnConfigurationId": "String"
        }
      },
      "microsoft.graph.iosVppAppAssignmentSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileAppAssignmentSettings"
          },
          {
            "title": "iosVppAppAssignmentSettings",
            "type": "object",
            "properties": {
              "useDeviceLicensing": {
                "type": "boolean",
                "description": "Whether or not to use device licensing."
              },
              "vpnConfigurationId": {
                "type": "string",
                "description": "The VPN Configuration Id to apply for this app.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "useDeviceLicensing": true,
          "vpnConfigurationId": "String"
        }
      },
      "microsoft.graph.microsoftStoreForBusinessAppAssignmentSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileAppAssignmentSettings"
          },
          {
            "title": "microsoftStoreForBusinessAppAssignmentSettings",
            "type": "object",
            "properties": {
              "useDeviceContext": {
                "type": "boolean",
                "description": "Whether or not to use device execution context for Microsoft Store for Business mobile app."
              }
            }
          }
        ],
        "example": {
          "useDeviceContext": true
        }
      },
      "microsoft.graph.macOSOfficeSuiteApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "macOSOfficeSuiteApp",
            "type": "object",
            "description": "Contains properties and inherited properties for the MacOS Office Suite App."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ]
        }
      },
      "microsoft.graph.officeSuiteApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "officeSuiteApp",
            "type": "object",
            "properties": {
              "autoAcceptEula": {
                "type": "boolean",
                "description": "The value to accept the EULA automatically on the enduser's device."
              },
              "productIds": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.officeProductId"
                    }
                  ]
                },
                "description": "The Product Ids that represent the Office365 Suite SKU."
              },
              "excludedApps": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.excludedApps"
                  }
                ],
                "description": "The property to represent the Apps which are excluded from the selected Office365 Product Id.",
                "nullable": true
              },
              "useSharedComputerActivation": {
                "type": "boolean",
                "description": "The property to represent that whether the shared computer activation is used not for Office365 App Suite."
              },
              "updateChannel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.officeUpdateChannel"
                  }
                ],
                "description": "The property to represent the Office365 Update Channel."
              },
              "officePlatformArchitecture": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsArchitecture"
                  }
                ],
                "description": "The property to represent the Office365 App Suite version."
              },
              "localesToInstall": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The property to represent the locales which are installed when the Apps from Office365 is installed. It uses standard RFC 6033. Ref: https://technet.microsoft.com/en-us/library/cc179219(v=office.16).aspx"
              },
              "installProgressDisplayLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.officeSuiteInstallProgressDisplayLevel"
                  }
                ],
                "description": "to specify the level of display for the Installation Progress Setup UI on the Device."
              }
            },
            "description": "Contains properties and inherited properties for the Office365 Suite App."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "autoAcceptEula": true,
          "productIds": [
            {
              "@odata.type": "microsoft.graph.officeProductId"
            }
          ],
          "excludedApps": {
            "@odata.type": "microsoft.graph.excludedApps"
          },
          "useSharedComputerActivation": true,
          "updateChannel": {
            "@odata.type": "microsoft.graph.officeUpdateChannel"
          },
          "officePlatformArchitecture": {
            "@odata.type": "microsoft.graph.windowsArchitecture"
          },
          "localesToInstall": [
            "String"
          ],
          "installProgressDisplayLevel": {
            "@odata.type": "microsoft.graph.officeSuiteInstallProgressDisplayLevel"
          }
        }
      },
      "microsoft.graph.excludedApps": {
        "title": "excludedApps",
        "type": "object",
        "properties": {
          "access": {
            "type": "boolean",
            "description": "The value for if MS Office Access should be excluded or not."
          },
          "excel": {
            "type": "boolean",
            "description": "The value for if MS Office Excel should be excluded or not."
          },
          "groove": {
            "type": "boolean",
            "description": "The value for if MS Office OneDrive for Business - Groove should be excluded or not."
          },
          "infoPath": {
            "type": "boolean",
            "description": "The value for if MS Office InfoPath should be excluded or not."
          },
          "lync": {
            "type": "boolean",
            "description": "The value for if MS Office Skype for Business - Lync should be excluded or not."
          },
          "oneDrive": {
            "type": "boolean",
            "description": "The value for if MS Office OneDrive should be excluded or not."
          },
          "oneNote": {
            "type": "boolean",
            "description": "The value for if MS Office OneNote should be excluded or not."
          },
          "outlook": {
            "type": "boolean",
            "description": "The value for if MS Office Outlook should be excluded or not."
          },
          "powerPoint": {
            "type": "boolean",
            "description": "The value for if MS Office PowerPoint should be excluded or not."
          },
          "publisher": {
            "type": "boolean",
            "description": "The value for if MS Office Publisher should be excluded or not."
          },
          "sharePointDesigner": {
            "type": "boolean",
            "description": "The value for if MS Office SharePointDesigner should be excluded or not."
          },
          "visio": {
            "type": "boolean",
            "description": "The value for if MS Office Visio should be excluded or not."
          },
          "word": {
            "type": "boolean",
            "description": "The value for if MS Office Word should be excluded or not."
          }
        },
        "example": {
          "access": true,
          "excel": true,
          "groove": true,
          "infoPath": true,
          "lync": true,
          "oneDrive": true,
          "oneNote": true,
          "outlook": true,
          "powerPoint": true,
          "publisher": true,
          "sharePointDesigner": true,
          "visio": true,
          "word": true
        }
      },
      "microsoft.graph.managedApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "managedApp",
            "type": "object",
            "properties": {
              "appAvailability": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppAvailability"
                  }
                ],
                "description": "The Application's availability."
              },
              "version": {
                "type": "string",
                "description": "The Application's version.",
                "nullable": true
              }
            },
            "description": "Abstract class that contains properties and inherited properties for apps that you can manage with an Intune app protection policy."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "String"
        }
      },
      "microsoft.graph.managedAndroidStoreApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedApp"
          },
          {
            "title": "managedAndroidStoreApp",
            "type": "object",
            "properties": {
              "packageId": {
                "type": "string",
                "description": "The app's package ID.",
                "nullable": true
              },
              "appStoreUrl": {
                "type": "string",
                "description": "The Android AppStoreUrl."
              },
              "minimumSupportedOperatingSystem": {
                "$ref": "#/components/schemas/microsoft.graph.androidMinimumOperatingSystem"
              }
            },
            "description": "Contains properties and inherited properties for Android store apps that you can manage with an Intune app protection policy."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "String",
          "packageId": "String",
          "appStoreUrl": "String",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.androidMinimumOperatingSystem": {
        "title": "androidMinimumOperatingSystem",
        "type": "object",
        "properties": {
          "v4_0": {
            "type": "boolean",
            "description": "Version 4.0 or later."
          },
          "v4_0_3": {
            "type": "boolean",
            "description": "Version 4.0.3 or later."
          },
          "v4_1": {
            "type": "boolean",
            "description": "Version 4.1 or later."
          },
          "v4_2": {
            "type": "boolean",
            "description": "Version 4.2 or later."
          },
          "v4_3": {
            "type": "boolean",
            "description": "Version 4.3 or later."
          },
          "v4_4": {
            "type": "boolean",
            "description": "Version 4.4 or later."
          },
          "v5_0": {
            "type": "boolean",
            "description": "Version 5.0 or later."
          },
          "v5_1": {
            "type": "boolean",
            "description": "Version 5.1 or later."
          }
        },
        "example": {
          "v4_0": true,
          "v4_0_3": true,
          "v4_1": true,
          "v4_2": true,
          "v4_3": true,
          "v4_4": true,
          "v5_0": true,
          "v5_1": true
        }
      },
      "microsoft.graph.managedIOSStoreApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedApp"
          },
          {
            "title": "managedIOSStoreApp",
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string",
                "description": "The app's Bundle ID.",
                "nullable": true
              },
              "appStoreUrl": {
                "type": "string",
                "description": "The Apple AppStoreUrl."
              },
              "applicableDeviceType": {
                "$ref": "#/components/schemas/microsoft.graph.iosDeviceType"
              },
              "minimumSupportedOperatingSystem": {
                "$ref": "#/components/schemas/microsoft.graph.iosMinimumOperatingSystem"
              }
            },
            "description": "Contains properties and inherited properties for an iOS store app that you can manage with an Intune app protection policy."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "String",
          "bundleId": "String",
          "appStoreUrl": "String",
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.iosDeviceType": {
        "title": "iosDeviceType",
        "type": "object",
        "properties": {
          "iPad": {
            "type": "boolean",
            "description": "Whether the app should run on iPads."
          },
          "iPhoneAndIPod": {
            "type": "boolean",
            "description": "Whether the app should run on iPhones and iPods."
          }
        },
        "example": {
          "iPad": true,
          "iPhoneAndIPod": true
        }
      },
      "microsoft.graph.iosMinimumOperatingSystem": {
        "title": "iosMinimumOperatingSystem",
        "type": "object",
        "properties": {
          "v8_0": {
            "type": "boolean",
            "description": "Version 8.0 or later."
          },
          "v9_0": {
            "type": "boolean",
            "description": "Version 9.0 or later."
          },
          "v10_0": {
            "type": "boolean",
            "description": "Version 10.0 or later."
          },
          "v11_0": {
            "type": "boolean",
            "description": "Version 11.0 or later."
          }
        },
        "example": {
          "v8_0": true,
          "v9_0": true,
          "v10_0": true,
          "v11_0": true
        }
      },
      "microsoft.graph.managedMobileLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedApp"
          },
          {
            "title": "managedMobileLobApp",
            "type": "object",
            "properties": {
              "committedContentVersion": {
                "type": "string",
                "description": "The internal committed content version.",
                "nullable": true
              },
              "fileName": {
                "type": "string",
                "description": "The name of the main Lob application file.",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "description": "The total size, including all uploaded files.",
                "format": "int64"
              },
              "identityVersion": {
                "type": "string",
                "description": "The identity version.",
                "nullable": true
              },
              "contentVersions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppContent"
                }
              }
            },
            "description": "An abstract base class containing properties for all managed mobile line of business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "String",
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ]
        }
      },
      "microsoft.graph.mobileAppContent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppContent",
            "type": "object",
            "properties": {
              "files": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppContentFile"
                }
              }
            },
            "description": "Contains content properties for a specific app version. Each mobileAppContent can have multiple mobileAppContentFile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "files": [
            {
              "@odata.type": "microsoft.graph.mobileAppContentFile"
            }
          ]
        }
      },
      "microsoft.graph.managedAndroidLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedMobileLobApp"
          },
          {
            "title": "managedAndroidLobApp",
            "type": "object",
            "properties": {
              "identityName": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              },
              "versionName": {
                "type": "string",
                "description": "The version name of managed Android Line of Business (LoB) app.",
                "nullable": true
              },
              "versionCode": {
                "type": "string",
                "description": "The version code of managed Android Line of Business (LoB) app.",
                "nullable": true
              }
            },
            "description": "Contains properties and inherited properties for Managed Android Line Of Business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "String",
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "identityName": "String",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          },
          "versionName": "String",
          "versionCode": "String"
        }
      },
      "microsoft.graph.managedIOSLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedMobileLobApp"
          },
          {
            "title": "managedIOSLobApp",
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "applicableDeviceType": {
                "$ref": "#/components/schemas/microsoft.graph.iosDeviceType"
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The expiration time.",
                "format": "date-time",
                "nullable": true
              },
              "versionNumber": {
                "type": "string",
                "description": "The version number of managed iOS Line of Business (LoB) app.",
                "nullable": true
              },
              "buildNumber": {
                "type": "string",
                "description": "The build number of managed iOS Line of Business (LoB) app.",
                "nullable": true
              }
            },
            "description": "Contains properties and inherited properties for Managed iOS Line Of Business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "String",
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "bundleId": "String",
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          },
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "versionNumber": "String",
          "buildNumber": "String"
        }
      },
      "microsoft.graph.mobileLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "mobileLobApp",
            "type": "object",
            "properties": {
              "committedContentVersion": {
                "type": "string",
                "description": "The internal committed content version.",
                "nullable": true
              },
              "fileName": {
                "type": "string",
                "description": "The name of the main Lob application file.",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "description": "The total size, including all uploaded files.",
                "format": "int64"
              },
              "identityVersion": {
                "type": "string",
                "description": "The identity version.",
                "nullable": true
              },
              "contentVersions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppContent"
                }
              }
            },
            "description": "An abstract base class containing properties for all mobile line of business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ]
        }
      },
      "microsoft.graph.windowsMobileMSI": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileLobApp"
          },
          {
            "title": "windowsMobileMSI",
            "type": "object",
            "properties": {
              "commandLine": {
                "type": "string",
                "description": "The command line.",
                "nullable": true
              },
              "productCode": {
                "type": "string",
                "description": "The product code.",
                "nullable": true
              },
              "productVersion": {
                "type": "string",
                "description": "The product version of Windows Mobile MSI Line of Business (LoB) app.",
                "nullable": true
              },
              "ignoreVersionDetection": {
                "type": "boolean",
                "description": "A boolean to control whether the app's version will be used to detect the app after it is installed on a device. Set this to true for Windows Mobile MSI Line of Business (LoB) apps that use a self update feature."
              }
            },
            "description": "Contains properties and inherited properties for Windows Mobile MSI Line Of Business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "commandLine": "String",
          "productCode": "String",
          "productVersion": "String",
          "ignoreVersionDetection": true
        }
      },
      "microsoft.graph.windowsPhone81AppX": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileLobApp"
          },
          {
            "title": "windowsPhone81AppX",
            "type": "object",
            "properties": {
              "applicableArchitectures": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsArchitecture"
                  }
                ],
                "description": "The Windows architecture(s) for which this app can run on."
              },
              "identityName": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "identityPublisherHash": {
                "type": "string",
                "description": "The Identity Publisher Hash."
              },
              "identityResourceIdentifier": {
                "type": "string",
                "description": "The Identity Resource Identifier.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "$ref": "#/components/schemas/microsoft.graph.windowsMinimumOperatingSystem"
              },
              "phoneProductIdentifier": {
                "type": "string",
                "description": "The Phone Product Identifier.",
                "nullable": true
              },
              "phonePublisherId": {
                "type": "string",
                "description": "The Phone Publisher Id.",
                "nullable": true
              }
            },
            "description": "Contains properties and inherited properties for Windows Phone 8.1 AppX Line Of Business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "applicableArchitectures": {
            "@odata.type": "microsoft.graph.windowsArchitecture"
          },
          "identityName": "String",
          "identityPublisherHash": "String",
          "identityResourceIdentifier": "String",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.windowsMinimumOperatingSystem"
          },
          "phoneProductIdentifier": "String",
          "phonePublisherId": "String"
        }
      },
      "microsoft.graph.windowsMinimumOperatingSystem": {
        "title": "windowsMinimumOperatingSystem",
        "type": "object",
        "properties": {
          "v8_0": {
            "type": "boolean",
            "description": "Windows version 8.0 or later."
          },
          "v8_1": {
            "type": "boolean",
            "description": "Windows version 8.1 or later."
          },
          "v10_0": {
            "type": "boolean",
            "description": "Windows version 10.0 or later."
          }
        },
        "example": {
          "v8_0": true,
          "v8_1": true,
          "v10_0": true
        }
      },
      "microsoft.graph.windowsPhone81AppXBundle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsPhone81AppX"
          },
          {
            "title": "windowsPhone81AppXBundle",
            "type": "object",
            "properties": {
              "appXPackageInformationList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsPackageInformation"
                    }
                  ],
                  "nullable": true
                },
                "description": "The list of AppX Package Information."
              }
            },
            "description": "Contains properties and inherited properties for Windows Phone 8.1 AppX Bundle Line Of Business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "applicableArchitectures": {
            "@odata.type": "microsoft.graph.windowsArchitecture"
          },
          "identityName": "String",
          "identityPublisherHash": "String",
          "identityResourceIdentifier": "String",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.windowsMinimumOperatingSystem"
          },
          "phoneProductIdentifier": "String",
          "phonePublisherId": "String",
          "appXPackageInformationList": [
            {
              "@odata.type": "microsoft.graph.windowsPackageInformation"
            }
          ]
        }
      },
      "microsoft.graph.windowsPackageInformation": {
        "title": "windowsPackageInformation",
        "type": "object",
        "properties": {
          "applicableArchitecture": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.windowsArchitecture"
              }
            ],
            "description": "The Windows architecture for which this app can run on."
          },
          "displayName": {
            "type": "string",
            "description": "The Display Name.",
            "nullable": true
          },
          "identityName": {
            "type": "string",
            "description": "The Identity Name.",
            "nullable": true
          },
          "identityPublisher": {
            "type": "string",
            "description": "The Identity Publisher.",
            "nullable": true
          },
          "identityResourceIdentifier": {
            "type": "string",
            "description": "The Identity Resource Identifier.",
            "nullable": true
          },
          "identityVersion": {
            "type": "string",
            "description": "The Identity Version.",
            "nullable": true
          },
          "minimumSupportedOperatingSystem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.windowsMinimumOperatingSystem"
              }
            ],
            "description": "The value for the minimum applicable operating system.",
            "nullable": true
          }
        },
        "example": {
          "applicableArchitecture": {
            "@odata.type": "microsoft.graph.windowsArchitecture"
          },
          "displayName": "String",
          "identityName": "String",
          "identityPublisher": "String",
          "identityResourceIdentifier": "String",
          "identityVersion": "String",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.windowsMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.windowsUniversalAppX": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileLobApp"
          },
          {
            "title": "windowsUniversalAppX",
            "type": "object",
            "properties": {
              "applicableArchitectures": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsArchitecture"
                  }
                ],
                "description": "The Windows architecture(s) for which this app can run on."
              },
              "applicableDeviceTypes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsDeviceType"
                  }
                ],
                "description": "The Windows device type(s) for which this app can run on."
              },
              "identityName": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "identityPublisherHash": {
                "type": "string",
                "description": "The Identity Publisher Hash."
              },
              "identityResourceIdentifier": {
                "type": "string",
                "description": "The Identity Resource Identifier.",
                "nullable": true
              },
              "isBundle": {
                "type": "boolean",
                "description": "Whether or not the app is a bundle."
              },
              "minimumSupportedOperatingSystem": {
                "$ref": "#/components/schemas/microsoft.graph.windowsMinimumOperatingSystem"
              }
            },
            "description": "Contains properties and inherited properties for Windows Universal AppX Line Of Business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "applicableArchitectures": {
            "@odata.type": "microsoft.graph.windowsArchitecture"
          },
          "applicableDeviceTypes": {
            "@odata.type": "microsoft.graph.windowsDeviceType"
          },
          "identityName": "String",
          "identityPublisherHash": "String",
          "identityResourceIdentifier": "String",
          "isBundle": true,
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.windowsMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.windowsAppX": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileLobApp"
          },
          {
            "title": "windowsAppX",
            "type": "object",
            "properties": {
              "applicableArchitectures": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsArchitecture"
                  }
                ],
                "description": "The Windows architecture(s) for which this app can run on."
              },
              "identityName": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "identityPublisherHash": {
                "type": "string",
                "description": "The Identity Publisher Hash."
              },
              "identityResourceIdentifier": {
                "type": "string",
                "description": "The Identity Resource Identifier.",
                "nullable": true
              },
              "isBundle": {
                "type": "boolean",
                "description": "Whether or not the app is a bundle."
              },
              "minimumSupportedOperatingSystem": {
                "$ref": "#/components/schemas/microsoft.graph.windowsMinimumOperatingSystem"
              }
            },
            "description": "Contains properties and inherited properties for Windows AppX Line Of Business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "applicableArchitectures": {
            "@odata.type": "microsoft.graph.windowsArchitecture"
          },
          "identityName": "String",
          "identityPublisherHash": "String",
          "identityResourceIdentifier": "String",
          "isBundle": true,
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.windowsMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.windowsPhoneXAP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileLobApp"
          },
          {
            "title": "windowsPhoneXAP",
            "type": "object",
            "properties": {
              "minimumSupportedOperatingSystem": {
                "$ref": "#/components/schemas/microsoft.graph.windowsMinimumOperatingSystem"
              },
              "productIdentifier": {
                "type": "string",
                "description": "The Product Identifier."
              }
            },
            "description": "Contains properties and inherited properties for Windows Phone XAP Line Of Business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.windowsMinimumOperatingSystem"
          },
          "productIdentifier": "String"
        }
      },
      "microsoft.graph.androidLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileLobApp"
          },
          {
            "title": "androidLobApp",
            "type": "object",
            "properties": {
              "identityName": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              },
              "versionName": {
                "type": "string",
                "description": "The version name of Android Line of Business (LoB) app.",
                "nullable": true
              },
              "versionCode": {
                "type": "string",
                "description": "The version code of Android Line of Business (LoB) app.",
                "nullable": true
              }
            },
            "description": "Contains properties and inherited properties for Android Line Of Business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "identityName": "String",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          },
          "versionName": "String",
          "versionCode": "String"
        }
      },
      "microsoft.graph.iosLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileLobApp"
          },
          {
            "title": "iosLobApp",
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "applicableDeviceType": {
                "$ref": "#/components/schemas/microsoft.graph.iosDeviceType"
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The expiration time.",
                "format": "date-time",
                "nullable": true
              },
              "versionNumber": {
                "type": "string",
                "description": "The version number of iOS Line of Business (LoB) app.",
                "nullable": true
              },
              "buildNumber": {
                "type": "string",
                "description": "The build number of iOS Line of Business (LoB) app.",
                "nullable": true
              }
            },
            "description": "Contains properties and inherited properties for iOS Line Of Business apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "committedContentVersion": "String",
          "fileName": "String",
          "size": "Int64",
          "identityVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "bundleId": "String",
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          },
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "versionNumber": "String",
          "buildNumber": "String"
        }
      },
      "microsoft.graph.androidForWorkApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "androidForWorkApp",
            "type": "object",
            "properties": {
              "appIdentifier": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "usedLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of VPP licenses in use.",
                "format": "int32"
              },
              "totalLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The total number of VPP licenses.",
                "format": "int32"
              },
              "appStoreUrl": {
                "type": "string",
                "description": "The Play for Work Store app URL.",
                "nullable": true
              }
            },
            "description": "Contains properties and inherited properties for Android for Work (AFW) Apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "appIdentifier": "String",
          "usedLicenseCount": "Int32",
          "totalLicenseCount": "Int32",
          "appStoreUrl": "String"
        }
      },
      "microsoft.graph.microsoftStoreForBusinessApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "microsoftStoreForBusinessApp",
            "type": "object",
            "properties": {
              "usedLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of Microsoft Store for Business licenses in use.",
                "format": "int32"
              },
              "totalLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The total number of Microsoft Store for Business licenses.",
                "format": "int32"
              },
              "productKey": {
                "type": "string",
                "description": "The app product key",
                "nullable": true
              },
              "licenseType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.microsoftStoreForBusinessLicenseType"
                  }
                ],
                "description": "The app license type"
              },
              "packageIdentityName": {
                "type": "string",
                "description": "The app package identifier",
                "nullable": true
              }
            },
            "description": "Microsoft Store for Business Apps. This class does not support Create, Delete, or Update."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "usedLicenseCount": "Int32",
          "totalLicenseCount": "Int32",
          "productKey": "String",
          "licenseType": {
            "@odata.type": "microsoft.graph.microsoftStoreForBusinessLicenseType"
          },
          "packageIdentityName": "String"
        }
      },
      "microsoft.graph.webApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "webApp",
            "type": "object",
            "properties": {
              "appUrl": {
                "type": "string",
                "description": "The web app URL.",
                "nullable": true
              },
              "useManagedBrowser": {
                "type": "boolean",
                "description": "Whether or not to use managed browser. This property is only applicable for Android and IOS."
              }
            },
            "description": "Contains properties and inherited properties for web apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "appUrl": "String",
          "useManagedBrowser": true
        }
      },
      "microsoft.graph.windowsPhone81StoreApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "windowsPhone81StoreApp",
            "type": "object",
            "properties": {
              "appStoreUrl": {
                "type": "string",
                "description": "The Windows Phone 8.1 app store URL.",
                "nullable": true
              }
            },
            "description": "Contains properties and inherited properties for Windows Phone 8.1 Store apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "appStoreUrl": "String"
        }
      },
      "microsoft.graph.windowsStoreApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "windowsStoreApp",
            "type": "object",
            "properties": {
              "appStoreUrl": {
                "type": "string",
                "description": "The Windows app store URL.",
                "nullable": true
              }
            },
            "description": "Contains properties and inherited properties for Windows Store apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "appStoreUrl": "String"
        }
      },
      "microsoft.graph.androidStoreApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "androidStoreApp",
            "type": "object",
            "properties": {
              "appIdentifier": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "appStoreUrl": {
                "type": "string",
                "description": "The Android app store URL.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              }
            },
            "description": "Contains properties and inherited properties for Android store apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "appIdentifier": "String",
          "appStoreUrl": "String",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.iosVppApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "iosVppApp",
            "type": "object",
            "properties": {
              "usedLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of VPP licenses in use.",
                "format": "int32"
              },
              "totalLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The total number of VPP licenses.",
                "format": "int32"
              },
              "releaseDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The VPP application release date and time.",
                "format": "date-time",
                "nullable": true
              },
              "appStoreUrl": {
                "type": "string",
                "description": "The store URL.",
                "nullable": true
              },
              "licensingType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vppLicensingType"
                  }
                ],
                "description": "The supported License Type.",
                "nullable": true
              },
              "applicableDeviceType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosDeviceType"
                  }
                ],
                "description": "The applicable iOS Device Type.",
                "nullable": true
              },
              "vppTokenOrganizationName": {
                "type": "string",
                "description": "The organization associated with the Apple Volume Purchase Program Token",
                "nullable": true
              },
              "vppTokenAccountType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vppTokenAccountType"
                  }
                ],
                "description": "The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: `business`, `education`."
              },
              "vppTokenAppleId": {
                "type": "string",
                "description": "The Apple Id associated with the given Apple Volume Purchase Program Token.",
                "nullable": true
              },
              "bundleId": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "vppToken": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appleVolumePurchaseProgramToken"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Contains properties and inherited properties for iOS Volume-Purchased Program (VPP) Apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "usedLicenseCount": "Int32",
          "totalLicenseCount": "Int32",
          "releaseDateTime": "DateTimeOffset (timestamp)",
          "appStoreUrl": "String",
          "licensingType": {
            "@odata.type": "microsoft.graph.vppLicensingType"
          },
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "vppTokenOrganizationName": "String",
          "vppTokenAccountType": {
            "@odata.type": "microsoft.graph.vppTokenAccountType"
          },
          "vppTokenAppleId": "String",
          "bundleId": "String",
          "vppToken": {
            "@odata.type": "microsoft.graph.appleVolumePurchaseProgramToken"
          }
        }
      },
      "microsoft.graph.vppLicensingType": {
        "title": "vppLicensingType",
        "type": "object",
        "properties": {
          "supportUserLicensing": {
            "type": "boolean",
            "description": "Whether the program supports the user licensing type."
          },
          "supportDeviceLicensing": {
            "type": "boolean",
            "description": "Whether the program supports the device licensing type."
          }
        },
        "example": {
          "supportUserLicensing": true,
          "supportDeviceLicensing": true
        }
      },
      "microsoft.graph.iosStoreApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "iosStoreApp",
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "appStoreUrl": {
                "type": "string",
                "description": "The Apple App Store URL",
                "nullable": true
              },
              "applicableDeviceType": {
                "$ref": "#/components/schemas/microsoft.graph.iosDeviceType"
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              }
            },
            "description": "Contains properties and inherited properties for iOS store apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "String",
          "informationUrl": "String",
          "owner": "String",
          "developer": "String",
          "notes": "String",
          "uploadState": "Int32",
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.mobileAppInstallSummary"
          },
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.mobileAppInstallStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.userAppInstallStatus"
            }
          ],
          "bundleId": "String",
          "appStoreUrl": "String",
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.appReportingOverviewStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "appReportingOverviewStatus",
            "type": "object",
            "description": "Class for reporting status of all mobile apps."
          }
        ],
        "example": {
          "id": "String (identifier)"
        }
      },
      "microsoft.graph.appInstallationFailure": {
        "title": "appInstallationFailure",
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string",
            "description": "Key of the entity.",
            "nullable": true
          },
          "appName": {
            "type": "string",
            "description": "The name of the App",
            "nullable": true
          },
          "platformId": {
            "type": "integer",
            "description": "The platform ID for the App",
            "format": "int64"
          },
          "userFailures": {
            "type": "integer",
            "description": "The number of users in failure for this App.",
            "format": "int64"
          },
          "deviceFailures": {
            "type": "integer",
            "description": "The number of devices in failure for this App.",
            "format": "int64"
          }
        },
        "example": {
          "applicationId": "String",
          "appName": "String",
          "platformId": "Int64",
          "userFailures": "Int64",
          "deviceFailures": "Int64"
        }
      },
      "microsoft.graph.androidForWorkMobileAppConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfiguration"
          },
          {
            "title": "androidForWorkMobileAppConfiguration",
            "type": "object",
            "properties": {
              "packageName": {
                "type": "string",
                "description": "Android For Work app configuration package name.",
                "nullable": true
              },
              "payloadJson": {
                "type": "string",
                "description": "Android For Work app configuration JSON payload.",
                "nullable": true
              },
              "permissionActions": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.androidPermissionAction"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of Android app permissions and corresponding permission actions."
              }
            },
            "description": "Contains properties, inherited properties and actions for AFW mobile app configurations."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetedMobileApps": [
            "String"
          ],
          "legacyAppConfiguration": true,
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mdmAppConfigGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
            }
          ],
          "deviceStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary"
          },
          "userStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary"
          },
          "packageName": "String",
          "payloadJson": "String",
          "permissionActions": [
            {
              "@odata.type": "microsoft.graph.androidPermissionAction"
            }
          ]
        }
      },
      "microsoft.graph.androidPermissionAction": {
        "title": "androidPermissionAction",
        "type": "object",
        "properties": {
          "permission": {
            "type": "string",
            "description": "Android permission string, defined in the official Android documentation.  Example 'android.permission.READ_CONTACTS'.",
            "nullable": true
          },
          "action": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.androidPermissionActionType"
              }
            ],
            "description": "Type of Android permission action."
          }
        },
        "example": {
          "permission": "String",
          "action": {
            "@odata.type": "microsoft.graph.androidPermissionActionType"
          }
        }
      },
      "microsoft.graph.iosMobileAppConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfiguration"
          },
          {
            "title": "iosMobileAppConfiguration",
            "type": "object",
            "properties": {
              "settingXml": {
                "type": "string",
                "description": "mdm app configuration.",
                "nullable": true
              },
              "settings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appConfigurationSettingItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "app configuration setting items."
              }
            },
            "description": "Contains properties, inherited properties and actions for iOS mobile app configurations."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetedMobileApps": [
            "String"
          ],
          "legacyAppConfiguration": true,
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.mdmAppConfigGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
            }
          ],
          "deviceStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary"
          },
          "userStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary"
          },
          "settingXml": "String",
          "settings": [
            {
              "@odata.type": "microsoft.graph.appConfigurationSettingItem"
            }
          ]
        }
      },
      "microsoft.graph.appConfigurationSettingItem": {
        "title": "appConfigurationSettingItem",
        "type": "object",
        "properties": {
          "appConfigKey": {
            "type": "string",
            "description": "app configuration key."
          },
          "appConfigKeyType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mdmAppConfigKeyType"
              }
            ],
            "description": "app configuration key type."
          },
          "appConfigKeyValue": {
            "type": "string",
            "description": "app configuration key value."
          }
        },
        "example": {
          "appConfigKey": "String",
          "appConfigKeyType": {
            "@odata.type": "microsoft.graph.mdmAppConfigKeyType"
          },
          "appConfigKeyValue": "String"
        }
      },
      "microsoft.graph.termsAndConditionsGroupAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "termsAndConditionsGroupAssignment",
            "type": "object",
            "properties": {
              "targetGroupId": {
                "type": "string",
                "description": "Unique identifier of a group that the T&C policy is assigned to.",
                "nullable": true
              },
              "termsAndConditions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.termsAndConditions"
                  }
                ],
                "nullable": true
              }
            },
            "description": "A termsAndConditionsGroupAssignment entity represents the assignment of a given Terms and Conditions (T&C) policy to a given group. Users in the group will be required to accept the terms in order to have devices enrolled into Intune."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetGroupId": "String",
          "termsAndConditions": {
            "@odata.type": "microsoft.graph.termsAndConditions"
          }
        }
      },
      "microsoft.graph.termsAndConditionsAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "termsAndConditionsAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "Assignment target that the T&C policy is assigned to.",
                "nullable": true
              }
            },
            "description": "A termsAndConditionsAssignment entity represents the assignment of a given Terms and Conditions (T&C) policy to a given group. Users in the group will be required to accept the terms in order to have devices enrolled into Intune."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.termsAndConditionsAcceptanceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "termsAndConditionsAcceptanceStatus",
            "type": "object",
            "properties": {
              "userDisplayName": {
                "type": "string",
                "description": "Display name of the user whose acceptance the entity represents.",
                "nullable": true
              },
              "acceptedVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Most recent version number of the T&C accepted by the user.",
                "format": "int32"
              },
              "acceptedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime when the terms were last accepted by the user.",
                "format": "date-time"
              },
              "termsAndConditions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.termsAndConditions"
                  }
                ],
                "nullable": true
              }
            },
            "description": "A termsAndConditionsAcceptanceStatus entity represents the acceptance status of a given Terms and Conditions (T&C) policy by a given user. Users must accept the most up-to-date version of the terms in order to retain access to the Company Portal."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "acceptedVersion": "Int32",
          "acceptedDateTime": "DateTimeOffset (timestamp)",
          "termsAndConditions": {
            "@odata.type": "microsoft.graph.termsAndConditions"
          }
        }
      },
      "microsoft.graph.importedDeviceIdentityResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.importedDeviceIdentity"
          },
          {
            "title": "importedDeviceIdentityResult",
            "type": "object",
            "properties": {
              "status": {
                "type": "boolean",
                "description": "Status of imported device identity"
              }
            },
            "description": "The importedDeviceIdentityResult resource represents the result of attempting to import a device identity."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "importedDeviceIdentifier": "String",
          "importedDeviceIdentityType": {
            "@odata.type": "microsoft.graph.importedDeviceIdentityType"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastContactedDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "enrollmentState": {
            "@odata.type": "microsoft.graph.enrollmentState"
          },
          "platform": {
            "@odata.type": "microsoft.graph.platform"
          },
          "status": true
        }
      },
      "microsoft.graph.importedAppleDeviceIdentityResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.importedAppleDeviceIdentity"
          },
          {
            "title": "importedAppleDeviceIdentityResult",
            "type": "object",
            "properties": {
              "status": {
                "type": "boolean",
                "description": "Status of imported device identity"
              }
            },
            "description": "The importedAppleDeviceIdentityResult resource represents the result of attempting to import Apple devices identities."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "serialNumber": "String",
          "requestedEnrollmentProfileId": "String",
          "requestedEnrollmentProfileAssignmentDateTime": "DateTimeOffset (timestamp)",
          "isSupervised": true,
          "discoverySource": {
            "@odata.type": "microsoft.graph.discoverySource"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastContactedDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "enrollmentState": {
            "@odata.type": "microsoft.graph.enrollmentState"
          },
          "platform": {
            "@odata.type": "microsoft.graph.platform"
          },
          "status": true
        }
      },
      "microsoft.graph.depEnrollmentProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.enrollmentProfile"
          },
          {
            "title": "depEnrollmentProfile",
            "type": "object",
            "properties": {
              "supervisedModeEnabled": {
                "type": "boolean",
                "description": "Supervised mode, True to enable, false otherwise. See https://docs.microsoft.com/en-us/intune/deploy-use/enroll-devices-in-microsoft-intune for additional information."
              },
              "supportDepartment": {
                "type": "string",
                "description": "Support department information",
                "nullable": true
              },
              "passCodeDisabled": {
                "type": "boolean",
                "description": "Indicates if Passcode setup pane is disabled"
              },
              "isMandatory": {
                "type": "boolean",
                "description": "Indicates if the profile is mandatory"
              },
              "locationDisabled": {
                "type": "boolean",
                "description": "Indicates if Location service setup pane is disabled"
              },
              "supportPhoneNumber": {
                "type": "string",
                "description": "Support phone number",
                "nullable": true
              },
              "iTunesPairingMode": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iTunesPairingMode"
                  }
                ],
                "description": "Indicates the iTunes pairing mode"
              },
              "profileRemovalDisabled": {
                "type": "boolean",
                "description": "Indicates if the profile removal option is disabled"
              },
              "managementCertificates": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.managementCertificateWithThumbprint"
                    }
                  ],
                  "nullable": true
                },
                "description": "Management certificates for Apple Configurator"
              },
              "restoreBlocked": {
                "type": "boolean",
                "description": "Indicates if Restore setup pane is blocked"
              },
              "restoreFromAndroidDisabled": {
                "type": "boolean",
                "description": "Indicates if Restore from Android is disabled"
              },
              "appleIdDisabled": {
                "type": "boolean",
                "description": "Indicates if Apple id setup pane is disabled"
              },
              "termsAndConditionsDisabled": {
                "type": "boolean",
                "description": "Indicates if 'Terms and Conditions' setup pane is disabled"
              },
              "touchIdDisabled": {
                "type": "boolean",
                "description": "Indicates if touch id setup pane is disabled"
              },
              "applePayDisabled": {
                "type": "boolean",
                "description": "Indicates if Apple pay setup pane is disabled"
              },
              "zoomDisabled": {
                "type": "boolean",
                "description": "Indicates if zoom setup pane is disabled"
              },
              "siriDisabled": {
                "type": "boolean",
                "description": "Indicates if siri setup pane is disabled"
              },
              "diagnosticsDisabled": {
                "type": "boolean",
                "description": "Indicates if diagnostics setup pane is disabled"
              },
              "macOSRegistrationDisabled": {
                "type": "boolean",
                "description": "Indicates if Mac OS registration is disabled"
              },
              "macOSFileVaultDisabled": {
                "type": "boolean",
                "description": "Indicates if Mac OS file vault is disabled"
              },
              "awaitDeviceConfiguredConfirmation": {
                "type": "boolean",
                "description": "Indicates if the device will need to wait for configured confirmation"
              },
              "sharedIPadMaximumUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "This specifies the maximum number of users that can use a shared iPad. Only applicable in shared iPad mode.",
                "format": "int32"
              },
              "enableSharedIPad": {
                "type": "boolean",
                "description": "This indicates whether the device is to be enrolled in a mode which enables multi user scenarios. Only applicable in shared iPads."
              }
            },
            "description": "The depEnrollmentProfile resource represents an Apple Device Enrollment Program (DEP) enrollment profile. This type of profile must be assigned to Apple DEP serial numbers before the corresponding devices can enroll via DEP."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "requiresUserAuthentication": true,
          "configurationEndpointUrl": "String",
          "enableAuthenticationViaCompanyPortal": true,
          "supervisedModeEnabled": true,
          "supportDepartment": "String",
          "passCodeDisabled": true,
          "isMandatory": true,
          "locationDisabled": true,
          "supportPhoneNumber": "String",
          "iTunesPairingMode": {
            "@odata.type": "microsoft.graph.iTunesPairingMode"
          },
          "profileRemovalDisabled": true,
          "managementCertificates": [
            {
              "@odata.type": "microsoft.graph.managementCertificateWithThumbprint"
            }
          ],
          "restoreBlocked": true,
          "restoreFromAndroidDisabled": true,
          "appleIdDisabled": true,
          "termsAndConditionsDisabled": true,
          "touchIdDisabled": true,
          "applePayDisabled": true,
          "zoomDisabled": true,
          "siriDisabled": true,
          "diagnosticsDisabled": true,
          "macOSRegistrationDisabled": true,
          "macOSFileVaultDisabled": true,
          "awaitDeviceConfiguredConfirmation": true,
          "sharedIPadMaximumUserCount": "Int32",
          "enableSharedIPad": true
        }
      },
      "microsoft.graph.managementCertificateWithThumbprint": {
        "title": "managementCertificateWithThumbprint",
        "type": "object",
        "properties": {
          "thumbprint": {
            "type": "string",
            "nullable": true
          },
          "certificate": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "thumbprint": "String",
          "certificate": "String"
        }
      },
      "microsoft.graph.deviceManagementScriptGroupAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementScriptGroupAssignment",
            "type": "object",
            "properties": {
              "targetGroupId": {
                "type": "string",
                "description": "The Id of the Azure Active Directory group we are targeting the script to.",
                "nullable": true
              }
            },
            "description": "Contains properties used to assign a device management script to a group."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetGroupId": "String"
        }
      },
      "microsoft.graph.runSchedule": {
        "title": "runSchedule",
        "type": "object"
      },
      "microsoft.graph.deviceManagementScriptRunSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementScriptRunSummary",
            "type": "object",
            "properties": {
              "successDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Success device count.",
                "format": "int32"
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Error device count.",
                "format": "int32"
              },
              "successUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Success user count.",
                "format": "int32"
              },
              "errorUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Error user count.",
                "format": "int32"
              }
            },
            "description": "Contains properties for the run summary of a device management script."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "successDeviceCount": "Int32",
          "errorDeviceCount": "Int32",
          "successUserCount": "Int32",
          "errorUserCount": "Int32"
        }
      },
      "microsoft.graph.deviceManagementScriptDeviceState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementScriptDeviceState",
            "type": "object",
            "properties": {
              "runState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.runState"
                  }
                ],
                "description": "State of latest run of the device management script."
              },
              "resultMessage": {
                "type": "string",
                "description": "Details of execution output.",
                "nullable": true
              },
              "lastStateUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Latest time the device management script executes.",
                "format": "date-time"
              },
              "errorCode": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Error code corresponding to erroneous execution of the device management script.",
                "format": "int32"
              },
              "errorDescription": {
                "type": "string",
                "description": "Error description corresponding to erroneous execution of the device management script.",
                "nullable": true
              },
              "managedDevice": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedDevice"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Contains properties for device run state of the device management script."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "runState": {
            "@odata.type": "microsoft.graph.runState"
          },
          "resultMessage": "String",
          "lastStateUpdateDateTime": "DateTimeOffset (timestamp)",
          "errorCode": "Int32",
          "errorDescription": "String",
          "managedDevice": {
            "@odata.type": "microsoft.graph.managedDevice"
          }
        }
      },
      "microsoft.graph.deviceManagementScriptUserState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementScriptUserState",
            "type": "object",
            "properties": {
              "successDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Success device count for specific user.",
                "format": "int32"
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Error device count for specific user.",
                "format": "int32"
              },
              "userPrincipalName": {
                "type": "string",
                "description": "User principle name of specific user.",
                "nullable": true
              },
              "deviceRunStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementScriptDeviceState"
                }
              }
            },
            "description": "Contains properties for user run state of the device management script."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "successDeviceCount": "Int32",
          "errorDeviceCount": "Int32",
          "userPrincipalName": "String",
          "deviceRunStates": [
            {
              "@odata.type": "microsoft.graph.deviceManagementScriptDeviceState"
            }
          ]
        }
      },
      "microsoft.graph.deviceConfigurationState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationState",
            "type": "object",
            "properties": {
              "settingStates": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationSettingState"
                    }
                  ],
                  "nullable": true
                },
                "description": "Not yet documented"
              },
              "displayName": {
                "type": "string",
                "description": "The name of the policy for this policyBase",
                "nullable": true
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The version of the policy",
                "format": "int32"
              },
              "platformType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.policyPlatformType"
                  }
                ],
                "description": "Platform type that the policy applies to"
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "The compliance state of the policy"
              },
              "settingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of how many setting a policy holds",
                "format": "int32"
              }
            },
            "description": "Device Configuration State for a given device."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "settingStates": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationSettingState"
            }
          ],
          "displayName": "String",
          "version": "Int32",
          "platformType": {
            "@odata.type": "microsoft.graph.policyPlatformType"
          },
          "state": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "settingCount": "Int32"
        }
      },
      "microsoft.graph.hardwareInformation": {
        "title": "hardwareInformation",
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "description": "Serial number.",
            "nullable": true
          },
          "totalStorageSpace": {
            "type": "integer",
            "description": "Total storage space of the device.",
            "format": "int64"
          },
          "freeStorageSpace": {
            "type": "integer",
            "description": "Free storage space of the device.",
            "format": "int64"
          },
          "imei": {
            "type": "string",
            "description": "IMEI",
            "nullable": true
          },
          "meid": {
            "type": "string",
            "description": "MEID",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "description": "Manufacturer of the device",
            "nullable": true
          },
          "model": {
            "type": "string",
            "description": "Model of the device",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the device",
            "nullable": true
          },
          "subscriberCarrier": {
            "type": "string",
            "description": "Subscriber carrier of the device",
            "nullable": true
          },
          "cellularTechnology": {
            "type": "string",
            "description": "Cellular technology of the device",
            "nullable": true
          },
          "wifiMac": {
            "type": "string",
            "description": "WiFi MAC address of the device",
            "nullable": true
          },
          "operatingSystemLanguage": {
            "type": "string",
            "description": "Operating system language of the device",
            "nullable": true
          },
          "isSupervised": {
            "type": "boolean",
            "description": "Supervised mode of the device"
          },
          "isEncrypted": {
            "type": "boolean",
            "description": "Encryption status of the device"
          },
          "isSharedDevice": {
            "type": "boolean",
            "description": "Shared iPad"
          },
          "sharedDeviceCachedUsers": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.sharedAppleDeviceUser"
                }
              ],
              "nullable": true
            },
            "description": "All users on the shared Apple device"
          },
          "tpmSpecificationVersion": {
            "type": "string",
            "description": "String that specifies the specification version.",
            "nullable": true
          },
          "operatingSystemEdition": {
            "type": "string",
            "description": "String that specifies the OS edition.",
            "nullable": true
          },
          "deviceFullQualifiedDomainName": {
            "type": "string",
            "description": "Returns the fully qualified domain name of the device (if any). If the device is not domain-joined, it returns an empty string. ",
            "nullable": true
          },
          "deviceGuardVirtualizationBasedSecurityHardwareRequirementState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceGuardVirtualizationBasedSecurityHardwareRequirementState"
              }
            ],
            "description": "Virtualization-based security hardware requirement status."
          },
          "deviceGuardVirtualizationBasedSecurityState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceGuardVirtualizationBasedSecurityState"
              }
            ],
            "description": "Virtualization-based security status. "
          },
          "deviceGuardLocalSystemAuthorityCredentialGuardState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceGuardLocalSystemAuthorityCredentialGuardState"
              }
            ],
            "description": "Local System Authority (LSA) credential guard status. "
          }
        },
        "example": {
          "serialNumber": "String",
          "totalStorageSpace": "Int64",
          "freeStorageSpace": "Int64",
          "imei": "String",
          "meid": "String",
          "manufacturer": "String",
          "model": "String",
          "phoneNumber": "String",
          "subscriberCarrier": "String",
          "cellularTechnology": "String",
          "wifiMac": "String",
          "operatingSystemLanguage": "String",
          "isSupervised": true,
          "isEncrypted": true,
          "isSharedDevice": true,
          "sharedDeviceCachedUsers": [
            {
              "@odata.type": "microsoft.graph.sharedAppleDeviceUser"
            }
          ],
          "tpmSpecificationVersion": "String",
          "operatingSystemEdition": "String",
          "deviceFullQualifiedDomainName": "String",
          "deviceGuardVirtualizationBasedSecurityHardwareRequirementState": {
            "@odata.type": "microsoft.graph.deviceGuardVirtualizationBasedSecurityHardwareRequirementState"
          },
          "deviceGuardVirtualizationBasedSecurityState": {
            "@odata.type": "microsoft.graph.deviceGuardVirtualizationBasedSecurityState"
          },
          "deviceGuardLocalSystemAuthorityCredentialGuardState": {
            "@odata.type": "microsoft.graph.deviceGuardLocalSystemAuthorityCredentialGuardState"
          }
        }
      },
      "microsoft.graph.sharedAppleDeviceUser": {
        "title": "sharedAppleDeviceUser",
        "type": "object",
        "properties": {
          "userPrincipalName": {
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "dataToSync": {
            "type": "boolean",
            "description": "Data to sync"
          },
          "dataQuota": {
            "type": "integer",
            "description": "Data quota",
            "format": "int64",
            "nullable": true
          },
          "dataUsed": {
            "type": "integer",
            "description": "Data quota",
            "format": "int64"
          }
        },
        "example": {
          "userPrincipalName": "String",
          "dataToSync": true,
          "dataQuota": "Int64",
          "dataUsed": "Int64"
        }
      },
      "microsoft.graph.deviceActionResult": {
        "title": "deviceActionResult",
        "type": "object",
        "properties": {
          "actionName": {
            "type": "string",
            "description": "Action name",
            "nullable": true
          },
          "actionState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceActionState"
              }
            ],
            "description": "State of the action"
          },
          "startDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action was initiated",
            "format": "date-time"
          },
          "lastUpdatedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action state was last updated",
            "format": "date-time"
          }
        },
        "example": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.deviceActionState"
          },
          "startDateTime": "DateTimeOffset (timestamp)",
          "lastUpdatedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.configurationManagerClientEnabledFeatures": {
        "title": "configurationManagerClientEnabledFeatures",
        "type": "object",
        "properties": {
          "inventory": {
            "type": "boolean",
            "description": "Whether inventory is managed by Intune"
          },
          "modernApps": {
            "type": "boolean",
            "description": "Whether modern application is managed by Intune"
          },
          "resourceAccess": {
            "type": "boolean",
            "description": "Whether resource access is managed by Intune"
          },
          "deviceConfiguration": {
            "type": "boolean",
            "description": "Whether device configuration is managed by Intune"
          },
          "compliancePolicy": {
            "type": "boolean",
            "description": "Whether compliance policy is managed by Intune"
          },
          "windowsUpdateForBusiness": {
            "type": "boolean",
            "description": "Whether Windows Update for Business is managed by Intune"
          }
        },
        "example": {
          "inventory": true,
          "modernApps": true,
          "resourceAccess": true,
          "deviceConfiguration": true,
          "compliancePolicy": true,
          "windowsUpdateForBusiness": true
        }
      },
      "microsoft.graph.deviceHealthAttestationState": {
        "title": "deviceHealthAttestationState",
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "type": "string",
            "description": "The Timestamp of the last update.",
            "nullable": true
          },
          "contentNamespaceUrl": {
            "type": "string",
            "description": "The DHA report version. (Namespace version)",
            "nullable": true
          },
          "deviceHealthAttestationStatus": {
            "type": "string",
            "description": "The DHA report version. (Namespace version)",
            "nullable": true
          },
          "contentVersion": {
            "type": "string",
            "description": "The HealthAttestation state schema version",
            "nullable": true
          },
          "issuedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The DateTime when device was evaluated or issued to MDM",
            "format": "date-time"
          },
          "attestationIdentityKey": {
            "type": "string",
            "description": "TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.",
            "nullable": true
          },
          "resetCount": {
            "type": "integer",
            "description": "The number of times a PC device has hibernated or resumed",
            "format": "int64"
          },
          "restartCount": {
            "type": "integer",
            "description": "The number of times a PC device has rebooted",
            "format": "int64"
          },
          "dataExcutionPolicy": {
            "type": "string",
            "description": "DEP Policy defines a set of hardware and software technologies that perform additional checks on memory ",
            "nullable": true
          },
          "bitLockerStatus": {
            "type": "string",
            "description": "On or Off of BitLocker Drive Encryption",
            "nullable": true
          },
          "bootManagerVersion": {
            "type": "string",
            "description": "The version of the Boot Manager",
            "nullable": true
          },
          "codeIntegrityCheckVersion": {
            "type": "string",
            "description": "The version of the Boot Manager",
            "nullable": true
          },
          "secureBoot": {
            "type": "string",
            "description": "When Secure Boot is enabled, the core components must have the correct cryptographic signatures",
            "nullable": true
          },
          "bootDebugging": {
            "type": "string",
            "description": "When bootDebugging is enabled, the device is used in development and testing",
            "nullable": true
          },
          "operatingSystemKernelDebugging": {
            "type": "string",
            "description": "When operatingSystemKernelDebugging is enabled, the device is used in development and testing",
            "nullable": true
          },
          "codeIntegrity": {
            "type": "string",
            "description": " When code integrity is enabled, code execution is restricted to integrity verified code",
            "nullable": true
          },
          "testSigning": {
            "type": "string",
            "description": "When test signing is allowed, the device does not enforce signature validation during boot",
            "nullable": true
          },
          "safeMode": {
            "type": "string",
            "description": "Safe mode is a troubleshooting option for Windows that starts your computer in a limited state",
            "nullable": true
          },
          "windowsPE": {
            "type": "string",
            "description": "Operating system running with limited services that is used to prepare a computer for Windows",
            "nullable": true
          },
          "earlyLaunchAntiMalwareDriverProtection": {
            "type": "string",
            "description": "ELAM provides protection for the computers in your network when they start up",
            "nullable": true
          },
          "virtualSecureMode": {
            "type": "string",
            "description": "VSM is a container that protects high value assets from a compromised kernel",
            "nullable": true
          },
          "pcrHashAlgorithm": {
            "type": "string",
            "description": "Informational attribute that identifies the HASH algorithm that was used by TPM",
            "nullable": true
          },
          "bootAppSecurityVersion": {
            "type": "string",
            "description": "The security version number of the Boot Application",
            "nullable": true
          },
          "bootManagerSecurityVersion": {
            "type": "string",
            "description": "The security version number of the Boot Application",
            "nullable": true
          },
          "tpmVersion": {
            "type": "string",
            "description": "The security version number of the Boot Application",
            "nullable": true
          },
          "pcr0": {
            "type": "string",
            "description": "The measurement that is captured in PCR[0]",
            "nullable": true
          },
          "secureBootConfigurationPolicyFingerPrint": {
            "type": "string",
            "description": "Fingerprint of the Custom Secure Boot Configuration Policy",
            "nullable": true
          },
          "codeIntegrityPolicy": {
            "type": "string",
            "description": "The Code Integrity policy that is controlling the security of the boot environment",
            "nullable": true
          },
          "bootRevisionListInfo": {
            "type": "string",
            "description": "The Boot Revision List that was loaded during initial boot on the attested device",
            "nullable": true
          },
          "operatingSystemRevListInfo": {
            "type": "string",
            "description": "The Operating System Revision List that was loaded during initial boot on the attested device",
            "nullable": true
          },
          "healthStatusMismatchInfo": {
            "type": "string",
            "description": "This attribute appears if DHA-Service detects an integrity issue",
            "nullable": true
          },
          "healthAttestationSupportedStatus": {
            "type": "string",
            "description": "This attribute indicates if DHA is supported for the device",
            "nullable": true
          }
        },
        "example": {
          "lastUpdateDateTime": "String",
          "contentNamespaceUrl": "String",
          "deviceHealthAttestationStatus": "String",
          "contentVersion": "String",
          "issuedDateTime": "DateTimeOffset (timestamp)",
          "attestationIdentityKey": "String",
          "resetCount": "Int64",
          "restartCount": "Int64",
          "dataExcutionPolicy": "String",
          "bitLockerStatus": "String",
          "bootManagerVersion": "String",
          "codeIntegrityCheckVersion": "String",
          "secureBoot": "String",
          "bootDebugging": "String",
          "operatingSystemKernelDebugging": "String",
          "codeIntegrity": "String",
          "testSigning": "String",
          "safeMode": "String",
          "windowsPE": "String",
          "earlyLaunchAntiMalwareDriverProtection": "String",
          "virtualSecureMode": "String",
          "pcrHashAlgorithm": "String",
          "bootAppSecurityVersion": "String",
          "bootManagerSecurityVersion": "String",
          "tpmVersion": "String",
          "pcr0": "String",
          "secureBootConfigurationPolicyFingerPrint": "String",
          "codeIntegrityPolicy": "String",
          "bootRevisionListInfo": "String",
          "operatingSystemRevListInfo": "String",
          "healthStatusMismatchInfo": "String",
          "healthAttestationSupportedStatus": "String"
        }
      },
      "microsoft.graph.windowsProtectionState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsProtectionState",
            "type": "object",
            "properties": {
              "malwareProtectionEnabled": {
                "type": "boolean",
                "description": "Anti malware is enabled or not",
                "nullable": true
              },
              "deviceState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsDeviceHealthState"
                  }
                ],
                "description": "Computer's state (like clean or pending full scan or pending reboot etc)",
                "nullable": true
              },
              "realTimeProtectionEnabled": {
                "type": "boolean",
                "description": "Real time protection is enabled or not?",
                "nullable": true
              },
              "networkInspectionSystemEnabled": {
                "type": "boolean",
                "description": "Network inspection system enabled or not?",
                "nullable": true
              },
              "quickScanOverdue": {
                "type": "boolean",
                "description": "Quick scan overdue or not?",
                "nullable": true
              },
              "fullScanOverdue": {
                "type": "boolean",
                "description": "Full scan overdue or not?",
                "nullable": true
              },
              "signatureUpdateOverdue": {
                "type": "boolean",
                "description": "Signature out of date or not?",
                "nullable": true
              },
              "rebootRequired": {
                "type": "boolean",
                "description": "Reboot required or not?",
                "nullable": true
              },
              "fullScanRequired": {
                "type": "boolean",
                "description": "Full scan required or not?",
                "nullable": true
              },
              "engineVersion": {
                "type": "string",
                "description": "Current endpoint protection engine's version",
                "nullable": true
              },
              "signatureVersion": {
                "type": "string",
                "description": "Current malware definitions version",
                "nullable": true
              },
              "antiMalwareVersion": {
                "type": "string",
                "description": "Current anti malware version",
                "nullable": true
              },
              "lastQuickScanDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last quick scan datetime",
                "format": "date-time",
                "nullable": true
              },
              "lastFullScanDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last quick scan datetime",
                "format": "date-time",
                "nullable": true
              },
              "lastQuickScanSignatureVersion": {
                "type": "string",
                "description": "Last quick scan signature version",
                "nullable": true
              },
              "lastFullScanSignatureVersion": {
                "type": "string",
                "description": "Last full scan signature version",
                "nullable": true
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last device health status reported time",
                "format": "date-time",
                "nullable": true
              },
              "detectedMalwareState": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsDeviceMalwareState"
                }
              }
            },
            "description": "Device protection status entity."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "malwareProtectionEnabled": true,
          "deviceState": {
            "@odata.type": "microsoft.graph.windowsDeviceHealthState"
          },
          "realTimeProtectionEnabled": true,
          "networkInspectionSystemEnabled": true,
          "quickScanOverdue": true,
          "fullScanOverdue": true,
          "signatureUpdateOverdue": true,
          "rebootRequired": true,
          "fullScanRequired": true,
          "engineVersion": "String",
          "signatureVersion": "String",
          "antiMalwareVersion": "String",
          "lastQuickScanDateTime": "DateTimeOffset (timestamp)",
          "lastFullScanDateTime": "DateTimeOffset (timestamp)",
          "lastQuickScanSignatureVersion": "String",
          "lastFullScanSignatureVersion": "String",
          "lastReportedDateTime": "DateTimeOffset (timestamp)",
          "detectedMalwareState": [
            {
              "@odata.type": "microsoft.graph.windowsDeviceMalwareState"
            }
          ]
        }
      },
      "microsoft.graph.deviceCompliancePolicyState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCompliancePolicyState",
            "type": "object",
            "properties": {
              "settingStates": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicySettingState"
                    }
                  ],
                  "nullable": true
                },
                "description": "Not yet documented"
              },
              "displayName": {
                "type": "string",
                "description": "The name of the policy for this policyBase",
                "nullable": true
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The version of the policy",
                "format": "int32"
              },
              "platformType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.policyPlatformType"
                  }
                ],
                "description": "Platform type that the policy applies to"
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "The compliance state of the policy"
              },
              "settingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of how many setting a policy holds",
                "format": "int32"
              }
            },
            "description": "Device Compliance Policy State for a given device."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "settingStates": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicySettingState"
            }
          ],
          "displayName": "String",
          "version": "Int32",
          "platformType": {
            "@odata.type": "microsoft.graph.policyPlatformType"
          },
          "state": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "settingCount": "Int32"
        }
      },
      "microsoft.graph.bulkManagedDeviceActionResult": {
        "title": "bulkManagedDeviceActionResult",
        "type": "object",
        "properties": {
          "successfulDeviceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Successful devices"
          },
          "failedDeviceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Failed devices"
          },
          "notFoundDeviceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Not found devices"
          },
          "notSupportedDeviceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Not supported devices"
          }
        },
        "example": {
          "successfulDeviceIds": [
            "String"
          ],
          "failedDeviceIds": [
            "String"
          ],
          "notFoundDeviceIds": [
            "String"
          ],
          "notSupportedDeviceIds": [
            "String"
          ]
        }
      },
      "microsoft.graph.updateWindowsDeviceAccountActionParameter": {
        "title": "updateWindowsDeviceAccountActionParameter",
        "type": "object",
        "properties": {
          "deviceAccount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.windowsDeviceAccount"
              }
            ],
            "description": "Not yet documented",
            "nullable": true
          },
          "passwordRotationEnabled": {
            "type": "boolean",
            "description": "Not yet documented",
            "nullable": true
          },
          "calendarSyncEnabled": {
            "type": "boolean",
            "description": "Not yet documented",
            "nullable": true
          },
          "deviceAccountEmail": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          },
          "exchangeServer": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          },
          "sessionInitiationProtocalAddress": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          }
        },
        "example": {
          "deviceAccount": {
            "@odata.type": "microsoft.graph.windowsDeviceAccount"
          },
          "passwordRotationEnabled": true,
          "calendarSyncEnabled": true,
          "deviceAccountEmail": "String",
          "exchangeServer": "String",
          "sessionInitiationProtocalAddress": "String"
        }
      },
      "microsoft.graph.windowsDeviceAccount": {
        "title": "windowsDeviceAccount",
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          }
        },
        "example": {
          "password": "String"
        }
      },
      "microsoft.graph.dailySchedule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.runSchedule"
          },
          {
            "title": "dailySchedule",
            "type": "object",
            "properties": {
              "interval": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Interval in number of days",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "interval": "Int32"
        }
      },
      "microsoft.graph.hourlySchedule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.runSchedule"
          },
          {
            "title": "hourlySchedule",
            "type": "object",
            "properties": {
              "interval": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Interval in number of hours",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "interval": "Int32"
        }
      },
      "microsoft.graph.windowsDefenderScanActionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceActionResult"
          },
          {
            "title": "windowsDefenderScanActionResult",
            "type": "object",
            "properties": {
              "scanType": {
                "type": "string",
                "description": "Scan type either full scan or quick scan",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.deviceActionState"
          },
          "startDateTime": "DateTimeOffset (timestamp)",
          "lastUpdatedDateTime": "DateTimeOffset (timestamp)",
          "scanType": "String"
        }
      },
      "microsoft.graph.deleteUserFromSharedAppleDeviceActionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceActionResult"
          },
          {
            "title": "deleteUserFromSharedAppleDeviceActionResult",
            "type": "object",
            "properties": {
              "userPrincipalName": {
                "type": "string",
                "description": "User principal name of the user to be deleted",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.deviceActionState"
          },
          "startDateTime": "DateTimeOffset (timestamp)",
          "lastUpdatedDateTime": "DateTimeOffset (timestamp)",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.locateDeviceActionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceActionResult"
          },
          {
            "title": "locateDeviceActionResult",
            "type": "object",
            "properties": {
              "deviceLocation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceGeoLocation"
                  }
                ],
                "description": "device location",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.deviceActionState"
          },
          "startDateTime": "DateTimeOffset (timestamp)",
          "lastUpdatedDateTime": "DateTimeOffset (timestamp)",
          "deviceLocation": {
            "@odata.type": "microsoft.graph.deviceGeoLocation"
          }
        }
      },
      "microsoft.graph.deviceGeoLocation": {
        "title": "deviceGeoLocation",
        "type": "object",
        "properties": {
          "lastCollectedDateTimeUtc": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time at which location was recorded, relative to UTC",
            "format": "date-time"
          },
          "lastCollectedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time at which location was recorded, relative to UTC",
            "format": "date-time"
          },
          "longitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Longitude coordinate of the device's location",
            "format": "double"
          },
          "latitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Latitude coordinate of the device's location",
            "format": "double"
          },
          "altitude": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Altitude, given in meters above sea level",
            "format": "double"
          },
          "horizontalAccuracy": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Accuracy of longitude and latitude in meters",
            "format": "double"
          },
          "verticalAccuracy": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Accuracy of altitude in meters",
            "format": "double"
          },
          "heading": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Heading in degrees from true north",
            "format": "double"
          },
          "speed": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Speed the device is traveling in meters per second",
            "format": "double"
          }
        },
        "example": {
          "lastCollectedDateTimeUtc": "DateTimeOffset (timestamp)",
          "lastCollectedDateTime": "DateTimeOffset (timestamp)",
          "longitude": "Double",
          "latitude": "Double",
          "altitude": "Double",
          "horizontalAccuracy": "Double",
          "verticalAccuracy": "Double",
          "heading": "Double",
          "speed": "Double"
        }
      },
      "microsoft.graph.remoteLockActionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceActionResult"
          },
          {
            "title": "remoteLockActionResult",
            "type": "object",
            "properties": {
              "unlockPin": {
                "type": "string",
                "description": "Pin to unlock the client",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.deviceActionState"
          },
          "startDateTime": "DateTimeOffset (timestamp)",
          "lastUpdatedDateTime": "DateTimeOffset (timestamp)",
          "unlockPin": "String"
        }
      },
      "microsoft.graph.resetPasscodeActionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceActionResult"
          },
          {
            "title": "resetPasscodeActionResult",
            "type": "object",
            "properties": {
              "passcode": {
                "type": "string",
                "description": "Newly generated passcode for the device ",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.deviceActionState"
          },
          "startDateTime": "DateTimeOffset (timestamp)",
          "lastUpdatedDateTime": "DateTimeOffset (timestamp)",
          "passcode": "String"
        }
      },
      "microsoft.graph.windowsDeviceMalwareState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsDeviceMalwareState",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Malware name",
                "nullable": true
              },
              "additionalInformationUrl": {
                "type": "string",
                "description": "Information URL to learn more about the malware",
                "nullable": true
              },
              "severity": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsMalwareSeverity"
                  }
                ],
                "description": "Severity of the malware",
                "nullable": true
              },
              "catetgory": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsMalwareCategory"
                  }
                ],
                "description": "Category of the malware",
                "nullable": true
              },
              "executionState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsMalwareExecutionState"
                  }
                ],
                "description": "Execution status of the malware like blocked/executing etc",
                "nullable": true
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsMalwareState"
                  }
                ],
                "description": "Current status of the malware like cleaned/quarantined/allowed etc",
                "nullable": true
              },
              "initialDetectionDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Initial detection datetime of the malware",
                "format": "date-time",
                "nullable": true
              },
              "lastStateChangeDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time this particular threat was changed",
                "format": "date-time",
                "nullable": true
              },
              "detectionCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of times the malware is detected",
                "format": "int32",
                "nullable": true
              }
            },
            "description": "Malware detection entity."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "additionalInformationUrl": "String",
          "severity": {
            "@odata.type": "microsoft.graph.windowsMalwareSeverity"
          },
          "catetgory": {
            "@odata.type": "microsoft.graph.windowsMalwareCategory"
          },
          "executionState": {
            "@odata.type": "microsoft.graph.windowsMalwareExecutionState"
          },
          "state": {
            "@odata.type": "microsoft.graph.windowsMalwareState"
          },
          "initialDetectionDateTime": "DateTimeOffset (timestamp)",
          "lastStateChangeDateTime": "DateTimeOffset (timestamp)",
          "detectionCount": "Int32"
        }
      },
      "microsoft.graph.windowsManagedDevice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedDevice"
          },
          {
            "title": "windowsManagedDevice",
            "type": "object",
            "description": "Windows devices that are managed or pre-enrolled through Intune"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userId": "String",
          "deviceName": "String",
          "hardwareInformation": {
            "@odata.type": "microsoft.graph.hardwareInformation"
          },
          "ownerType": {
            "@odata.type": "microsoft.graph.ownerType"
          },
          "deviceActionResults": [
            {
              "@odata.type": "microsoft.graph.deviceActionResult"
            }
          ],
          "managementState": {
            "@odata.type": "microsoft.graph.managementState"
          },
          "enrolledDateTime": "DateTimeOffset (timestamp)",
          "lastSyncDateTime": "DateTimeOffset (timestamp)",
          "chassisType": {
            "@odata.type": "microsoft.graph.chassisType"
          },
          "operatingSystem": "String",
          "deviceType": {
            "@odata.type": "microsoft.graph.deviceType"
          },
          "complianceState": {
            "@odata.type": "microsoft.graph.complianceState"
          },
          "jailBroken": "String",
          "managementAgent": {
            "@odata.type": "microsoft.graph.managementAgentType"
          },
          "osVersion": "String",
          "easActivated": true,
          "easDeviceId": "String",
          "easActivationDateTime": "DateTimeOffset (timestamp)",
          "aadRegistered": true,
          "azureADRegistered": true,
          "deviceEnrollmentType": {
            "@odata.type": "microsoft.graph.deviceEnrollmentType"
          },
          "lostModeState": {
            "@odata.type": "microsoft.graph.lostModeState"
          },
          "activationLockBypassCode": "String",
          "emailAddress": "String",
          "azureActiveDirectoryDeviceId": "String",
          "deviceRegistrationState": {
            "@odata.type": "microsoft.graph.deviceRegistrationState"
          },
          "deviceCategoryDisplayName": "String",
          "isSupervised": true,
          "exchangeLastSuccessfulSyncDateTime": "DateTimeOffset (timestamp)",
          "exchangeAccessState": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeAccessState"
          },
          "exchangeAccessStateReason": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeAccessStateReason"
          },
          "remoteAssistanceSessionUrl": "String",
          "remoteAssistanceSessionErrorString": "String",
          "isEncrypted": true,
          "userPrincipalName": "String",
          "model": "String",
          "manufacturer": "String",
          "imei": "String",
          "complianceGracePeriodExpirationDateTime": "DateTimeOffset (timestamp)",
          "serialNumber": "String",
          "phoneNumber": "String",
          "androidSecurityPatchLevel": "String",
          "userDisplayName": "String",
          "configurationManagerClientEnabledFeatures": {
            "@odata.type": "microsoft.graph.configurationManagerClientEnabledFeatures"
          },
          "wiFiMacAddress": "String",
          "deviceHealthAttestationState": {
            "@odata.type": "microsoft.graph.deviceHealthAttestationState"
          },
          "subscriberCarrier": "String",
          "meid": "String",
          "totalStorageSpaceInBytes": "Int64",
          "freeStorageSpaceInBytes": "Int64",
          "managedDeviceName": "String",
          "partnerReportedThreatState": {
            "@odata.type": "microsoft.graph.managedDevicePartnerReportedHealthState"
          },
          "deviceConfigurationStates": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationState"
            }
          ],
          "detectedApps": [
            {
              "@odata.type": "microsoft.graph.detectedApp"
            }
          ],
          "deviceCategory": {
            "@odata.type": "microsoft.graph.deviceCategory"
          },
          "windowsProtectionState": {
            "@odata.type": "microsoft.graph.windowsProtectionState"
          },
          "deviceCompliancePolicyStates": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyState"
            }
          ]
        }
      },
      "microsoft.graph.deviceOperatingSystemSummary": {
        "title": "deviceOperatingSystemSummary",
        "type": "object",
        "properties": {
          "androidCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of android device count.",
            "format": "int32"
          },
          "iosCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of iOS device count.",
            "format": "int32"
          },
          "macOSCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of Mac OS X device count.",
            "format": "int32"
          },
          "windowsMobileCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of Windows mobile device count.",
            "format": "int32"
          },
          "windowsCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of Windows device count.",
            "format": "int32"
          },
          "unknownCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of unknown device count.",
            "format": "int32"
          }
        },
        "example": {
          "androidCount": "Int32",
          "iosCount": "Int32",
          "macOSCount": "Int32",
          "windowsMobileCount": "Int32",
          "windowsCount": "Int32",
          "unknownCount": "Int32"
        }
      },
      "microsoft.graph.deviceExchangeAccessStateSummary": {
        "title": "deviceExchangeAccessStateSummary",
        "type": "object",
        "properties": {
          "allowedDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Total count of devices with Exchange Access State: Allowed.",
            "format": "int32"
          },
          "blockedDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Total count of devices with Exchange Access State: Blocked.",
            "format": "int32"
          },
          "quarantinedDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Total count of devices with Exchange Access State: Quarantined.",
            "format": "int32"
          },
          "unknownDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Total count of devices with Exchange Access State: Unknown.",
            "format": "int32"
          },
          "unavailableDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Total count of devices for which no Exchange Access State could be found.",
            "format": "int32"
          }
        },
        "example": {
          "allowedDeviceCount": "Int32",
          "blockedDeviceCount": "Int32",
          "quarantinedDeviceCount": "Int32",
          "unknownDeviceCount": "Int32",
          "unavailableDeviceCount": "Int32"
        }
      },
      "microsoft.graph.windowsManagementAppHealthSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsManagementAppHealthSummary",
            "type": "object",
            "properties": {
              "healthyDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Healthy device count.",
                "format": "int32"
              },
              "unhealthyDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Unhealthy device count.",
                "format": "int32"
              },
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Unknown device count.",
                "format": "int32"
              }
            },
            "description": "Contains properties for the health summary of the Windows management app."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "healthyDeviceCount": "Int32",
          "unhealthyDeviceCount": "Int32",
          "unknownDeviceCount": "Int32"
        }
      },
      "microsoft.graph.windowsManagementAppHealthState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsManagementAppHealthState",
            "type": "object",
            "properties": {
              "healthState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.healthState"
                  }
                ],
                "description": "Windows management app health state."
              },
              "installedVersion": {
                "type": "string",
                "description": "Windows management app installed version.",
                "nullable": true
              },
              "lastCheckInDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Windows management app last check-in time.",
                "format": "date-time"
              },
              "deviceName": {
                "type": "string",
                "description": "Name of the device on which Windows management app is installed.",
                "nullable": true
              },
              "deviceOSVersion": {
                "type": "string",
                "description": "Windows 10 OS version of the device on which Windows management app is installed.",
                "nullable": true
              }
            },
            "description": "Windows management app health state entity."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "healthState": {
            "@odata.type": "microsoft.graph.healthState"
          },
          "installedVersion": "String",
          "lastCheckInDateTime": "DateTimeOffset (timestamp)",
          "deviceName": "String",
          "deviceOSVersion": "String"
        }
      },
      "microsoft.graph.windowsDeviceADAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsDeviceAccount"
          },
          {
            "title": "windowsDeviceADAccount",
            "type": "object",
            "properties": {
              "domainName": {
                "type": "string",
                "description": "Not yet documented",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "Not yet documented",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "password": "String",
          "domainName": "String",
          "userName": "String"
        }
      },
      "microsoft.graph.windowsDeviceAzureADAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsDeviceAccount"
          },
          {
            "title": "windowsDeviceAzureADAccount",
            "type": "object",
            "properties": {
              "userPrincipalName": {
                "type": "string",
                "description": "Not yet documented",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "password": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.reportRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "reportRoot",
            "type": "object",
            "description": "The resource that represents an instance of History Reports."
          }
        ],
        "example": {
          "id": "String (identifier)"
        }
      },
      "microsoft.graph.deviceConfigurationGroupAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationGroupAssignment",
            "type": "object",
            "properties": {
              "targetGroupId": {
                "type": "string",
                "description": "The Id of the AAD group we are targeting the device configuration to.",
                "nullable": true
              },
              "excludeGroup": {
                "type": "boolean",
                "description": "Indicates if this group is should be excluded. Defaults that the group should be included"
              },
              "deviceConfiguration": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Device configuration group assignment."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetGroupId": "String",
          "excludeGroup": true,
          "deviceConfiguration": {
            "@odata.type": "microsoft.graph.deviceConfiguration"
          }
        }
      },
      "microsoft.graph.deviceConfigurationAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "The assignment target for the device configuration.",
                "nullable": true
              }
            },
            "description": "The device configuration assignment entity assigns an AAD group to a specific device configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.deviceConfigurationDeviceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationDeviceStatus",
            "type": "object",
            "properties": {
              "deviceDisplayName": {
                "type": "string",
                "description": "Device name of the DevicePolicyStatus.",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "The User Name that is being reported",
                "nullable": true
              },
              "deviceModel": {
                "type": "string",
                "description": "The device model that is being reported",
                "nullable": true
              },
              "platform": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Platform of the device that is being reported",
                "format": "int32"
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time"
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report."
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time"
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deviceDisplayName": "String",
          "userName": "String",
          "deviceModel": "String",
          "platform": "Int32",
          "complianceGracePeriodExpirationDateTime": "DateTimeOffset (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "DateTimeOffset (timestamp)",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.deviceConfigurationUserStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationUserStatus",
            "type": "object",
            "properties": {
              "userDisplayName": {
                "type": "string",
                "description": "User name of the DevicePolicyStatus.",
                "nullable": true
              },
              "devicesCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Devices count for that user.",
                "format": "int32"
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report."
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time"
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "devicesCount": "Int32",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "DateTimeOffset (timestamp)",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.deviceConfigurationDeviceOverview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationDeviceOverview",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending devices",
                "format": "int32"
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32"
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded devices",
                "format": "int32"
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32"
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed devices",
                "format": "int32"
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time"
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "pendingCount": "Int32",
          "notApplicableCount": "Int32",
          "successCount": "Int32",
          "errorCount": "Int32",
          "failedCount": "Int32",
          "lastUpdateDateTime": "DateTimeOffset (timestamp)",
          "configurationVersion": "Int32"
        }
      },
      "microsoft.graph.deviceConfigurationUserOverview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationUserOverview",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending Users",
                "format": "int32"
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32"
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded Users",
                "format": "int32"
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error Users",
                "format": "int32"
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed Users",
                "format": "int32"
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time"
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "pendingCount": "Int32",
          "notApplicableCount": "Int32",
          "successCount": "Int32",
          "errorCount": "Int32",
          "failedCount": "Int32",
          "lastUpdateDateTime": "DateTimeOffset (timestamp)",
          "configurationVersion": "Int32"
        }
      },
      "microsoft.graph.settingStateDeviceSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "settingStateDeviceSummary",
            "type": "object",
            "properties": {
              "settingName": {
                "type": "string",
                "description": "Name of the setting",
                "nullable": true
              },
              "instancePath": {
                "type": "string",
                "description": "Name of the InstancePath for the setting",
                "nullable": true
              },
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device Unkown count for the setting",
                "format": "int32"
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device Not Applicable count for the setting",
                "format": "int32"
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device Compliant count for the setting",
                "format": "int32"
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device Compliant count for the setting",
                "format": "int32"
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device NonCompliant count for the setting",
                "format": "int32"
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device error count for the setting",
                "format": "int32"
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device conflict error count for the setting",
                "format": "int32"
              }
            },
            "description": "Device Compilance Policy and Configuration for a Setting State summary"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "settingName": "String",
          "instancePath": "String",
          "unknownDeviceCount": "Int32",
          "notApplicableDeviceCount": "Int32",
          "compliantDeviceCount": "Int32",
          "remediatedDeviceCount": "Int32",
          "nonCompliantDeviceCount": "Int32",
          "errorDeviceCount": "Int32",
          "conflictDeviceCount": "Int32"
        }
      },
      "microsoft.graph.deviceCompliancePolicyGroupAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCompliancePolicyGroupAssignment",
            "type": "object",
            "properties": {
              "targetGroupId": {
                "type": "string",
                "description": "The Id of the AAD group we are targeting the device compliance policy to.",
                "nullable": true
              },
              "excludeGroup": {
                "type": "boolean",
                "description": "Indicates if this group is should be excluded. Defaults that the group should be included"
              },
              "deviceCompliancePolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Device compliance policy group assignment."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetGroupId": "String",
          "excludeGroup": true,
          "deviceCompliancePolicy": {
            "@odata.type": "microsoft.graph.deviceCompliancePolicy"
          }
        }
      },
      "microsoft.graph.deviceCompliancePolicyAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCompliancePolicyAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "Target for the compliance policy assignment.",
                "nullable": true
              }
            },
            "description": "Device compliance policy assignment."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.deviceComplianceScheduledActionForRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceScheduledActionForRule",
            "type": "object",
            "properties": {
              "ruleName": {
                "type": "string",
                "description": "Name of the rule which this scheduled action applies to.",
                "nullable": true
              },
              "scheduledActionConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceComplianceActionItem"
                }
              }
            },
            "description": "Scheduled Action for Rule"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "ruleName": "String",
          "scheduledActionConfigurations": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceActionItem"
            }
          ]
        }
      },
      "microsoft.graph.deviceComplianceDeviceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceDeviceStatus",
            "type": "object",
            "properties": {
              "deviceDisplayName": {
                "type": "string",
                "description": "Device name of the DevicePolicyStatus.",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "The User Name that is being reported",
                "nullable": true
              },
              "deviceModel": {
                "type": "string",
                "description": "The device model that is being reported",
                "nullable": true
              },
              "platform": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Platform of the device that is being reported",
                "format": "int32"
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time"
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report."
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time"
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deviceDisplayName": "String",
          "userName": "String",
          "deviceModel": "String",
          "platform": "Int32",
          "complianceGracePeriodExpirationDateTime": "DateTimeOffset (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "DateTimeOffset (timestamp)",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.deviceComplianceUserStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceUserStatus",
            "type": "object",
            "properties": {
              "userDisplayName": {
                "type": "string",
                "description": "User name of the DevicePolicyStatus.",
                "nullable": true
              },
              "devicesCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Devices count for that user.",
                "format": "int32"
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report."
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time"
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userDisplayName": "String",
          "devicesCount": "Int32",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "DateTimeOffset (timestamp)",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.deviceComplianceDeviceOverview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceDeviceOverview",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending devices",
                "format": "int32"
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32"
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded devices",
                "format": "int32"
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32"
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed devices",
                "format": "int32"
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time"
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "pendingCount": "Int32",
          "notApplicableCount": "Int32",
          "successCount": "Int32",
          "errorCount": "Int32",
          "failedCount": "Int32",
          "lastUpdateDateTime": "DateTimeOffset (timestamp)",
          "configurationVersion": "Int32"
        }
      },
      "microsoft.graph.deviceComplianceUserOverview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceUserOverview",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending Users",
                "format": "int32"
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32"
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded Users",
                "format": "int32"
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error Users",
                "format": "int32"
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed Users",
                "format": "int32"
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time"
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "pendingCount": "Int32",
          "notApplicableCount": "Int32",
          "successCount": "Int32",
          "errorCount": "Int32",
          "failedCount": "Int32",
          "lastUpdateDateTime": "DateTimeOffset (timestamp)",
          "configurationVersion": "Int32"
        }
      },
      "microsoft.graph.deviceComplianceActionItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceActionItem",
            "type": "object",
            "properties": {
              "gracePeriodHours": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of hours to wait till the action will be enforced. Valid values 0 to 8760",
                "format": "int32"
              },
              "actionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceComplianceActionType"
                  }
                ],
                "description": "What action to take"
              },
              "notificationTemplateId": {
                "type": "string",
                "description": "What notification Message template to use",
                "nullable": true
              },
              "notificationMessageCCList": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list of group IDs to speicify who to CC this notification message to."
              },
              "notificationMessageTemplate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notificationMessageTemplate"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Scheduled Action Configuration"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "gracePeriodHours": "Int32",
          "actionType": {
            "@odata.type": "microsoft.graph.deviceComplianceActionType"
          },
          "notificationTemplateId": "String",
          "notificationMessageCCList": [
            "String"
          ],
          "notificationMessageTemplate": {
            "@odata.type": "microsoft.graph.notificationMessageTemplate"
          }
        }
      },
      "microsoft.graph.androidDeviceComplianceLocalActionBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "androidDeviceComplianceLocalActionBase",
            "type": "object",
            "properties": {
              "gracePeriodInMinutes": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of minutes to wait till a local action is enforced. Valid values 0 to 2147483647",
                "format": "int32"
              }
            },
            "description": "Local Action Configuration"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "gracePeriodInMinutes": "Int32"
        }
      },
      "microsoft.graph.windowsPrivacyDataAccessControlItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationAssignment"
          },
          {
            "title": "windowsPrivacyDataAccessControlItem",
            "type": "object",
            "properties": {
              "accessLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsPrivacyDataAccessLevel"
                  }
                ],
                "description": "This indicates an access level for the privacy data category to which the specified application will be given to."
              },
              "dataCategory": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsPrivacyDataCategory"
                  }
                ],
                "description": "This indicates a privacy data category to which the specific access control will apply."
              },
              "appPackageFamilyName": {
                "type": "string",
                "description": "The Package Family Name of a Windows app. When set, the access level applies to the specified application.",
                "nullable": true
              },
              "appDisplayName": {
                "type": "string",
                "description": "The Package Family Name of a Windows app. When set, the access level applies to the specified application.",
                "nullable": true
              }
            },
            "description": "Specify access control level per privacy data category"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          },
          "accessLevel": {
            "@odata.type": "microsoft.graph.windowsPrivacyDataAccessLevel"
          },
          "dataCategory": {
            "@odata.type": "microsoft.graph.windowsPrivacyDataCategory"
          },
          "appPackageFamilyName": "String",
          "appDisplayName": "String"
        }
      },
      "microsoft.graph.windowsAssignedAccessProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsAssignedAccessProfile",
            "type": "object",
            "properties": {
              "profileName": {
                "type": "string",
                "description": "This is a friendly name used to identify a group of applications, the layout of these apps on the start menu and the users to whom this kiosk configuration is assigned."
              },
              "showTaskBar": {
                "type": "boolean",
                "description": "This setting allows the admin to specify whether the Task Bar is shown or not."
              },
              "appUserModelIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "These are the only Windows Store Apps that will be available to launch from the Start menu."
              },
              "desktopAppPaths": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "These are the paths of the Desktop Apps that will be available on the Start menu and the only apps the user will be able to launch."
              },
              "userAccounts": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The user accounts that will be locked to this kiosk configuration."
              },
              "startMenuLayoutXml": {
                "type": "string",
                "description": "Allows admins to override the default Start layout and prevents the user from changing it. The layout is modified by specifying an XML file based on a layout modification schema. XML needs to be in Binary format.",
                "format": "base64url"
              }
            },
            "description": "Assigned Access profile for Windows."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "profileName": "String",
          "showTaskBar": true,
          "appUserModelIds": [
            "String"
          ],
          "desktopAppPaths": [
            "String"
          ],
          "userAccounts": [
            "String"
          ],
          "startMenuLayoutXml": "Binary"
        }
      },
      "microsoft.graph.report": {
        "title": "report",
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Not yet documented",
            "format": "base64url",
            "nullable": true
          }
        },
        "example": {
          "content": "Stream"
        }
      },
      "microsoft.graph.androidForWorkEasEmailProfileBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidForWorkEasEmailProfileBase",
            "type": "object",
            "properties": {
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.easAuthenticationMethod"
                  }
                ],
                "description": "Authentication method for Exchange ActiveSync."
              },
              "durationOfEmailToSync": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailSyncDuration"
                  }
                ],
                "description": "Duration of time email should be synced to."
              },
              "emailAddressSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.userEmailSource"
                  }
                ],
                "description": "Email attribute that is picked from AAD and injected into this profile before installing on the device."
              },
              "hostName": {
                "type": "string",
                "description": "Exchange location (URL) that the mail app connects to."
              },
              "requireSsl": {
                "type": "boolean",
                "description": "Indicates whether or not to use SSL."
              },
              "usernameSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidUsernameSource"
                  }
                ],
                "description": "Username attribute that is picked from AAD and injected into this profile before installing on the device."
              },
              "identityCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Base for Android For Work EAS Email profiles"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.easAuthenticationMethod"
          },
          "durationOfEmailToSync": {
            "@odata.type": "microsoft.graph.emailSyncDuration"
          },
          "emailAddressSource": {
            "@odata.type": "microsoft.graph.userEmailSource"
          },
          "hostName": "String",
          "requireSsl": true,
          "usernameSource": {
            "@odata.type": "microsoft.graph.androidUsernameSource"
          },
          "identityCertificate": {
            "@odata.type": "microsoft.graph.androidForWorkCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.androidForWorkCertificateProfileBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidForWorkCertificateProfileBase",
            "type": "object",
            "properties": {
              "renewalThresholdPercentage": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Certificate renewal threshold percentage. Valid values 1 to 99",
                "format": "int32"
              },
              "subjectNameFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.subjectNameFormat"
                  }
                ],
                "description": "Certificate Subject Name Format."
              },
              "subjectAlternativeNameType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.subjectAlternativeNameType"
                  }
                ],
                "description": "Certificate Subject Alternative Name Type."
              },
              "certificateValidityPeriodValue": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value for the Certificate Validity Period.",
                "format": "int32"
              },
              "certificateValidityPeriodScale": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.certificateValidityPeriodScale"
                  }
                ],
                "description": "Scale for the Certificate Validity Period."
              },
              "extendedKeyUsages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extendedKeyUsage"
                },
                "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements."
              },
              "rootCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkTrustedRootCertificate"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Android For Work certificate profile base."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ],
          "rootCertificate": {
            "@odata.type": "microsoft.graph.androidForWorkTrustedRootCertificate"
          }
        }
      },
      "microsoft.graph.extendedKeyUsage": {
        "title": "extendedKeyUsage",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Extended Key Usage Name",
            "nullable": true
          },
          "objectIdentifier": {
            "type": "string",
            "description": "Extended Key Usage Object Identifier",
            "nullable": true
          }
        },
        "example": {
          "name": "String",
          "objectIdentifier": "String"
        }
      },
      "microsoft.graph.androidForWorkTrustedRootCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidForWorkTrustedRootCertificate",
            "type": "object",
            "properties": {
              "trustedRootCertificate": {
                "type": "string",
                "description": "Trusted Root Certificate",
                "format": "base64url"
              },
              "certFileName": {
                "type": "string",
                "description": "File name to display in UI.",
                "nullable": true
              }
            },
            "description": "Android For Work Trusted Root Certificate configuration profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "trustedRootCertificate": "Binary",
          "certFileName": "String"
        }
      },
      "microsoft.graph.androidForWorkPkcsCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.androidForWorkCertificateProfileBase"
          },
          {
            "title": "androidForWorkPkcsCertificateProfile",
            "type": "object",
            "properties": {
              "certificationAuthority": {
                "type": "string",
                "description": "PKCS Certification Authority"
              },
              "certificationAuthorityName": {
                "type": "string",
                "description": "PKCS Certification Authority Name"
              },
              "certificateTemplateName": {
                "type": "string",
                "description": "PKCS Certificate Template Name"
              },
              "subjectAlternativeNameFormatString": {
                "type": "string",
                "description": "Custom String that defines the AAD Attribute.",
                "nullable": true
              }
            },
            "description": "Android For Work PKCS certificate profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ],
          "rootCertificate": {
            "@odata.type": "microsoft.graph.androidForWorkTrustedRootCertificate"
          },
          "certificationAuthority": "String",
          "certificationAuthorityName": "String",
          "certificateTemplateName": "String",
          "subjectAlternativeNameFormatString": "String"
        }
      },
      "microsoft.graph.androidForWorkScepCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.androidForWorkCertificateProfileBase"
          },
          {
            "title": "androidForWorkScepCertificateProfile",
            "type": "object",
            "properties": {
              "scepServerUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "SCEP Server Url(s)"
              },
              "subjectNameFormatString": {
                "type": "string",
                "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
                "nullable": true
              },
              "keyUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keyUsages"
                  }
                ],
                "description": "SCEP Key Usage"
              },
              "keySize": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keySize"
                  }
                ],
                "description": "SCEP Key Size"
              },
              "hashAlgorithm": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.hashAlgorithms"
                  }
                ],
                "description": "SCEP Hash Algorithm"
              },
              "subjectAlternativeNameFormatString": {
                "type": "string",
                "description": "Custom String that defines the AAD Attribute.",
                "nullable": true
              },
              "managedDeviceCertificateStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceCertificateState"
                }
              }
            },
            "description": "Android For Work SCEP certificate profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ],
          "rootCertificate": {
            "@odata.type": "microsoft.graph.androidForWorkTrustedRootCertificate"
          },
          "scepServerUrls": [
            "String"
          ],
          "subjectNameFormatString": "String",
          "keyUsage": {
            "@odata.type": "microsoft.graph.keyUsages"
          },
          "keySize": {
            "@odata.type": "microsoft.graph.keySize"
          },
          "hashAlgorithm": {
            "@odata.type": "microsoft.graph.hashAlgorithms"
          },
          "subjectAlternativeNameFormatString": "String",
          "managedDeviceCertificateStates": [
            {
              "@odata.type": "microsoft.graph.managedDeviceCertificateState"
            }
          ]
        }
      },
      "microsoft.graph.managedDeviceCertificateState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceCertificateState",
            "type": "object",
            "properties": {
              "devicePlatform": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.devicePlatformType"
                  }
                ],
                "description": "Device platform"
              },
              "certificateKeyUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keyUsages"
                  }
                ],
                "description": "Key usage"
              },
              "certificateProfileDisplayName": {
                "type": "string",
                "description": "Certificate profile display name",
                "nullable": true
              },
              "deviceDisplayName": {
                "type": "string",
                "description": "Device display name",
                "nullable": true
              },
              "userDisplayName": {
                "type": "string",
                "description": "User display name",
                "nullable": true
              },
              "serverUrl": {
                "type": "string",
                "description": "Server URL",
                "nullable": true
              },
              "certificateExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Certificate expiry date",
                "format": "date-time"
              },
              "lastCertificateStateChangeDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last certificate issuance state change",
                "format": "date-time"
              },
              "certificateIssuer": {
                "type": "string",
                "description": "Issuer",
                "nullable": true
              },
              "certificateThumbprint": {
                "type": "string",
                "description": "Thumbprint",
                "nullable": true
              },
              "certificateSerialNumber": {
                "type": "string",
                "description": "Serial number",
                "nullable": true
              },
              "certificateKeyLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Key length",
                "format": "int32"
              },
              "enhancedKeyUsage": {
                "type": "string",
                "description": "Extended key usage",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "devicePlatform": {
            "@odata.type": "microsoft.graph.devicePlatformType"
          },
          "certificateKeyUsage": {
            "@odata.type": "microsoft.graph.keyUsages"
          },
          "certificateProfileDisplayName": "String",
          "deviceDisplayName": "String",
          "userDisplayName": "String",
          "serverUrl": "String",
          "certificateExpirationDateTime": "DateTimeOffset (timestamp)",
          "lastCertificateStateChangeDateTime": "DateTimeOffset (timestamp)",
          "certificateIssuer": "String",
          "certificateThumbprint": "String",
          "certificateSerialNumber": "String",
          "certificateKeyLength": "Int32",
          "enhancedKeyUsage": "String"
        }
      },
      "microsoft.graph.androidForWorkGmailEasConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.androidForWorkEasEmailProfileBase"
          },
          {
            "title": "androidForWorkGmailEasConfiguration",
            "type": "object",
            "description": "By providing configurations in this profile you can instruct the Gmail email client on Android For Work devices to communicate with an Exchange server and get email, contacts, calendar, tasks, and notes. Furthermore, you can also specify how much email to sync and how often the device should sync."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.easAuthenticationMethod"
          },
          "durationOfEmailToSync": {
            "@odata.type": "microsoft.graph.emailSyncDuration"
          },
          "emailAddressSource": {
            "@odata.type": "microsoft.graph.userEmailSource"
          },
          "hostName": "String",
          "requireSsl": true,
          "usernameSource": {
            "@odata.type": "microsoft.graph.androidUsernameSource"
          },
          "identityCertificate": {
            "@odata.type": "microsoft.graph.androidForWorkCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.androidForWorkNineWorkEasConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.androidForWorkEasEmailProfileBase"
          },
          {
            "title": "androidForWorkNineWorkEasConfiguration",
            "type": "object",
            "properties": {
              "syncCalendar": {
                "type": "boolean",
                "description": "Toggles syncing the calendar. If set to false the calendar is turned off on the device."
              },
              "syncContacts": {
                "type": "boolean",
                "description": "Toggles syncing contacts. If set to false contacts are turned off on the device."
              },
              "syncTasks": {
                "type": "boolean",
                "description": "Toggles syncing tasks. If set to false tasks are turned off on the device."
              }
            },
            "description": "By providing configurations in this profile you can instruct the Nine Work email client on Android For Work devices to communicate with an Exchange server and get email, contacts, calendar, tasks, and notes. Furthermore, you can also specify how much email to sync and how often the device should sync."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.easAuthenticationMethod"
          },
          "durationOfEmailToSync": {
            "@odata.type": "microsoft.graph.emailSyncDuration"
          },
          "emailAddressSource": {
            "@odata.type": "microsoft.graph.userEmailSource"
          },
          "hostName": "String",
          "requireSsl": true,
          "usernameSource": {
            "@odata.type": "microsoft.graph.androidUsernameSource"
          },
          "identityCertificate": {
            "@odata.type": "microsoft.graph.androidForWorkCertificateProfileBase"
          },
          "syncCalendar": true,
          "syncContacts": true,
          "syncTasks": true
        }
      },
      "microsoft.graph.androidCertificateProfileBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidCertificateProfileBase",
            "type": "object",
            "properties": {
              "renewalThresholdPercentage": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Certificate renewal threshold percentage. Valid values 1 to 99",
                "format": "int32"
              },
              "subjectNameFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.subjectNameFormat"
                  }
                ],
                "description": "Certificate Subject Name Format."
              },
              "subjectAlternativeNameType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.subjectAlternativeNameType"
                  }
                ],
                "description": "Certificate Subject Alternative Name Type."
              },
              "certificateValidityPeriodValue": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value for the Certificate Validity Period.",
                "format": "int32"
              },
              "certificateValidityPeriodScale": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.certificateValidityPeriodScale"
                  }
                ],
                "description": "Scale for the Certificate Validity Period."
              },
              "extendedKeyUsages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extendedKeyUsage"
                },
                "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements."
              },
              "rootCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidTrustedRootCertificate"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Android certificate profile base."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ],
          "rootCertificate": {
            "@odata.type": "microsoft.graph.androidTrustedRootCertificate"
          }
        }
      },
      "microsoft.graph.androidTrustedRootCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidTrustedRootCertificate",
            "type": "object",
            "properties": {
              "trustedRootCertificate": {
                "type": "string",
                "description": "Trusted Root Certificate",
                "format": "base64url"
              },
              "certFileName": {
                "type": "string",
                "description": "File name to display in UI.",
                "nullable": true
              }
            },
            "description": "Android Trusted Root Certificate configuration profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "trustedRootCertificate": "Binary",
          "certFileName": "String"
        }
      },
      "microsoft.graph.androidPkcsCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.androidCertificateProfileBase"
          },
          {
            "title": "androidPkcsCertificateProfile",
            "type": "object",
            "properties": {
              "certificationAuthority": {
                "type": "string",
                "description": "PKCS Certification Authority"
              },
              "certificationAuthorityName": {
                "type": "string",
                "description": "PKCS Certification Authority Name"
              },
              "certificateTemplateName": {
                "type": "string",
                "description": "PKCS Certificate Template Name"
              },
              "subjectAlternativeNameFormatString": {
                "type": "string",
                "description": "Custom String that defines the AAD Attribute.",
                "nullable": true
              }
            },
            "description": "Android PKCS certificate profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ],
          "rootCertificate": {
            "@odata.type": "microsoft.graph.androidTrustedRootCertificate"
          },
          "certificationAuthority": "String",
          "certificationAuthorityName": "String",
          "certificateTemplateName": "String",
          "subjectAlternativeNameFormatString": "String"
        }
      },
      "microsoft.graph.androidScepCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.androidCertificateProfileBase"
          },
          {
            "title": "androidScepCertificateProfile",
            "type": "object",
            "properties": {
              "scepServerUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "SCEP Server Url(s)"
              },
              "subjectNameFormatString": {
                "type": "string",
                "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
                "nullable": true
              },
              "keyUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keyUsages"
                  }
                ],
                "description": "SCEP Key Usage"
              },
              "keySize": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keySize"
                  }
                ],
                "description": "SCEP Key Size"
              },
              "hashAlgorithm": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.hashAlgorithms"
                  }
                ],
                "description": "SCEP Hash Algorithm"
              },
              "subjectAlternativeNameFormatString": {
                "type": "string",
                "description": "Custom String that defines the AAD Attribute.",
                "nullable": true
              },
              "managedDeviceCertificateStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceCertificateState"
                }
              }
            },
            "description": "Android SCEP certificate profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ],
          "rootCertificate": {
            "@odata.type": "microsoft.graph.androidTrustedRootCertificate"
          },
          "scepServerUrls": [
            "String"
          ],
          "subjectNameFormatString": "String",
          "keyUsage": {
            "@odata.type": "microsoft.graph.keyUsages"
          },
          "keySize": {
            "@odata.type": "microsoft.graph.keySize"
          },
          "hashAlgorithm": {
            "@odata.type": "microsoft.graph.hashAlgorithms"
          },
          "subjectAlternativeNameFormatString": "String",
          "managedDeviceCertificateStates": [
            {
              "@odata.type": "microsoft.graph.managedDeviceCertificateState"
            }
          ]
        }
      },
      "microsoft.graph.androidCustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidCustomConfiguration",
            "type": "object",
            "properties": {
              "omaSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.omaSetting"
                    }
                  ],
                  "nullable": true
                },
                "description": "OMA settings. This collection can contain a maximum of 1000 elements."
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the androidCustomConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.omaSetting": {
        "title": "omaSetting",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display Name."
          },
          "description": {
            "type": "string",
            "description": "Description.",
            "nullable": true
          },
          "omaUri": {
            "type": "string",
            "description": "OMA."
          }
        },
        "example": {
          "displayName": "String",
          "description": "String",
          "omaUri": "String"
        }
      },
      "microsoft.graph.omaSettingInteger": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.omaSetting"
          },
          {
            "title": "omaSettingInteger",
            "type": "object",
            "properties": {
              "value": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value.",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "description": "String",
          "omaUri": "String",
          "value": "Int32"
        }
      },
      "microsoft.graph.omaSettingFloatingPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.omaSetting"
          },
          {
            "title": "omaSettingFloatingPoint",
            "type": "object",
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Value.",
                "format": "float"
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "description": "String",
          "omaUri": "String",
          "value": "Single"
        }
      },
      "microsoft.graph.omaSettingString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.omaSetting"
          },
          {
            "title": "omaSettingString",
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value."
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "description": "String",
          "omaUri": "String",
          "value": "String"
        }
      },
      "microsoft.graph.omaSettingDateTime": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.omaSetting"
          },
          {
            "title": "omaSettingDateTime",
            "type": "object",
            "properties": {
              "value": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Value.",
                "format": "date-time"
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "description": "String",
          "omaUri": "String",
          "value": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.omaSettingStringXml": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.omaSetting"
          },
          {
            "title": "omaSettingStringXml",
            "type": "object",
            "properties": {
              "fileName": {
                "type": "string",
                "description": "File name associated with the Value property (*.xml).",
                "nullable": true
              },
              "value": {
                "type": "string",
                "description": "Value. (UTF8 encoded byte array)",
                "format": "base64url"
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "description": "String",
          "omaUri": "String",
          "fileName": "String",
          "value": "Binary"
        }
      },
      "microsoft.graph.omaSettingBoolean": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.omaSetting"
          },
          {
            "title": "omaSettingBoolean",
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "description": "Value."
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "description": "String",
          "omaUri": "String",
          "value": true
        }
      },
      "microsoft.graph.omaSettingBase64": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.omaSetting"
          },
          {
            "title": "omaSettingBase64",
            "type": "object",
            "properties": {
              "fileName": {
                "type": "string",
                "description": "File name associated with the Value property (*.cer | *.crt ).",
                "nullable": true
              },
              "value": {
                "type": "string",
                "description": "Value. (Base64 encoded string)"
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "description": "String",
          "omaUri": "String",
          "fileName": "String",
          "value": "String"
        }
      },
      "microsoft.graph.androidEasEmailProfileConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidEasEmailProfileConfiguration",
            "type": "object",
            "properties": {
              "accountName": {
                "type": "string",
                "description": "Exchange ActiveSync account name, displayed to users as name of EAS (this) profile."
              },
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.easAuthenticationMethod"
                  }
                ],
                "description": "Authentication method for Exchange ActiveSync."
              },
              "syncCalendar": {
                "type": "boolean",
                "description": "Toggles syncing the calendar. If set to false calendar is turned off on the device."
              },
              "syncContacts": {
                "type": "boolean",
                "description": "Toggles syncing contacts. If set to false contacts are turned off on the device."
              },
              "syncTasks": {
                "type": "boolean",
                "description": "Toggles syncing tasks. If set to false tasks are turned off on the device."
              },
              "syncNotes": {
                "type": "boolean",
                "description": "Toggles syncing notes. If set to false notes are turned off on the device."
              },
              "durationOfEmailToSync": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailSyncDuration"
                  }
                ],
                "description": "Duration of time email should be synced to."
              },
              "emailAddressSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.userEmailSource"
                  }
                ],
                "description": "Email attribute that is picked from AAD and injected into this profile before installing on the device."
              },
              "emailSyncSchedule": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailSyncSchedule"
                  }
                ],
                "description": "Email sync schedule."
              },
              "hostName": {
                "type": "string",
                "description": "Exchange location (URL) that the native mail app connects to."
              },
              "requireSmime": {
                "type": "boolean",
                "description": "Indicates whether or not to use S/MIME certificate."
              },
              "requireSsl": {
                "type": "boolean",
                "description": "Indicates whether or not to use SSL."
              },
              "usernameSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidUsernameSource"
                  }
                ],
                "description": "Username attribute that is picked from AAD and injected into this profile before installing on the device."
              },
              "identityCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidCertificateProfileBase"
                  }
                ],
                "nullable": true
              },
              "smimeSigningCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "By providing configurations in this profile you can instruct the native email client on KNOX devices to communicate with an Exchange server and get email, contacts, calendar, tasks, and notes. Furthermore, you can also specify how much email to sync and how often the device should sync."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "accountName": "String",
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.easAuthenticationMethod"
          },
          "syncCalendar": true,
          "syncContacts": true,
          "syncTasks": true,
          "syncNotes": true,
          "durationOfEmailToSync": {
            "@odata.type": "microsoft.graph.emailSyncDuration"
          },
          "emailAddressSource": {
            "@odata.type": "microsoft.graph.userEmailSource"
          },
          "emailSyncSchedule": {
            "@odata.type": "microsoft.graph.emailSyncSchedule"
          },
          "hostName": "String",
          "requireSmime": true,
          "requireSsl": true,
          "usernameSource": {
            "@odata.type": "microsoft.graph.androidUsernameSource"
          },
          "identityCertificate": {
            "@odata.type": "microsoft.graph.androidCertificateProfileBase"
          },
          "smimeSigningCertificate": {
            "@odata.type": "microsoft.graph.androidCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.androidForWorkCustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidForWorkCustomConfiguration",
            "type": "object",
            "properties": {
              "omaSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.omaSetting"
                    }
                  ],
                  "nullable": true
                },
                "description": "OMA settings. This collection can contain a maximum of 500 elements."
              }
            },
            "description": "Android For Work custom configuration"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.androidForWorkWiFiConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidForWorkWiFiConfiguration",
            "type": "object",
            "properties": {
              "networkName": {
                "type": "string",
                "description": "Network Name"
              },
              "ssid": {
                "type": "string",
                "description": "This is the name of the Wi-Fi network that is broadcast to all devices."
              },
              "connectAutomatically": {
                "type": "boolean",
                "description": "Connect automatically when this network is in range. Setting this to true will skip the user prompt and automatically connect the device to Wi-Fi network."
              },
              "connectWhenNetworkNameIsHidden": {
                "type": "boolean",
                "description": "When set to true, this profile forces the device to connect to a network that doesn't broadcast its SSID to all devices."
              },
              "wiFiSecurityType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidWiFiSecurityType"
                  }
                ],
                "description": "Indicates whether Wi-Fi endpoint uses an EAP based security type."
              }
            },
            "description": "By providing the configurations in this profile you can instruct the Android for Work device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user. This profile provides limited and simpler security types than Enterprise Wi-Fi profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "networkName": "String",
          "ssid": "String",
          "connectAutomatically": true,
          "connectWhenNetworkNameIsHidden": true,
          "wiFiSecurityType": {
            "@odata.type": "microsoft.graph.androidWiFiSecurityType"
          }
        }
      },
      "microsoft.graph.androidForWorkEnterpriseWiFiConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.androidForWorkWiFiConfiguration"
          },
          {
            "title": "androidForWorkEnterpriseWiFiConfiguration",
            "type": "object",
            "properties": {
              "eapType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidEapType"
                  }
                ],
                "description": "Indicates the type of EAP protocol set on the the Wi-Fi endpoint (router)."
              },
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.wiFiAuthenticationMethod"
                  }
                ],
                "description": "Indicates the Authentication Method the client (device) needs to use when the EAP Type is configured to PEAP or EAP-TTLS.",
                "nullable": true
              },
              "nonEapAuthenticationMethodForEapTtls": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.nonEapAuthenticationMethodForEapTtlsType"
                  }
                ],
                "description": "Non-EAP Method for Authentication (Inner Identity) when EAP Type is EAP-TTLS and Authenticationmethod is Username and Password.",
                "nullable": true
              },
              "nonEapAuthenticationMethodForPeap": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.nonEapAuthenticationMethodForPeap"
                  }
                ],
                "description": "Non-EAP Method for Authentication (Inner Identity) when EAP Type is PEAP and Authenticationmethod is Username and Password.",
                "nullable": true
              },
              "enableOuterIdentityPrivacy": {
                "type": "string",
                "description": "Enable identity privacy (Outer Identity) when EAP Type is configured to EAP-TTLS or PEAP. The String provided here is used to mask the username of individual users when they attempt to connect to Wi-Fi network.",
                "nullable": true
              },
              "rootCertificateForServerValidation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkTrustedRootCertificate"
                  }
                ],
                "nullable": true
              },
              "identityCertificateForClientAuthentication": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the Android for Work device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "networkName": "String",
          "ssid": "String",
          "connectAutomatically": true,
          "connectWhenNetworkNameIsHidden": true,
          "wiFiSecurityType": {
            "@odata.type": "microsoft.graph.androidWiFiSecurityType"
          },
          "eapType": {
            "@odata.type": "microsoft.graph.androidEapType"
          },
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.wiFiAuthenticationMethod"
          },
          "nonEapAuthenticationMethodForEapTtls": {
            "@odata.type": "microsoft.graph.nonEapAuthenticationMethodForEapTtlsType"
          },
          "nonEapAuthenticationMethodForPeap": {
            "@odata.type": "microsoft.graph.nonEapAuthenticationMethodForPeap"
          },
          "enableOuterIdentityPrivacy": "String",
          "rootCertificateForServerValidation": {
            "@odata.type": "microsoft.graph.androidForWorkTrustedRootCertificate"
          },
          "identityCertificateForClientAuthentication": {
            "@odata.type": "microsoft.graph.androidForWorkCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.androidForWorkGeneralDeviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidForWorkGeneralDeviceConfiguration",
            "type": "object",
            "properties": {
              "passwordBlockFingerprintUnlock": {
                "type": "boolean",
                "description": "Indicates whether or not to block fingerprint unlock."
              },
              "passwordBlockTrustAgents": {
                "type": "boolean",
                "description": "Indicates whether or not to block Smart Lock and other trust agents."
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires. Valid values 1 to 255",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passwords. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of sign in failures allowed before factory reset. Valid values 4 to 11",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkRequiredPasswordType"
                  }
                ],
                "description": "Type of password that is required."
              },
              "workProfileDataSharingType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkCrossProfileDataSharingType"
                  }
                ],
                "description": "Type of data sharing that is allowed."
              },
              "workProfileBlockNotificationsWhileDeviceLocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block notifications while device locked."
              },
              "blockCrossProfileCopyPaste": {
                "type": "boolean",
                "description": "Boolean that indicates if the setting disallow cross profile copy/paste is enabled."
              },
              "workProfileDefaultAppPermissionPolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkDefaultAppPermissionPolicyType"
                  }
                ],
                "description": "Type of password that is required."
              },
              "workProfilePasswordBlockFingerprintUnlock": {
                "type": "boolean",
                "description": "Indicates whether or not to block fingerprint unlock for work profile."
              },
              "workProfilePasswordBlockTrustAgents": {
                "type": "boolean",
                "description": "Indicates whether or not to block Smart Lock and other trust agents for work profile."
              },
              "workProfilePasswordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the work profile password expires. Valid values 1 to 255",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of work profile password. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous work profile passwords to block. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of sign in failures allowed before work profile is removed and all corporate data deleted. Valid values 4 to 11",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkRequiredPasswordType"
                  }
                ],
                "description": "Type of work profile password that is required."
              },
              "workProfileRequirePassword": {
                "type": "boolean",
                "description": "Password is required or not for work profile"
              },
              "requireAppVerify": {
                "type": "boolean",
                "description": "Require the Android Verify apps feature is turned on."
              }
            },
            "description": "Android For Work general device configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "passwordBlockFingerprintUnlock": true,
          "passwordBlockTrustAgents": true,
          "passwordExpirationDays": "Int32",
          "passwordMinimumLength": "Int32",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "Int32",
          "passwordPreviousPasswordBlockCount": "Int32",
          "passwordSignInFailureCountBeforeFactoryReset": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidForWorkRequiredPasswordType"
          },
          "workProfileDataSharingType": {
            "@odata.type": "microsoft.graph.androidForWorkCrossProfileDataSharingType"
          },
          "workProfileBlockNotificationsWhileDeviceLocked": true,
          "blockCrossProfileCopyPaste": true,
          "workProfileDefaultAppPermissionPolicy": {
            "@odata.type": "microsoft.graph.androidForWorkDefaultAppPermissionPolicyType"
          },
          "workProfilePasswordBlockFingerprintUnlock": true,
          "workProfilePasswordBlockTrustAgents": true,
          "workProfilePasswordExpirationDays": "Int32",
          "workProfilePasswordMinimumLength": "Int32",
          "workProfilePasswordMinutesOfInactivityBeforeScreenTimeout": "Int32",
          "workProfilePasswordPreviousPasswordBlockCount": "Int32",
          "workProfilePasswordSignInFailureCountBeforeFactoryReset": "Int32",
          "workProfilePasswordRequiredType": {
            "@odata.type": "microsoft.graph.androidForWorkRequiredPasswordType"
          },
          "workProfileRequirePassword": true,
          "requireAppVerify": true
        }
      },
      "microsoft.graph.androidForWorkVpnConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidForWorkVpnConfiguration",
            "type": "object",
            "properties": {
              "connectionName": {
                "type": "string",
                "description": "Connection name displayed to the user."
              },
              "connectionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkVpnConnectionType"
                  }
                ],
                "description": "Connection type."
              },
              "role": {
                "type": "string",
                "description": "Role when connection type is set to Pulse Secure.",
                "nullable": true
              },
              "realm": {
                "type": "string",
                "description": "Realm when connection type is set to Pulse Secure.",
                "nullable": true
              },
              "servers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.vpnServer"
                },
                "description": "List of VPN Servers on the network. Make sure end users can access these network locations. This collection can contain a maximum of 500 elements."
              },
              "fingerprint": {
                "type": "string",
                "description": "Fingerprint is a string that will be used to verify the VPN server can be trusted, which is only applicable when connection type is Check Point Capsule VPN.",
                "nullable": true
              },
              "customData": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.keyValue"
                    }
                  ],
                  "nullable": true
                },
                "description": "Custom data when connection type is set to Citrix. This collection can contain a maximum of 25 elements."
              },
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vpnAuthenticationMethod"
                  }
                ],
                "description": "Authentication method."
              },
              "identityCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidForWorkCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the Android device to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "connectionName": "String",
          "connectionType": {
            "@odata.type": "microsoft.graph.androidForWorkVpnConnectionType"
          },
          "role": "String",
          "realm": "String",
          "servers": [
            {
              "@odata.type": "microsoft.graph.vpnServer"
            }
          ],
          "fingerprint": "String",
          "customData": [
            {
              "@odata.type": "microsoft.graph.keyValue"
            }
          ],
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.vpnAuthenticationMethod"
          },
          "identityCertificate": {
            "@odata.type": "microsoft.graph.androidForWorkCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.vpnServer": {
        "title": "vpnServer",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description.",
            "nullable": true
          },
          "ipAddressOrFqdn": {
            "type": "string",
            "description": "IP Address or FQDN.",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address (IP address, FQDN or URL)"
          },
          "isDefaultServer": {
            "type": "boolean",
            "description": "Default server."
          }
        },
        "example": {
          "description": "String",
          "ipAddressOrFqdn": "String",
          "address": "String",
          "isDefaultServer": true
        }
      },
      "microsoft.graph.androidGeneralDeviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidGeneralDeviceConfiguration",
            "type": "object",
            "properties": {
              "appsBlockClipboardSharing": {
                "type": "boolean",
                "description": "Indicates whether or not to block clipboard sharing to copy and paste between applications."
              },
              "appsBlockCopyPaste": {
                "type": "boolean",
                "description": "Indicates whether or not to block copy and paste within applications."
              },
              "appsBlockYouTube": {
                "type": "boolean",
                "description": "Indicates whether or not to block the YouTube app."
              },
              "bluetoothBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block Bluetooth."
              },
              "cameraBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the use of the camera."
              },
              "cellularBlockDataRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block data roaming."
              },
              "cellularBlockMessaging": {
                "type": "boolean",
                "description": "Indicates whether or not to block SMS/MMS messaging."
              },
              "cellularBlockVoiceRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block voice roaming."
              },
              "cellularBlockWiFiTethering": {
                "type": "boolean",
                "description": "Indicates whether or not to block syncing Wi-Fi tethering."
              },
              "compliantAppsList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements."
              },
              "compliantAppListType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appListType"
                  }
                ],
                "description": "Type of list that is in the CompliantAppsList."
              },
              "diagnosticDataBlockSubmission": {
                "type": "boolean",
                "description": "Indicates whether or not to block diagnostic data submission."
              },
              "locationServicesBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block location services."
              },
              "googleAccountBlockAutoSync": {
                "type": "boolean",
                "description": "Indicates whether or not to block Google account auto sync."
              },
              "googlePlayStoreBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the Google Play store."
              },
              "kioskModeBlockSleepButton": {
                "type": "boolean",
                "description": "Indicates whether or not to block the screen sleep button while in Kiosk Mode."
              },
              "kioskModeBlockVolumeButtons": {
                "type": "boolean",
                "description": "Indicates whether or not to block the volume buttons while in Kiosk Mode."
              },
              "dateAndTimeBlockChanges": {
                "type": "boolean",
                "description": "Indicates whether or not to block changing date and time while in KNOX Mode."
              },
              "kioskModeApps": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "A list of apps that will be allowed to run when the device is in Kiosk Mode. This collection can contain a maximum of 500 elements."
              },
              "nfcBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block Near-Field Communication."
              },
              "passwordBlockFingerprintUnlock": {
                "type": "boolean",
                "description": "Indicates whether or not to block fingerprint unlock."
              },
              "passwordBlockTrustAgents": {
                "type": "boolean",
                "description": "Indicates whether or not to block Smart Lock and other trust agents."
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires. Valid values 1 to 255",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passwords. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of sign in failures allowed before factory reset. Valid values 4 to 11",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidRequiredPasswordType"
                  }
                ],
                "description": "Type of password that is required."
              },
              "passwordRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require a password."
              },
              "powerOffBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block powering off the device."
              },
              "factoryResetBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block user performing a factory reset."
              },
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block screenshots."
              },
              "deviceSharingAllowed": {
                "type": "boolean",
                "description": "Indicates whether or not to allow device sharing mode."
              },
              "storageBlockGoogleBackup": {
                "type": "boolean",
                "description": "Indicates whether or not to block Google Backup."
              },
              "storageBlockRemovableStorage": {
                "type": "boolean",
                "description": "Indicates whether or not to block removable storage usage."
              },
              "storageRequireDeviceEncryption": {
                "type": "boolean",
                "description": "Indicates whether or not to require device encryption."
              },
              "storageRequireRemovableStorageEncryption": {
                "type": "boolean",
                "description": "Indicates whether or not to require removable storage encryption."
              },
              "voiceAssistantBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the use of the Voice Assistant."
              },
              "voiceDialingBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block voice dialing."
              },
              "webBrowserBlockPopups": {
                "type": "boolean",
                "description": "Indicates whether or not to block popups within the web browser."
              },
              "webBrowserBlockAutofill": {
                "type": "boolean",
                "description": "Indicates whether or not to block the web browser's auto fill feature."
              },
              "webBrowserBlockJavaScript": {
                "type": "boolean",
                "description": "Indicates whether or not to block JavaScript within the web browser."
              },
              "webBrowserBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the web browser."
              },
              "webBrowserCookieSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.webBrowserCookieSettings"
                  }
                ],
                "description": "Cookie settings within the web browser."
              },
              "wiFiBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block syncing Wi-Fi."
              },
              "appsInstallAllowList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps which can be installed on the KNOX device. This collection can contain a maximum of 500 elements."
              },
              "appsLaunchBlockList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps which are blocked from being launched on the KNOX device. This collection can contain a maximum of 500 elements."
              },
              "appsHideList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps to be hidden on the KNOX device. This collection can contain a maximum of 500 elements."
              },
              "requireAppVerify": {
                "type": "boolean",
                "description": "Require the Android Verify apps feature is turned on."
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the androidGeneralDeviceConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "appsBlockClipboardSharing": true,
          "appsBlockCopyPaste": true,
          "appsBlockYouTube": true,
          "bluetoothBlocked": true,
          "cameraBlocked": true,
          "cellularBlockDataRoaming": true,
          "cellularBlockMessaging": true,
          "cellularBlockVoiceRoaming": true,
          "cellularBlockWiFiTethering": true,
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "diagnosticDataBlockSubmission": true,
          "locationServicesBlocked": true,
          "googleAccountBlockAutoSync": true,
          "googlePlayStoreBlocked": true,
          "kioskModeBlockSleepButton": true,
          "kioskModeBlockVolumeButtons": true,
          "dateAndTimeBlockChanges": true,
          "kioskModeApps": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "nfcBlocked": true,
          "passwordBlockFingerprintUnlock": true,
          "passwordBlockTrustAgents": true,
          "passwordExpirationDays": "Int32",
          "passwordMinimumLength": "Int32",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "Int32",
          "passwordPreviousPasswordBlockCount": "Int32",
          "passwordSignInFailureCountBeforeFactoryReset": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidRequiredPasswordType"
          },
          "passwordRequired": true,
          "powerOffBlocked": true,
          "factoryResetBlocked": true,
          "screenCaptureBlocked": true,
          "deviceSharingAllowed": true,
          "storageBlockGoogleBackup": true,
          "storageBlockRemovableStorage": true,
          "storageRequireDeviceEncryption": true,
          "storageRequireRemovableStorageEncryption": true,
          "voiceAssistantBlocked": true,
          "voiceDialingBlocked": true,
          "webBrowserBlockPopups": true,
          "webBrowserBlockAutofill": true,
          "webBrowserBlockJavaScript": true,
          "webBrowserBlocked": true,
          "webBrowserCookieSettings": {
            "@odata.type": "microsoft.graph.webBrowserCookieSettings"
          },
          "wiFiBlocked": true,
          "appsInstallAllowList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appsLaunchBlockList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appsHideList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "requireAppVerify": true
        }
      },
      "microsoft.graph.appListItem": {
        "title": "appListItem",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The application name"
          },
          "publisher": {
            "type": "string",
            "description": "The publisher of the application",
            "nullable": true
          },
          "appStoreUrl": {
            "type": "string",
            "description": "The Store URL of the application",
            "nullable": true
          },
          "appId": {
            "type": "string",
            "description": "The application or bundle identifier of the application",
            "nullable": true
          }
        },
        "example": {
          "name": "String",
          "publisher": "String",
          "appStoreUrl": "String",
          "appId": "String"
        }
      },
      "microsoft.graph.appsComplianceListItem": {
        "title": "appsComplianceListItem",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The application name"
          },
          "publisher": {
            "type": "string",
            "description": "The publisher of the application",
            "nullable": true
          },
          "appStoreUrl": {
            "type": "string",
            "description": "The Store URL of the application",
            "nullable": true
          },
          "appId": {
            "type": "string",
            "description": "The application or bundle identifier of the application",
            "nullable": true
          }
        },
        "example": {
          "name": "String",
          "publisher": "String",
          "appStoreUrl": "String",
          "appId": "String"
        }
      },
      "microsoft.graph.androidVpnConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidVpnConfiguration",
            "type": "object",
            "properties": {
              "connectionName": {
                "type": "string",
                "description": "Connection name displayed to the user."
              },
              "connectionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidVpnConnectionType"
                  }
                ],
                "description": "Connection type."
              },
              "role": {
                "type": "string",
                "description": "Role when connection type is set to Pulse Secure.",
                "nullable": true
              },
              "realm": {
                "type": "string",
                "description": "Realm when connection type is set to Pulse Secure.",
                "nullable": true
              },
              "servers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.vpnServer"
                },
                "description": "List of VPN Servers on the network. Make sure end users can access these network locations. This collection can contain a maximum of 500 elements."
              },
              "fingerprint": {
                "type": "string",
                "description": "Fingerprint is a string that will be used to verify the VPN server can be trusted, which is only applicable when connection type is Check Point Capsule VPN.",
                "nullable": true
              },
              "customData": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.keyValue"
                    }
                  ],
                  "nullable": true
                },
                "description": "Custom data when connection type is set to Citrix. This collection can contain a maximum of 25 elements."
              },
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vpnAuthenticationMethod"
                  }
                ],
                "description": "Authentication method."
              },
              "identityCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the Android device to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "connectionName": "String",
          "connectionType": {
            "@odata.type": "microsoft.graph.androidVpnConnectionType"
          },
          "role": "String",
          "realm": "String",
          "servers": [
            {
              "@odata.type": "microsoft.graph.vpnServer"
            }
          ],
          "fingerprint": "String",
          "customData": [
            {
              "@odata.type": "microsoft.graph.keyValue"
            }
          ],
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.vpnAuthenticationMethod"
          },
          "identityCertificate": {
            "@odata.type": "microsoft.graph.androidCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.androidWiFiConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidWiFiConfiguration",
            "type": "object",
            "properties": {
              "networkName": {
                "type": "string",
                "description": "Network Name"
              },
              "ssid": {
                "type": "string",
                "description": "This is the name of the Wi-Fi network that is broadcast to all devices."
              },
              "connectAutomatically": {
                "type": "boolean",
                "description": "Connect automatically when this network is in range. Setting this to true will skip the user prompt and automatically connect the device to Wi-Fi network."
              },
              "connectWhenNetworkNameIsHidden": {
                "type": "boolean",
                "description": "When set to true, this profile forces the device to connect to a network that doesn't broadcast its SSID to all devices."
              },
              "wiFiSecurityType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidWiFiSecurityType"
                  }
                ],
                "description": "Indicates whether Wi-Fi endpoint uses an EAP based security type."
              }
            },
            "description": "By providing the configurations in this profile you can instruct the Android device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user. This profile provides limited and simpler security types than Enterprise Wi-Fi profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "networkName": "String",
          "ssid": "String",
          "connectAutomatically": true,
          "connectWhenNetworkNameIsHidden": true,
          "wiFiSecurityType": {
            "@odata.type": "microsoft.graph.androidWiFiSecurityType"
          }
        }
      },
      "microsoft.graph.androidEnterpriseWiFiConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.androidWiFiConfiguration"
          },
          {
            "title": "androidEnterpriseWiFiConfiguration",
            "type": "object",
            "properties": {
              "eapType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidEapType"
                  }
                ],
                "description": "Indicates the type of EAP protocol set on the the Wi-Fi endpoint (router)."
              },
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.wiFiAuthenticationMethod"
                  }
                ],
                "description": "Indicates the Authentication Method the client (device) needs to use when the EAP Type is configured to PEAP or EAP-TTLS.",
                "nullable": true
              },
              "innerAuthenticationProtocolForEapTtls": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.nonEapAuthenticationMethodForEapTtlsType"
                  }
                ],
                "description": "Non-EAP Method for Authentication (Inner Identity) when EAP Type is EAP-TTLS and Authenticationmethod is Username and Password.",
                "nullable": true
              },
              "innerAuthenticationProtocolForPeap": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.nonEapAuthenticationMethodForPeap"
                  }
                ],
                "description": "Non-EAP Method for Authentication (Inner Identity) when EAP Type is PEAP and Authenticationmethod is Username and Password.",
                "nullable": true
              },
              "outerIdentityPrivacyTemporaryValue": {
                "type": "string",
                "description": "Enable identity privacy (Outer Identity) when EAP Type is configured to EAP-TTLS or PEAP. The String provided here is used to mask the username of individual users when they attempt to connect to Wi-Fi network.",
                "nullable": true
              },
              "rootCertificateForServerValidation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidTrustedRootCertificate"
                  }
                ],
                "nullable": true
              },
              "identityCertificateForClientAuthentication": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the Android device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "networkName": "String",
          "ssid": "String",
          "connectAutomatically": true,
          "connectWhenNetworkNameIsHidden": true,
          "wiFiSecurityType": {
            "@odata.type": "microsoft.graph.androidWiFiSecurityType"
          },
          "eapType": {
            "@odata.type": "microsoft.graph.androidEapType"
          },
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.wiFiAuthenticationMethod"
          },
          "innerAuthenticationProtocolForEapTtls": {
            "@odata.type": "microsoft.graph.nonEapAuthenticationMethodForEapTtlsType"
          },
          "innerAuthenticationProtocolForPeap": {
            "@odata.type": "microsoft.graph.nonEapAuthenticationMethodForPeap"
          },
          "outerIdentityPrivacyTemporaryValue": "String",
          "rootCertificateForServerValidation": {
            "@odata.type": "microsoft.graph.androidTrustedRootCertificate"
          },
          "identityCertificateForClientAuthentication": {
            "@odata.type": "microsoft.graph.androidCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.iosCertificateProfileBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosCertificateProfileBase",
            "type": "object",
            "properties": {
              "renewalThresholdPercentage": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Certificate renewal threshold percentage. Valid values 1 to 99",
                "format": "int32"
              },
              "subjectNameFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appleSubjectNameFormat"
                  }
                ],
                "description": "Certificate Subject Name Format."
              },
              "subjectAlternativeNameType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.subjectAlternativeNameType"
                  }
                ],
                "description": "Certificate Subject Alternative Name type."
              },
              "certificateValidityPeriodValue": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value for the Certificate Validity Period.",
                "format": "int32"
              },
              "certificateValidityPeriodScale": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.certificateValidityPeriodScale"
                  }
                ],
                "description": "Scale for the Certificate Validity Period."
              }
            },
            "description": "iOS certificate profile base."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.appleSubjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          }
        }
      },
      "microsoft.graph.iosPkcsCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.iosCertificateProfileBase"
          },
          {
            "title": "iosPkcsCertificateProfile",
            "type": "object",
            "properties": {
              "certificationAuthority": {
                "type": "string",
                "description": "PKCS Certification Authority."
              },
              "certificationAuthorityName": {
                "type": "string",
                "description": "PKCS Certification Authority Name."
              },
              "certificateTemplateName": {
                "type": "string",
                "description": "PKCS Certificate Template Name."
              },
              "subjectAlternativeNameFormatString": {
                "type": "string",
                "description": "Custom String that defines the AAD Attribute.",
                "nullable": true
              }
            },
            "description": "iOS PKCS certificate profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.appleSubjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "certificationAuthority": "String",
          "certificationAuthorityName": "String",
          "certificateTemplateName": "String",
          "subjectAlternativeNameFormatString": "String"
        }
      },
      "microsoft.graph.iosScepCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.iosCertificateProfileBase"
          },
          {
            "title": "iosScepCertificateProfile",
            "type": "object",
            "properties": {
              "scepServerUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "SCEP Server Url(s)."
              },
              "subjectNameFormatString": {
                "type": "string",
                "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
                "nullable": true
              },
              "keyUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keyUsages"
                  }
                ],
                "description": "SCEP Key Usage."
              },
              "keySize": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keySize"
                  }
                ],
                "description": "SCEP Key Size."
              },
              "extendedKeyUsages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extendedKeyUsage"
                },
                "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements."
              },
              "subjectAlternativeNameFormatString": {
                "type": "string",
                "description": "Custom String that defines the AAD Attribute.",
                "nullable": true
              },
              "rootCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosTrustedRootCertificate"
                  }
                ],
                "nullable": true
              },
              "managedDeviceCertificateStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceCertificateState"
                }
              }
            },
            "description": "iOS SCEP certificate profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.appleSubjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "scepServerUrls": [
            "String"
          ],
          "subjectNameFormatString": "String",
          "keyUsage": {
            "@odata.type": "microsoft.graph.keyUsages"
          },
          "keySize": {
            "@odata.type": "microsoft.graph.keySize"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ],
          "subjectAlternativeNameFormatString": "String",
          "rootCertificate": {
            "@odata.type": "microsoft.graph.iosTrustedRootCertificate"
          },
          "managedDeviceCertificateStates": [
            {
              "@odata.type": "microsoft.graph.managedDeviceCertificateState"
            }
          ]
        }
      },
      "microsoft.graph.iosTrustedRootCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosTrustedRootCertificate",
            "type": "object",
            "properties": {
              "trustedRootCertificate": {
                "type": "string",
                "description": "Trusted Root Certificate.",
                "format": "base64url"
              },
              "certFileName": {
                "type": "string",
                "description": "File name to display in UI.",
                "nullable": true
              }
            },
            "description": "iOS Trusted Root Certificate configuration profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "trustedRootCertificate": "Binary",
          "certFileName": "String"
        }
      },
      "microsoft.graph.iosCustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosCustomConfiguration",
            "type": "object",
            "properties": {
              "payloadName": {
                "type": "string",
                "description": "Name that is displayed to the user."
              },
              "payloadFileName": {
                "type": "string",
                "description": "Payload file name (*.mobileconfig | *.xml).",
                "nullable": true
              },
              "payload": {
                "type": "string",
                "description": "Payload. (UTF8 encoded byte array)",
                "format": "base64url"
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the iosCustomConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "payloadName": "String",
          "payloadFileName": "String",
          "payload": "Binary"
        }
      },
      "microsoft.graph.iosEasEmailProfileConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosEasEmailProfileConfiguration",
            "type": "object",
            "properties": {
              "accountName": {
                "type": "string",
                "description": "Account name."
              },
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.easAuthenticationMethod"
                  }
                ],
                "description": "Authentication method for this Email profile.",
                "nullable": true
              },
              "blockMovingMessagesToOtherEmailAccounts": {
                "type": "boolean",
                "description": "Indicates whether or not to block moving messages to other email accounts."
              },
              "blockSendingEmailFromThirdPartyApps": {
                "type": "boolean",
                "description": "Indicates whether or not to block sending email from third party apps."
              },
              "blockSyncingRecentlyUsedEmailAddresses": {
                "type": "boolean",
                "description": "Indicates whether or not to block syncing recently used email addresses, for instance - when composing new email."
              },
              "durationOfEmailToSync": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailSyncDuration"
                  }
                ],
                "description": "Duration of time email should be synced back to. "
              },
              "emailAddressSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.userEmailSource"
                  }
                ],
                "description": "Email attribute that is picked from AAD and injected into this profile before installing on the device."
              },
              "hostName": {
                "type": "string",
                "description": "Exchange location that (URL) that the native mail app connects to."
              },
              "requireSmime": {
                "type": "boolean",
                "description": "Indicates whether or not to use S/MIME certificate."
              },
              "requireSsl": {
                "type": "boolean",
                "description": "Indicates whether or not to use SSL."
              },
              "usernameSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.userEmailSource"
                  }
                ],
                "description": "Username attribute that is picked from AAD and injected into this profile before installing on the device."
              },
              "identityCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosCertificateProfileBase"
                  }
                ],
                "nullable": true
              },
              "smimeSigningCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "By providing configurations in this profile you can instruct the native email client on iOS devices to communicate with an Exchange server and get email, contacts, calendar, reminders, and notes. Furthermore, you can also specify how much email to sync and how often the device should sync."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "accountName": "String",
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.easAuthenticationMethod"
          },
          "blockMovingMessagesToOtherEmailAccounts": true,
          "blockSendingEmailFromThirdPartyApps": true,
          "blockSyncingRecentlyUsedEmailAddresses": true,
          "durationOfEmailToSync": {
            "@odata.type": "microsoft.graph.emailSyncDuration"
          },
          "emailAddressSource": {
            "@odata.type": "microsoft.graph.userEmailSource"
          },
          "hostName": "String",
          "requireSmime": true,
          "requireSsl": true,
          "usernameSource": {
            "@odata.type": "microsoft.graph.userEmailSource"
          },
          "identityCertificate": {
            "@odata.type": "microsoft.graph.iosCertificateProfileBase"
          },
          "smimeSigningCertificate": {
            "@odata.type": "microsoft.graph.iosCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.iosEduDeviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosEduDeviceConfiguration",
            "type": "object",
            "properties": {
              "teacherCertificateSettings": {
                "$ref": "#/components/schemas/microsoft.graph.iosEduCertificateSettings"
              },
              "studentCertificateSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosEduCertificateSettings"
                  }
                ],
                "description": "The Trusted Root and PFX certificates for Student",
                "nullable": true
              },
              "deviceCertificateSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosEduCertificateSettings"
                  }
                ],
                "description": "The Trusted Root and PFX certificates for Device",
                "nullable": true
              }
            },
            "description": "iOS Education device configuration"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "teacherCertificateSettings": {
            "@odata.type": "microsoft.graph.iosEduCertificateSettings"
          },
          "studentCertificateSettings": {
            "@odata.type": "microsoft.graph.iosEduCertificateSettings"
          },
          "deviceCertificateSettings": {
            "@odata.type": "microsoft.graph.iosEduCertificateSettings"
          }
        }
      },
      "microsoft.graph.iosEduCertificateSettings": {
        "title": "iosEduCertificateSettings",
        "type": "object",
        "properties": {
          "trustedRootCertificate": {
            "type": "string",
            "description": "Trusted Root Certificate.",
            "format": "base64url"
          },
          "certFileName": {
            "type": "string",
            "description": "File name to display in UI.",
            "nullable": true
          },
          "certificationAuthority": {
            "type": "string",
            "description": "PKCS Certification Authority."
          },
          "certificationAuthorityName": {
            "type": "string",
            "description": "PKCS Certification Authority Name."
          },
          "certificateTemplateName": {
            "type": "string",
            "description": "PKCS Certificate Template Name."
          },
          "renewalThresholdPercentage": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Certificate renewal threshold percentage. Valid values 1 to 99",
            "format": "int32"
          },
          "certificateValidityPeriodValue": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Value for the Certificate Validity Period.",
            "format": "int32"
          },
          "certificateValidityPeriodScale": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.certificateValidityPeriodScale"
              }
            ],
            "description": "Scale for the Certificate Validity Period."
          }
        },
        "example": {
          "trustedRootCertificate": "Binary",
          "certFileName": "String",
          "certificationAuthority": "String",
          "certificationAuthorityName": "String",
          "certificateTemplateName": "String",
          "renewalThresholdPercentage": "Int32",
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          }
        }
      },
      "microsoft.graph.iosEducationDeviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosEducationDeviceConfiguration",
            "type": "object",
            "description": "iOS Education configuration profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ]
        }
      },
      "microsoft.graph.iosGeneralDeviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosGeneralDeviceConfiguration",
            "type": "object",
            "properties": {
              "accountBlockModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow account modification when the device is in supervised mode."
              },
              "activationLockAllowWhenSupervised": {
                "type": "boolean",
                "description": "Indicates whether or not to allow activation lock when the device is in the supervised mode."
              },
              "airDropBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to allow AirDrop when the device is in supervised mode."
              },
              "airDropForceUnmanagedDropTarget": {
                "type": "boolean",
                "description": "Indicates whether or not to cause AirDrop to be considered an unmanaged drop target (iOS 9.0 and later)."
              },
              "airPlayForcePairingPasswordForOutgoingRequests": {
                "type": "boolean",
                "description": "Indicates whether or not to enforce all devices receiving AirPlay requests from this device to use a pairing password."
              },
              "appleWatchBlockPairing": {
                "type": "boolean",
                "description": "Indicates whether or not to allow Apple Watch pairing when the device is in supervised mode (iOS 9.0 and later)."
              },
              "appleWatchForceWristDetection": {
                "type": "boolean",
                "description": "Indicates whether or not to force a paired Apple Watch to use Wrist Detection (iOS 8.2 and later)."
              },
              "appleNewsBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using News when the device is in supervised mode (iOS 9.0 and later)."
              },
              "appsSingleAppModeList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "Gets or sets the list of iOS apps allowed to autonomously enter Single App Mode. Supervised only. iOS 7.0 and later. This collection can contain a maximum of 500 elements."
              },
              "appsVisibilityList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps in the visibility list (either visible/launchable apps list or hidden/unlaunchable apps list, controlled by AppsVisibilityListType) (iOS 9.3 and later). This collection can contain a maximum of 10000 elements."
              },
              "appsVisibilityListType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appListType"
                  }
                ],
                "description": "Type of list that is in the AppsVisibilityList."
              },
              "appStoreBlockAutomaticDownloads": {
                "type": "boolean",
                "description": "Indicates whether or not to block the automatic downloading of apps purchased on other devices when the device is in supervised mode (iOS 9.0 and later)."
              },
              "appStoreBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using the App Store."
              },
              "appStoreBlockInAppPurchases": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from making in app purchases."
              },
              "appStoreBlockUIAppInstallation": {
                "type": "boolean",
                "description": "Indicates whether or not to block the App Store app, not restricting installation through Host apps. Applies to supervised mode only (iOS 9.0 and later)."
              },
              "appStoreRequirePassword": {
                "type": "boolean",
                "description": "Indicates whether or not to require a password when using the app store."
              },
              "bluetoothBlockModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow modification of Bluetooth settings when the device is in supervised mode (iOS 10.0 and later)."
              },
              "cameraBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from accessing the camera of the device."
              },
              "cellularBlockDataRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block data roaming."
              },
              "cellularBlockGlobalBackgroundFetchWhileRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block global background fetch while roaming."
              },
              "cellularBlockPerAppDataModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow changes to cellular app data usage settings when the device is in supervised mode."
              },
              "cellularBlockPersonalHotspot": {
                "type": "boolean",
                "description": "Indicates whether or not to block Personal Hotspot."
              },
              "cellularBlockVoiceRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block voice roaming."
              },
              "certificatesBlockUntrustedTlsCertificates": {
                "type": "boolean",
                "description": "Indicates whether or not to block untrusted TLS certificates."
              },
              "classroomAppBlockRemoteScreenObservation": {
                "type": "boolean",
                "description": "Indicates whether or not to allow remote screen observation by Classroom app when the device is in supervised mode (iOS 9.3 and later)."
              },
              "classroomAppForceUnpromptedScreenObservation": {
                "type": "boolean",
                "description": "Indicates whether or not to automatically give permission to the teacher of a managed course on the Classroom app to view a student's screen without prompting when the device is in supervised mode."
              },
              "compliantAppsList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements."
              },
              "compliantAppListType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appListType"
                  }
                ],
                "description": "List that is in the AppComplianceList."
              },
              "configurationProfileBlockChanges": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from installing configuration profiles and certificates interactively when the device is in supervised mode."
              },
              "definitionLookupBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block definition lookup when the device is in supervised mode (iOS 8.1.3 and later )."
              },
              "deviceBlockEnableRestrictions": {
                "type": "boolean",
                "description": "Indicates whether or not to allow the user to enables restrictions in the device settings when the device is in supervised mode."
              },
              "deviceBlockEraseContentAndSettings": {
                "type": "boolean",
                "description": "Indicates whether or not to allow the use of the 'Erase all content and settings' option on the device when the device is in supervised mode."
              },
              "deviceBlockNameModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow device name modification when the device is in supervised mode (iOS 9.0 and later)."
              },
              "diagnosticDataBlockSubmission": {
                "type": "boolean",
                "description": "Indicates whether or not to block diagnostic data submission."
              },
              "diagnosticDataBlockSubmissionModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow diagnostics submission settings modification when the device is in supervised mode (iOS 9.3.2 and later)."
              },
              "documentsBlockManagedDocumentsInUnmanagedApps": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from viewing managed documents in unmanaged apps."
              },
              "documentsBlockUnmanagedDocumentsInManagedApps": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from viewing unmanaged documents in managed apps."
              },
              "emailInDomainSuffixes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "An email address lacking a suffix that matches any of these strings will be considered out-of-domain."
              },
              "enterpriseAppBlockTrust": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from trusting an enterprise app."
              },
              "enterpriseAppBlockTrustModification": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from modifying the enterprise app trust settings."
              },
              "faceTimeBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using FaceTime."
              },
              "findMyFriendsBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block Find My Friends when the device is in supervised mode."
              },
              "gamingBlockGameCenterFriends": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from having friends in Game Center."
              },
              "gamingBlockMultiplayer": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using multiplayer gaming."
              },
              "gameCenterBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using Game Center when the device is in supervised mode."
              },
              "hostPairingBlocked": {
                "type": "boolean",
                "description": "indicates whether or not to allow host pairing to control the devices an iOS device can pair with when the iOS device is in supervised mode."
              },
              "iBooksStoreBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using the iBooks Store when the device is in supervised mode."
              },
              "iBooksStoreBlockErotica": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from downloading media from the iBookstore that has been tagged as erotica."
              },
              "iCloudBlockActivityContinuation": {
                "type": "boolean",
                "description": "Indicates whether or not to block  the the user from continuing work they started on iOS device to another iOS or macOS device."
              },
              "iCloudBlockBackup": {
                "type": "boolean",
                "description": "Indicates whether or not to block iCloud backup."
              },
              "iCloudBlockDocumentSync": {
                "type": "boolean",
                "description": "Indicates whether or not to block iCloud document sync."
              },
              "iCloudBlockManagedAppsSync": {
                "type": "boolean",
                "description": "Indicates whether or not to block Managed Apps Cloud Sync."
              },
              "iCloudBlockPhotoLibrary": {
                "type": "boolean",
                "description": "Indicates whether or not to block iCloud Photo Library."
              },
              "iCloudBlockPhotoStreamSync": {
                "type": "boolean",
                "description": "Indicates whether or not to block iCloud Photo Stream Sync."
              },
              "iCloudBlockSharedPhotoStream": {
                "type": "boolean",
                "description": "Indicates whether or not to block Shared Photo Stream."
              },
              "iCloudRequireEncryptedBackup": {
                "type": "boolean",
                "description": "Indicates whether or not to require backups to iCloud be encrypted."
              },
              "iTunesBlockExplicitContent": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from accessing explicit content in iTunes and the App Store."
              },
              "iTunesBlockMusicService": {
                "type": "boolean",
                "description": "Indicates whether or not to block Music service and revert Music app to classic mode when the device is in supervised mode (iOS 9.3 and later and macOS 10.12 and later)."
              },
              "iTunesBlockRadio": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using iTunes Radio when the device is in supervised mode (iOS 9.3 and later)."
              },
              "keyboardBlockAutoCorrect": {
                "type": "boolean",
                "description": "Indicates whether or not to block keyboard auto-correction when the device is in supervised mode (iOS 8.1.3 and later)."
              },
              "keyboardBlockDictation": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using dictation input when the device is in supervised mode."
              },
              "keyboardBlockPredictive": {
                "type": "boolean",
                "description": "Indicates whether or not to block predictive keyboards when device is in supervised mode (iOS 8.1.3 and later)."
              },
              "keyboardBlockShortcuts": {
                "type": "boolean",
                "description": "Indicates whether or not to block keyboard shortcuts when the device is in supervised mode (iOS 9.0 and later)."
              },
              "keyboardBlockSpellCheck": {
                "type": "boolean",
                "description": "Indicates whether or not to block keyboard spell-checking when the device is in supervised mode (iOS 8.1.3 and later)."
              },
              "kioskModeAllowAssistiveSpeak": {
                "type": "boolean",
                "description": "Indicates whether or not to allow assistive speak while in kiosk mode."
              },
              "kioskModeAllowAssistiveTouchSettings": {
                "type": "boolean",
                "description": "Indicates whether or not to allow access to the Assistive Touch Settings while in kiosk mode."
              },
              "kioskModeAllowAutoLock": {
                "type": "boolean",
                "description": "Indicates whether or not to allow device auto lock while in kiosk mode."
              },
              "kioskModeAllowColorInversionSettings": {
                "type": "boolean",
                "description": "Indicates whether or not to allow access to the Color Inversion Settings while in kiosk mode."
              },
              "kioskModeAllowRingerSwitch": {
                "type": "boolean",
                "description": "Indicates whether or not to allow use of the ringer switch while in kiosk mode."
              },
              "kioskModeAllowScreenRotation": {
                "type": "boolean",
                "description": "Indicates whether or not to allow screen rotation while in kiosk mode."
              },
              "kioskModeAllowSleepButton": {
                "type": "boolean",
                "description": "Indicates whether or not to allow use of the sleep button while in kiosk mode."
              },
              "kioskModeAllowTouchscreen": {
                "type": "boolean",
                "description": "Indicates whether or not to allow use of the touchscreen while in kiosk mode."
              },
              "kioskModeAllowVoiceOverSettings": {
                "type": "boolean",
                "description": "Indicates whether or not to allow access to the voice over settings while in kiosk mode."
              },
              "kioskModeAllowVolumeButtons": {
                "type": "boolean",
                "description": "Indicates whether or not to allow use of the volume buttons while in kiosk mode."
              },
              "kioskModeAllowZoomSettings": {
                "type": "boolean",
                "description": "Indicates whether or not to allow access to the zoom settings while in kiosk mode."
              },
              "kioskModeAppStoreUrl": {
                "type": "string",
                "description": "URL in the app store to the app to use for kiosk mode. Use if KioskModeManagedAppId is not known.",
                "nullable": true
              },
              "kioskModeRequireAssistiveTouch": {
                "type": "boolean",
                "description": "Indicates whether or not to require assistive touch while in kiosk mode."
              },
              "kioskModeRequireColorInversion": {
                "type": "boolean",
                "description": "Indicates whether or not to require color inversion while in kiosk mode."
              },
              "kioskModeRequireMonoAudio": {
                "type": "boolean",
                "description": "Indicates whether or not to require mono audio while in kiosk mode."
              },
              "kioskModeRequireVoiceOver": {
                "type": "boolean",
                "description": "Indicates whether or not to require voice over while in kiosk mode."
              },
              "kioskModeRequireZoom": {
                "type": "boolean",
                "description": "Indicates whether or not to require zoom while in kiosk mode."
              },
              "kioskModeManagedAppId": {
                "type": "string",
                "description": "Managed app id of the app to use for kiosk mode. If KioskModeManagedAppId is specified then KioskModeAppStoreUrl will be ignored.",
                "nullable": true
              },
              "lockScreenBlockControlCenter": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using control center on the lock screen."
              },
              "lockScreenBlockNotificationView": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using the notification view on the lock screen."
              },
              "lockScreenBlockPassbook": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using passbook when the device is locked."
              },
              "lockScreenBlockTodayView": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using the Today View on the lock screen."
              },
              "mediaContentRatingAustralia": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingAustralia"
                  }
                ],
                "description": "Media content rating settings for Australia",
                "nullable": true
              },
              "mediaContentRatingCanada": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingCanada"
                  }
                ],
                "description": "Media content rating settings for Canada",
                "nullable": true
              },
              "mediaContentRatingFrance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingFrance"
                  }
                ],
                "description": "Media content rating settings for France",
                "nullable": true
              },
              "mediaContentRatingGermany": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingGermany"
                  }
                ],
                "description": "Media content rating settings for Germany",
                "nullable": true
              },
              "mediaContentRatingIreland": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingIreland"
                  }
                ],
                "description": "Media content rating settings for Ireland",
                "nullable": true
              },
              "mediaContentRatingJapan": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingJapan"
                  }
                ],
                "description": "Media content rating settings for Japan",
                "nullable": true
              },
              "mediaContentRatingNewZealand": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingNewZealand"
                  }
                ],
                "description": "Media content rating settings for New Zealand",
                "nullable": true
              },
              "mediaContentRatingUnitedKingdom": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingUnitedKingdom"
                  }
                ],
                "description": "Media content rating settings for United Kingdom",
                "nullable": true
              },
              "mediaContentRatingUnitedStates": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingUnitedStates"
                  }
                ],
                "description": "Media content rating settings for United States",
                "nullable": true
              },
              "networkUsageRules": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.iosNetworkUsageRule"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of managed apps and the network rules that applies to them. This collection can contain a maximum of 1000 elements."
              },
              "mediaContentRatingApps": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.ratingAppsType"
                  }
                ],
                "description": "Media content rating settings for Apps"
              },
              "messagesBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using the Messages app on the supervised device."
              },
              "notificationsBlockSettingsModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow notifications settings modification (iOS 9.3 and later)."
              },
              "passcodeBlockFingerprintUnlock": {
                "type": "boolean",
                "description": "Indicates whether or not to block fingerprint unlock."
              },
              "passcodeBlockFingerprintModification": {
                "type": "boolean",
                "description": "Block modification of registered Touch ID fingerprints when in supervised mode."
              },
              "passcodeBlockModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow passcode modification on the supervised device (iOS 9.0 and later)."
              },
              "passcodeBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block simple passcodes."
              },
              "passcodeExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the passcode expires. Valid values 1 to 255",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passcode. Valid values 4 to 14",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a passcode is required.",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of character sets a passcode must contain. Valid values 0 to 4",
                "format": "int32",
                "nullable": true
              },
              "passcodePreviousPasscodeBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passcodes to block. Valid values 1 to 24",
                "format": "int32",
                "nullable": true
              },
              "passcodeSignInFailureCountBeforeWipe": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of sign in failures allowed before wiping the device. Valid values 4 to 11",
                "format": "int32",
                "nullable": true
              },
              "passcodeRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "Type of passcode that is required."
              },
              "passcodeRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require a passcode."
              },
              "podcastsBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using podcasts on the supervised device (iOS 8.0 and later)."
              },
              "safariBlockAutofill": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using Auto fill in Safari."
              },
              "safariBlockJavaScript": {
                "type": "boolean",
                "description": "Indicates whether or not to block JavaScript in Safari."
              },
              "safariBlockPopups": {
                "type": "boolean",
                "description": "Indicates whether or not to block popups in Safari."
              },
              "safariBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using Safari."
              },
              "safariCookieSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.webBrowserCookieSettings"
                  }
                ],
                "description": "Cookie settings for Safari."
              },
              "safariManagedDomains": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "URLs matching the patterns listed here will be considered managed."
              },
              "safariPasswordAutoFillDomains": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Users can save passwords in Safari only from URLs matching the patterns listed here. Applies to devices in supervised mode (iOS 9.3 and later)."
              },
              "safariRequireFraudWarning": {
                "type": "boolean",
                "description": "Indicates whether or not to require fraud warning in Safari."
              },
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from taking Screenshots."
              },
              "siriBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using Siri."
              },
              "siriBlockedWhenLocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using Siri when locked."
              },
              "siriBlockUserGeneratedContent": {
                "type": "boolean",
                "description": "Indicates whether or not to block Siri from querying user-generated content when used on a supervised device."
              },
              "siriRequireProfanityFilter": {
                "type": "boolean",
                "description": "Indicates whether or not to prevent Siri from dictating, or speaking profane language on supervised device."
              },
              "spotlightBlockInternetResults": {
                "type": "boolean",
                "description": "Indicates whether or not to block Spotlight search from returning internet results on supervised device."
              },
              "voiceDialingBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block voice dialing."
              },
              "wallpaperBlockModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow wallpaper modification on supervised device (iOS 9.0 and later) ."
              },
              "wiFiConnectOnlyToConfiguredNetworks": {
                "type": "boolean",
                "description": "Indicates whether or not to force the device to use only Wi-Fi networks from configuration profiles when the device is in supervised mode."
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the iosGeneralDeviceConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "accountBlockModification": true,
          "activationLockAllowWhenSupervised": true,
          "airDropBlocked": true,
          "airDropForceUnmanagedDropTarget": true,
          "airPlayForcePairingPasswordForOutgoingRequests": true,
          "appleWatchBlockPairing": true,
          "appleWatchForceWristDetection": true,
          "appleNewsBlocked": true,
          "appsSingleAppModeList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appsVisibilityList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appsVisibilityListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "appStoreBlockAutomaticDownloads": true,
          "appStoreBlocked": true,
          "appStoreBlockInAppPurchases": true,
          "appStoreBlockUIAppInstallation": true,
          "appStoreRequirePassword": true,
          "bluetoothBlockModification": true,
          "cameraBlocked": true,
          "cellularBlockDataRoaming": true,
          "cellularBlockGlobalBackgroundFetchWhileRoaming": true,
          "cellularBlockPerAppDataModification": true,
          "cellularBlockPersonalHotspot": true,
          "cellularBlockVoiceRoaming": true,
          "certificatesBlockUntrustedTlsCertificates": true,
          "classroomAppBlockRemoteScreenObservation": true,
          "classroomAppForceUnpromptedScreenObservation": true,
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "configurationProfileBlockChanges": true,
          "definitionLookupBlocked": true,
          "deviceBlockEnableRestrictions": true,
          "deviceBlockEraseContentAndSettings": true,
          "deviceBlockNameModification": true,
          "diagnosticDataBlockSubmission": true,
          "diagnosticDataBlockSubmissionModification": true,
          "documentsBlockManagedDocumentsInUnmanagedApps": true,
          "documentsBlockUnmanagedDocumentsInManagedApps": true,
          "emailInDomainSuffixes": [
            "String"
          ],
          "enterpriseAppBlockTrust": true,
          "enterpriseAppBlockTrustModification": true,
          "faceTimeBlocked": true,
          "findMyFriendsBlocked": true,
          "gamingBlockGameCenterFriends": true,
          "gamingBlockMultiplayer": true,
          "gameCenterBlocked": true,
          "hostPairingBlocked": true,
          "iBooksStoreBlocked": true,
          "iBooksStoreBlockErotica": true,
          "iCloudBlockActivityContinuation": true,
          "iCloudBlockBackup": true,
          "iCloudBlockDocumentSync": true,
          "iCloudBlockManagedAppsSync": true,
          "iCloudBlockPhotoLibrary": true,
          "iCloudBlockPhotoStreamSync": true,
          "iCloudBlockSharedPhotoStream": true,
          "iCloudRequireEncryptedBackup": true,
          "iTunesBlockExplicitContent": true,
          "iTunesBlockMusicService": true,
          "iTunesBlockRadio": true,
          "keyboardBlockAutoCorrect": true,
          "keyboardBlockDictation": true,
          "keyboardBlockPredictive": true,
          "keyboardBlockShortcuts": true,
          "keyboardBlockSpellCheck": true,
          "kioskModeAllowAssistiveSpeak": true,
          "kioskModeAllowAssistiveTouchSettings": true,
          "kioskModeAllowAutoLock": true,
          "kioskModeAllowColorInversionSettings": true,
          "kioskModeAllowRingerSwitch": true,
          "kioskModeAllowScreenRotation": true,
          "kioskModeAllowSleepButton": true,
          "kioskModeAllowTouchscreen": true,
          "kioskModeAllowVoiceOverSettings": true,
          "kioskModeAllowVolumeButtons": true,
          "kioskModeAllowZoomSettings": true,
          "kioskModeAppStoreUrl": "String",
          "kioskModeRequireAssistiveTouch": true,
          "kioskModeRequireColorInversion": true,
          "kioskModeRequireMonoAudio": true,
          "kioskModeRequireVoiceOver": true,
          "kioskModeRequireZoom": true,
          "kioskModeManagedAppId": "String",
          "lockScreenBlockControlCenter": true,
          "lockScreenBlockNotificationView": true,
          "lockScreenBlockPassbook": true,
          "lockScreenBlockTodayView": true,
          "mediaContentRatingAustralia": {
            "@odata.type": "microsoft.graph.mediaContentRatingAustralia"
          },
          "mediaContentRatingCanada": {
            "@odata.type": "microsoft.graph.mediaContentRatingCanada"
          },
          "mediaContentRatingFrance": {
            "@odata.type": "microsoft.graph.mediaContentRatingFrance"
          },
          "mediaContentRatingGermany": {
            "@odata.type": "microsoft.graph.mediaContentRatingGermany"
          },
          "mediaContentRatingIreland": {
            "@odata.type": "microsoft.graph.mediaContentRatingIreland"
          },
          "mediaContentRatingJapan": {
            "@odata.type": "microsoft.graph.mediaContentRatingJapan"
          },
          "mediaContentRatingNewZealand": {
            "@odata.type": "microsoft.graph.mediaContentRatingNewZealand"
          },
          "mediaContentRatingUnitedKingdom": {
            "@odata.type": "microsoft.graph.mediaContentRatingUnitedKingdom"
          },
          "mediaContentRatingUnitedStates": {
            "@odata.type": "microsoft.graph.mediaContentRatingUnitedStates"
          },
          "networkUsageRules": [
            {
              "@odata.type": "microsoft.graph.iosNetworkUsageRule"
            }
          ],
          "mediaContentRatingApps": {
            "@odata.type": "microsoft.graph.ratingAppsType"
          },
          "messagesBlocked": true,
          "notificationsBlockSettingsModification": true,
          "passcodeBlockFingerprintUnlock": true,
          "passcodeBlockFingerprintModification": true,
          "passcodeBlockModification": true,
          "passcodeBlockSimple": true,
          "passcodeExpirationDays": "Int32",
          "passcodeMinimumLength": "Int32",
          "passcodeMinutesOfInactivityBeforeLock": "Int32",
          "passcodeMinutesOfInactivityBeforeScreenTimeout": "Int32",
          "passcodeMinimumCharacterSetCount": "Int32",
          "passcodePreviousPasscodeBlockCount": "Int32",
          "passcodeSignInFailureCountBeforeWipe": "Int32",
          "passcodeRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passcodeRequired": true,
          "podcastsBlocked": true,
          "safariBlockAutofill": true,
          "safariBlockJavaScript": true,
          "safariBlockPopups": true,
          "safariBlocked": true,
          "safariCookieSettings": {
            "@odata.type": "microsoft.graph.webBrowserCookieSettings"
          },
          "safariManagedDomains": [
            "String"
          ],
          "safariPasswordAutoFillDomains": [
            "String"
          ],
          "safariRequireFraudWarning": true,
          "screenCaptureBlocked": true,
          "siriBlocked": true,
          "siriBlockedWhenLocked": true,
          "siriBlockUserGeneratedContent": true,
          "siriRequireProfanityFilter": true,
          "spotlightBlockInternetResults": true,
          "voiceDialingBlocked": true,
          "wallpaperBlockModification": true,
          "wiFiConnectOnlyToConfiguredNetworks": true
        }
      },
      "microsoft.graph.mediaContentRatingAustralia": {
        "title": "mediaContentRatingAustralia",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingAustraliaMoviesType"
              }
            ],
            "description": "Movies rating selected for Australia"
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingAustraliaTelevisionType"
              }
            ],
            "description": "TV rating selected for Australia"
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingAustraliaMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingAustraliaTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingCanada": {
        "title": "mediaContentRatingCanada",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingCanadaMoviesType"
              }
            ],
            "description": "Movies rating selected for Canada"
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingCanadaTelevisionType"
              }
            ],
            "description": "TV rating selected for Canada"
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingCanadaMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingCanadaTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingFrance": {
        "title": "mediaContentRatingFrance",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingFranceMoviesType"
              }
            ],
            "description": "Movies rating selected for France"
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingFranceTelevisionType"
              }
            ],
            "description": "TV rating selected for France"
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingFranceMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingFranceTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingGermany": {
        "title": "mediaContentRatingGermany",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingGermanyMoviesType"
              }
            ],
            "description": "Movies rating selected for Germany"
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingGermanyTelevisionType"
              }
            ],
            "description": "TV rating selected for Germany"
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingGermanyMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingGermanyTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingIreland": {
        "title": "mediaContentRatingIreland",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingIrelandMoviesType"
              }
            ],
            "description": "Movies rating selected for Ireland"
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingIrelandTelevisionType"
              }
            ],
            "description": "TV rating selected for Ireland"
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingIrelandMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingIrelandTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingJapan": {
        "title": "mediaContentRatingJapan",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingJapanMoviesType"
              }
            ],
            "description": "Movies rating selected for Japan"
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingJapanTelevisionType"
              }
            ],
            "description": "TV rating selected for Japan"
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingJapanMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingJapanTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingNewZealand": {
        "title": "mediaContentRatingNewZealand",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingNewZealandMoviesType"
              }
            ],
            "description": "Movies rating selected for New Zealand"
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingNewZealandTelevisionType"
              }
            ],
            "description": "TV rating selected for New Zealand"
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingNewZealandMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingNewZealandTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingUnitedKingdom": {
        "title": "mediaContentRatingUnitedKingdom",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingUnitedKingdomMoviesType"
              }
            ],
            "description": "Movies rating selected for United Kingdom"
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingUnitedKingdomTelevisionType"
              }
            ],
            "description": "TV rating selected for United Kingdom"
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingUnitedKingdomMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingUnitedKingdomTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingUnitedStates": {
        "title": "mediaContentRatingUnitedStates",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingUnitedStatesMoviesType"
              }
            ],
            "description": "Movies rating selected for United States"
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingUnitedStatesTelevisionType"
              }
            ],
            "description": "TV rating selected for United States"
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingUnitedStatesMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingUnitedStatesTelevisionType"
          }
        }
      },
      "microsoft.graph.iosNetworkUsageRule": {
        "title": "iosNetworkUsageRule",
        "type": "object",
        "properties": {
          "managedApps": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.appListItem"
                }
              ],
              "nullable": true
            },
            "description": "Information about the managed apps that this rule is going to apply to. This collection can contain a maximum of 500 elements."
          },
          "cellularDataBlockWhenRoaming": {
            "type": "boolean",
            "description": "If set to true, corresponding managed apps will not be allowed to use cellular data when roaming."
          },
          "cellularDataBlocked": {
            "type": "boolean",
            "description": "If set to true, corresponding managed apps will not be allowed to use cellular data at any time."
          }
        },
        "example": {
          "managedApps": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "cellularDataBlockWhenRoaming": true,
          "cellularDataBlocked": true
        }
      },
      "microsoft.graph.iosUpdateConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosUpdateConfiguration",
            "type": "object",
            "properties": {
              "isEnabled": {
                "type": "boolean",
                "description": "Is setting enabled in UI"
              },
              "activeHoursStart": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "Active Hours Start (active hours mean the time window when updates install should not happen)",
                "format": "time"
              },
              "activeHoursEnd": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "Active Hours End (active hours mean the time window when updates install should not happen)",
                "format": "time"
              },
              "scheduledInstallDays": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
                    }
                  ]
                },
                "description": "Days in week for which active hours are configured. This collection can contain a maximum of 7 elements."
              },
              "utcTimeOffsetInMinutes": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "UTC Time Offset indicated in minutes",
                "format": "int32"
              }
            },
            "description": "IOS Update Configuration, allows you to configure time window within week to install iOS updates"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "isEnabled": true,
          "activeHoursStart": "TimeOfDay (timestamp)",
          "activeHoursEnd": "TimeOfDay (timestamp)",
          "scheduledInstallDays": [
            {
              "@odata.type": "microsoft.graph.dayOfWeek"
            }
          ],
          "utcTimeOffsetInMinutes": "Int32"
        }
      },
      "microsoft.graph.iosWiFiConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosWiFiConfiguration",
            "type": "object",
            "properties": {
              "networkName": {
                "type": "string",
                "description": "Network Name"
              },
              "ssid": {
                "type": "string",
                "description": "This is the name of the Wi-Fi network that is broadcast to all devices."
              },
              "connectAutomatically": {
                "type": "boolean",
                "description": "Connect automatically when this network is in range. Setting this to true will skip the user prompt and automatically connect the device to Wi-Fi network."
              },
              "connectWhenNetworkNameIsHidden": {
                "type": "boolean",
                "description": "Connect when the network is not broadcasting its name (SSID). When set to true, this profile forces the device to connect to a network that doesn't broadcast its SSID to all devices."
              },
              "wiFiSecurityType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.wiFiSecurityType"
                  }
                ],
                "description": "Indicates whether Wi-Fi endpoint uses an EAP based security type."
              },
              "proxySettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.wiFiProxySetting"
                  }
                ],
                "description": "Proxy Type for this Wi-Fi connection"
              },
              "proxyManualAddress": {
                "type": "string",
                "description": "IP Address or DNS hostname of the proxy server when manual configuration is selected.",
                "nullable": true
              },
              "proxyManualPort": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Port of the proxy server when manual configuration is selected.",
                "format": "int32",
                "nullable": true
              },
              "proxyAutomaticConfigurationUrl": {
                "type": "string",
                "description": "URL of the proxy server automatic configuration script when automatic configuration is selected. This URL is typically the location of PAC (Proxy Auto Configuration) file.",
                "nullable": true
              },
              "preSharedKey": {
                "type": "string",
                "description": "This is the pre-shared key for WPA Personal Wi-Fi network.",
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the iOS device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user. This profile provides limited and simpler security types than Enterprise Wi-Fi profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "networkName": "String",
          "ssid": "String",
          "connectAutomatically": true,
          "connectWhenNetworkNameIsHidden": true,
          "wiFiSecurityType": {
            "@odata.type": "microsoft.graph.wiFiSecurityType"
          },
          "proxySettings": {
            "@odata.type": "microsoft.graph.wiFiProxySetting"
          },
          "proxyManualAddress": "String",
          "proxyManualPort": "Int32",
          "proxyAutomaticConfigurationUrl": "String",
          "preSharedKey": "String"
        }
      },
      "microsoft.graph.iosEnterpriseWiFiConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.iosWiFiConfiguration"
          },
          {
            "title": "iosEnterpriseWiFiConfiguration",
            "type": "object",
            "properties": {
              "eapType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.eapType"
                  }
                ],
                "description": "Extensible Authentication Protocol (EAP). Indicates the type of EAP protocol set on the the Wi-Fi endpoint (router)."
              },
              "eapFastConfiguration": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.eapFastConfiguration"
                  }
                ],
                "description": "EAP-FAST Configuration Option when EAP-FAST is the selected EAP Type.",
                "nullable": true
              },
              "trustedServerCertificateNames": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Trusted server certificate names when EAP Type is configured to EAP-TLS/TTLS/FAST or PEAP. This is the common name used in the certificates issued by your trusted certificate authority (CA). If you provide this information, you can bypass the dynamic trust dialog that is displayed on end users' devices when they connect to this Wi-Fi network."
              },
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.wiFiAuthenticationMethod"
                  }
                ],
                "description": "Authentication Method when EAP Type is configured to PEAP or EAP-TTLS.",
                "nullable": true
              },
              "innerAuthenticationProtocolForEapTtls": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.nonEapAuthenticationMethodForEapTtlsType"
                  }
                ],
                "description": "Non-EAP Method for Authentication when EAP Type is EAP-TTLS and Authenticationmethod is Username and Password.",
                "nullable": true
              },
              "outerIdentityPrivacyTemporaryValue": {
                "type": "string",
                "description": "Enable identity privacy (Outer Identity) when EAP Type is configured to EAP - TTLS, EAP - FAST or PEAP. This property masks usernames with the text you enter. For example, if you use 'anonymous', each user that authenticates with this Wi-Fi connection using their real username is displayed as 'anonymous'.",
                "nullable": true
              },
              "rootCertificatesForServerValidation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.iosTrustedRootCertificate"
                }
              },
              "identityCertificateForClientAuthentication": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the iOS device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "networkName": "String",
          "ssid": "String",
          "connectAutomatically": true,
          "connectWhenNetworkNameIsHidden": true,
          "wiFiSecurityType": {
            "@odata.type": "microsoft.graph.wiFiSecurityType"
          },
          "proxySettings": {
            "@odata.type": "microsoft.graph.wiFiProxySetting"
          },
          "proxyManualAddress": "String",
          "proxyManualPort": "Int32",
          "proxyAutomaticConfigurationUrl": "String",
          "preSharedKey": "String",
          "eapType": {
            "@odata.type": "microsoft.graph.eapType"
          },
          "eapFastConfiguration": {
            "@odata.type": "microsoft.graph.eapFastConfiguration"
          },
          "trustedServerCertificateNames": [
            "String"
          ],
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.wiFiAuthenticationMethod"
          },
          "innerAuthenticationProtocolForEapTtls": {
            "@odata.type": "microsoft.graph.nonEapAuthenticationMethodForEapTtlsType"
          },
          "outerIdentityPrivacyTemporaryValue": "String",
          "rootCertificatesForServerValidation": [
            {
              "@odata.type": "microsoft.graph.iosTrustedRootCertificate"
            }
          ],
          "identityCertificateForClientAuthentication": {
            "@odata.type": "microsoft.graph.iosCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.macOSCertificateProfileBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "macOSCertificateProfileBase",
            "type": "object",
            "properties": {
              "renewalThresholdPercentage": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Certificate renewal threshold percentage.",
                "format": "int32"
              },
              "subjectNameFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appleSubjectNameFormat"
                  }
                ],
                "description": "Certificate Subject Name Format."
              },
              "subjectAlternativeNameType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.subjectAlternativeNameType"
                  }
                ],
                "description": "Certificate Subject Alternative Name Type."
              },
              "certificateValidityPeriodValue": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value for the Certificate Validity Period.",
                "format": "int32"
              },
              "certificateValidityPeriodScale": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.certificateValidityPeriodScale"
                  }
                ],
                "description": "Scale for the Certificate Validity Period."
              }
            },
            "description": "Mac OS certificate profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.appleSubjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          }
        }
      },
      "microsoft.graph.macOSScepCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.macOSCertificateProfileBase"
          },
          {
            "title": "macOSScepCertificateProfile",
            "type": "object",
            "properties": {
              "scepServerUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "SCEP Server Url(s)."
              },
              "subjectNameFormatString": {
                "type": "string",
                "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
                "nullable": true
              },
              "keyUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keyUsages"
                  }
                ],
                "description": "SCEP Key Usage."
              },
              "keySize": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keySize"
                  }
                ],
                "description": "SCEP Key Size."
              },
              "hashAlgorithm": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.hashAlgorithms"
                  }
                ],
                "description": "SCEP Hash Algorithm.",
                "nullable": true
              },
              "extendedKeyUsages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extendedKeyUsage"
                },
                "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements."
              },
              "subjectAlternativeNameFormatString": {
                "type": "string",
                "description": "Custom String that defines the AAD Attribute.",
                "nullable": true
              },
              "rootCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.macOSTrustedRootCertificate"
                  }
                ],
                "nullable": true
              },
              "managedDeviceCertificateStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceCertificateState"
                }
              }
            },
            "description": "Mac OS SCEP certificate profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.appleSubjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "scepServerUrls": [
            "String"
          ],
          "subjectNameFormatString": "String",
          "keyUsage": {
            "@odata.type": "microsoft.graph.keyUsages"
          },
          "keySize": {
            "@odata.type": "microsoft.graph.keySize"
          },
          "hashAlgorithm": {
            "@odata.type": "microsoft.graph.hashAlgorithms"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ],
          "subjectAlternativeNameFormatString": "String",
          "rootCertificate": {
            "@odata.type": "microsoft.graph.macOSTrustedRootCertificate"
          },
          "managedDeviceCertificateStates": [
            {
              "@odata.type": "microsoft.graph.managedDeviceCertificateState"
            }
          ]
        }
      },
      "microsoft.graph.macOSTrustedRootCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "macOSTrustedRootCertificate",
            "type": "object",
            "properties": {
              "trustedRootCertificate": {
                "type": "string",
                "description": "Trusted Root Certificate.",
                "format": "base64url"
              },
              "certFileName": {
                "type": "string",
                "description": "File name to display in UI.",
                "nullable": true
              }
            },
            "description": "OS X Trusted Root Certificate configuration profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "trustedRootCertificate": "Binary",
          "certFileName": "String"
        }
      },
      "microsoft.graph.macOSCustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "macOSCustomConfiguration",
            "type": "object",
            "properties": {
              "payloadName": {
                "type": "string",
                "description": "Name that is displayed to the user."
              },
              "payloadFileName": {
                "type": "string",
                "description": "Payload file name (*.mobileconfig | *.xml).",
                "nullable": true
              },
              "payload": {
                "type": "string",
                "description": "Payload. (UTF8 encoded byte array)",
                "format": "base64url"
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the macOSCustomConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "payloadName": "String",
          "payloadFileName": "String",
          "payload": "Binary"
        }
      },
      "microsoft.graph.macOSGeneralDeviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "macOSGeneralDeviceConfiguration",
            "type": "object",
            "properties": {
              "compliantAppsList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements."
              },
              "compliantAppListType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appListType"
                  }
                ],
                "description": "List that is in the CompliantAppsList."
              },
              "emailInDomainSuffixes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "An email address lacking a suffix that matches any of these strings will be considered out-of-domain."
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Block simple passwords."
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of character sets a password must contain. Valid values 0 to 4",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passwords.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity required before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity required before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "Type of password that is required."
              },
              "passwordRequired": {
                "type": "boolean",
                "description": "Whether or not to require a password."
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the macOSGeneralDeviceConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "emailInDomainSuffixes": [
            "String"
          ],
          "passwordBlockSimple": true,
          "passwordExpirationDays": "Int32",
          "passwordMinimumCharacterSetCount": "Int32",
          "passwordMinimumLength": "Int32",
          "passwordMinutesOfInactivityBeforeLock": "Int32",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "Int32",
          "passwordPreviousPasswordBlockCount": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordRequired": true
        }
      },
      "microsoft.graph.macOSWiFiConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "macOSWiFiConfiguration",
            "type": "object",
            "properties": {
              "networkName": {
                "type": "string",
                "description": "Network Name"
              },
              "ssid": {
                "type": "string",
                "description": "This is the name of the Wi-Fi network that is broadcast to all devices."
              },
              "connectAutomatically": {
                "type": "boolean",
                "description": "Connect automatically when this network is in range. Setting this to true will skip the user prompt and automatically connect the device to Wi-Fi network."
              },
              "connectWhenNetworkNameIsHidden": {
                "type": "boolean",
                "description": "Connect when the network is not broadcasting its name (SSID). When set to true, this profile forces the device to connect to a network that doesn't broadcast its SSID to all devices."
              },
              "wiFiSecurityType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.wiFiSecurityType"
                  }
                ],
                "description": "Indicates whether Wi-Fi endpoint uses an EAP based security type."
              },
              "proxySettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.wiFiProxySetting"
                  }
                ],
                "description": "Proxy Type for this Wi-Fi connection"
              },
              "proxyManualAddress": {
                "type": "string",
                "description": "IP Address or DNS hostname of the proxy server when manual configuration is selected.",
                "nullable": true
              },
              "proxyManualPort": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Port of the proxy server when manual configuration is selected.",
                "format": "int32",
                "nullable": true
              },
              "proxyAutomaticConfigurationUrl": {
                "type": "string",
                "description": "URL of the proxy server automatic configuration script when automatic configuration is selected. This URL is typically the location of PAC (Proxy Auto Configuration) file.",
                "nullable": true
              },
              "preSharedKey": {
                "type": "string",
                "description": "This is the pre-shared key for WPA Personal Wi-Fi network.",
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the macOS device to connect to desired Wi-Fi endpoint. By specifying the authentication method and security types expected by Wi-Fi endpoint you can make the Wi-Fi connection seamless for end user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "networkName": "String",
          "ssid": "String",
          "connectAutomatically": true,
          "connectWhenNetworkNameIsHidden": true,
          "wiFiSecurityType": {
            "@odata.type": "microsoft.graph.wiFiSecurityType"
          },
          "proxySettings": {
            "@odata.type": "microsoft.graph.wiFiProxySetting"
          },
          "proxyManualAddress": "String",
          "proxyManualPort": "Int32",
          "proxyAutomaticConfigurationUrl": "String",
          "preSharedKey": "String"
        }
      },
      "microsoft.graph.macOSEnterpriseWiFiConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.macOSWiFiConfiguration"
          },
          {
            "title": "macOSEnterpriseWiFiConfiguration",
            "type": "object",
            "properties": {
              "eapType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.eapType"
                  }
                ],
                "description": "Extensible Authentication Protocol (EAP). Indicates the type of EAP protocol set on the the Wi-Fi endpoint (router)."
              },
              "eapFastConfiguration": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.eapFastConfiguration"
                  }
                ],
                "description": "EAP-FAST Configuration Option when EAP-FAST is the selected EAP Type.",
                "nullable": true
              },
              "trustedServerCertificateNames": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Trusted server certificate names when EAP Type is configured to EAP-TLS/TTLS/FAST or PEAP. This is the common name used in the certificates issued by your trusted certificate authority (CA). If you provide this information, you can bypass the dynamic trust dialog that is displayed on end users devices when they connect to this Wi-Fi network."
              },
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.wiFiAuthenticationMethod"
                  }
                ],
                "description": "Authentication Method when EAP Type is configured to PEAP or EAP-TTLS.",
                "nullable": true
              },
              "innerAuthenticationProtocolForEapTtls": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.nonEapAuthenticationMethodForEapTtlsType"
                  }
                ],
                "description": "Non-EAP Method for Authentication (Inner Identity) when EAP Type is EAP-TTLS and Authenticationmethod is Username and Password.",
                "nullable": true
              },
              "outerIdentityPrivacyTemporaryValue": {
                "type": "string",
                "description": "Enable identity privacy (Outer Identity) when EAP Type is configured to EAP-TTLS, EAP-FAST or PEAP. This property masks usernames with the text you enter. For example, if you use 'anonymous', each user that authenticates with this Wi-Fi connection using their real username is displayed as 'anonymous'.",
                "nullable": true
              },
              "rootCertificateForServerValidation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.macOSTrustedRootCertificate"
                  }
                ],
                "nullable": true
              },
              "identityCertificateForClientAuthentication": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.macOSCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "MacOS Wi-Fi WPA-Enterprise/WPA2-Enterprise configuration profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "networkName": "String",
          "ssid": "String",
          "connectAutomatically": true,
          "connectWhenNetworkNameIsHidden": true,
          "wiFiSecurityType": {
            "@odata.type": "microsoft.graph.wiFiSecurityType"
          },
          "proxySettings": {
            "@odata.type": "microsoft.graph.wiFiProxySetting"
          },
          "proxyManualAddress": "String",
          "proxyManualPort": "Int32",
          "proxyAutomaticConfigurationUrl": "String",
          "preSharedKey": "String",
          "eapType": {
            "@odata.type": "microsoft.graph.eapType"
          },
          "eapFastConfiguration": {
            "@odata.type": "microsoft.graph.eapFastConfiguration"
          },
          "trustedServerCertificateNames": [
            "String"
          ],
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.wiFiAuthenticationMethod"
          },
          "innerAuthenticationProtocolForEapTtls": {
            "@odata.type": "microsoft.graph.nonEapAuthenticationMethodForEapTtlsType"
          },
          "outerIdentityPrivacyTemporaryValue": "String",
          "rootCertificateForServerValidation": {
            "@odata.type": "microsoft.graph.macOSTrustedRootCertificate"
          },
          "identityCertificateForClientAuthentication": {
            "@odata.type": "microsoft.graph.macOSCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.appleDeviceFeaturesConfigurationBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "appleDeviceFeaturesConfigurationBase",
            "type": "object",
            "properties": {
              "airPrintDestinations": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.airPrintDestination"
                    }
                  ],
                  "nullable": true
                },
                "description": "An array of AirPrint printers that should always be shown. This collection can contain a maximum of 500 elements."
              }
            },
            "description": "Apple device features configuration profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "airPrintDestinations": [
            {
              "@odata.type": "microsoft.graph.airPrintDestination"
            }
          ]
        }
      },
      "microsoft.graph.airPrintDestination": {
        "title": "airPrintDestination",
        "type": "object",
        "properties": {
          "ipAddress": {
            "type": "string",
            "description": "The IP Address of the AirPrint destination."
          },
          "resourcePath": {
            "type": "string",
            "description": "The Resource Path associated with the printer. This corresponds to the rp parameter of the _ipps.tcp Bonjour record. For example: printers/Canon_MG5300_series, printers/Xerox_Phaser_7600, ipp/print, Epson_IPP_Printer."
          },
          "port": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The listening port of the AirPrint destination. If this key is not specified AirPrint will use the default port. Available in iOS 11.0 and later.",
            "format": "int32",
            "nullable": true
          },
          "forceTls": {
            "type": "boolean",
            "description": "If true AirPrint connections are secured by Transport Layer Security (TLS). Default is false. Available in iOS 11.0 and later."
          }
        },
        "example": {
          "ipAddress": "String",
          "resourcePath": "String",
          "port": "Int32",
          "forceTls": true
        }
      },
      "microsoft.graph.iosDeviceFeaturesConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.appleDeviceFeaturesConfigurationBase"
          },
          {
            "title": "iosDeviceFeaturesConfiguration",
            "type": "object",
            "properties": {
              "assetTagTemplate": {
                "type": "string",
                "description": "Asset tag information for the device, displayed on the login window and lock screen.",
                "nullable": true
              },
              "contentFilterSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosWebContentFilterBase"
                  }
                ],
                "description": "Gets or sets iOS Web Content Filter settings, supervised mode only",
                "nullable": true
              },
              "lockScreenFootnote": {
                "type": "string",
                "description": "A footnote displayed on the login window and lock screen. Available in iOS 9.3.1 and later.",
                "nullable": true
              },
              "homeScreenDockIcons": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "A list of app and folders to appear on the Home Screen Dock. This collection can contain a maximum of 500 elements."
              },
              "homeScreenPages": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenPage"
                    }
                  ],
                  "nullable": true
                },
                "description": "A list of pages on the Home Screen. This collection can contain a maximum of 500 elements."
              },
              "notificationSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.iosNotificationSettings"
                    }
                  ],
                  "nullable": true
                },
                "description": "Notification settings for each bundle id. Applicable to devices in supervised mode only (iOS 9.3 and later). This collection can contain a maximum of 500 elements."
              },
              "singleSignOnSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosSingleSignOnSettings"
                  }
                ],
                "description": "The Kerberos login settings that enable apps on receiving devices to authenticate smoothly.",
                "nullable": true
              },
              "identityCertificateForClientAuthentication": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "iOS Device Features Configuration Profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "airPrintDestinations": [
            {
              "@odata.type": "microsoft.graph.airPrintDestination"
            }
          ],
          "assetTagTemplate": "String",
          "contentFilterSettings": {
            "@odata.type": "microsoft.graph.iosWebContentFilterBase"
          },
          "lockScreenFootnote": "String",
          "homeScreenDockIcons": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenItem"
            }
          ],
          "homeScreenPages": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenPage"
            }
          ],
          "notificationSettings": [
            {
              "@odata.type": "microsoft.graph.iosNotificationSettings"
            }
          ],
          "singleSignOnSettings": {
            "@odata.type": "microsoft.graph.iosSingleSignOnSettings"
          },
          "identityCertificateForClientAuthentication": {
            "@odata.type": "microsoft.graph.iosCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.iosWebContentFilterBase": {
        "title": "iosWebContentFilterBase",
        "type": "object"
      },
      "microsoft.graph.iosHomeScreenItem": {
        "title": "iosHomeScreenItem",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Name of the app",
            "nullable": true
          }
        },
        "example": {
          "displayName": "String"
        }
      },
      "microsoft.graph.iosHomeScreenPage": {
        "title": "iosHomeScreenPage",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Name of the page",
            "nullable": true
          },
          "icons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenItem"
            },
            "description": "A list of apps and folders to appear on a page. This collection can contain a maximum of 500 elements."
          }
        },
        "example": {
          "displayName": "String",
          "icons": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenItem"
            }
          ]
        }
      },
      "microsoft.graph.iosNotificationSettings": {
        "title": "iosNotificationSettings",
        "type": "object",
        "properties": {
          "bundleID": {
            "type": "string",
            "description": "Bundle id of app to which to apply these notification settings."
          },
          "appName": {
            "type": "string",
            "description": "Application name to be associated with the bundleID.",
            "nullable": true
          },
          "publisher": {
            "type": "string",
            "description": "Publisher to be associated with the bundleID.",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether notifications are allowed for this app.",
            "nullable": true
          },
          "showInNotificationCenter": {
            "type": "boolean",
            "description": "Indicates whether notifications can be shown in notification center.",
            "nullable": true
          },
          "showOnLockScreen": {
            "type": "boolean",
            "description": "Indicates whether notifications can be shown on the lock screen.",
            "nullable": true
          },
          "alertType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.iosNotificationAlertType"
              }
            ],
            "description": "Indicates the type of alert for notifications for this app."
          },
          "badgesEnabled": {
            "type": "boolean",
            "description": "Indicates whether badges are allowed for this app.",
            "nullable": true
          },
          "soundsEnabled": {
            "type": "boolean",
            "description": "Indicates whether sounds are allowed for this app.",
            "nullable": true
          }
        },
        "example": {
          "bundleID": "String",
          "appName": "String",
          "publisher": "String",
          "enabled": true,
          "showInNotificationCenter": true,
          "showOnLockScreen": true,
          "alertType": {
            "@odata.type": "microsoft.graph.iosNotificationAlertType"
          },
          "badgesEnabled": true,
          "soundsEnabled": true
        }
      },
      "microsoft.graph.iosSingleSignOnSettings": {
        "title": "iosSingleSignOnSettings",
        "type": "object",
        "properties": {
          "allowedAppsList": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.appListItem"
                }
              ],
              "nullable": true
            },
            "description": "List of app identifiers that are allowed to use this login. If this field is omitted, the login applies to all applications on the device. This collection can contain a maximum of 500 elements."
          },
          "allowedUrls": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "List of HTTP URLs that must be matched in order to use this login. With iOS 9.0 or later, a wildcard characters may be used."
          },
          "displayName": {
            "type": "string",
            "description": "The display name of login settings shown on the receiving device.",
            "nullable": true
          },
          "kerberosPrincipalName": {
            "type": "string",
            "description": "A Kerberos principal name. If not provided, the user is prompted for one during profile installation.",
            "nullable": true
          },
          "kerberosRealm": {
            "type": "string",
            "description": "A Kerberos realm name. Case sensitive.",
            "nullable": true
          }
        },
        "example": {
          "allowedAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "allowedUrls": [
            "String"
          ],
          "displayName": "String",
          "kerberosPrincipalName": "String",
          "kerberosRealm": "String"
        }
      },
      "microsoft.graph.iosWebContentFilterSpecificWebsitesAccess": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.iosWebContentFilterBase"
          },
          {
            "title": "iosWebContentFilterSpecificWebsitesAccess",
            "type": "object",
            "properties": {
              "specificWebsitesOnly": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.iosBookmark"
                    }
                  ],
                  "nullable": true
                },
                "description": "URL bookmarks which will be installed into built-in browser and user is only allowed to access websites through bookmarks. This collection can contain a maximum of 500 elements."
              }
            }
          }
        ],
        "example": {
          "specificWebsitesOnly": [
            {
              "@odata.type": "microsoft.graph.iosBookmark"
            }
          ]
        }
      },
      "microsoft.graph.iosBookmark": {
        "title": "iosBookmark",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL allowed to access"
          },
          "bookmarkFolder": {
            "type": "string",
            "description": "The folder into which the bookmark should be added in Safari",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the bookmark"
          }
        },
        "example": {
          "url": "String",
          "bookmarkFolder": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.iosWebContentFilterAutoFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.iosWebContentFilterBase"
          },
          {
            "title": "iosWebContentFilterAutoFilter",
            "type": "object",
            "properties": {
              "allowedUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Additional URLs allowed for access"
              },
              "blockedUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Additional URLs blocked for access"
              }
            }
          }
        ],
        "example": {
          "allowedUrls": [
            "String"
          ],
          "blockedUrls": [
            "String"
          ]
        }
      },
      "microsoft.graph.iosHomeScreenFolder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenItem"
          },
          {
            "title": "iosHomeScreenFolder",
            "type": "object",
            "properties": {
              "pages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenFolderPage"
                },
                "description": "Pages of Home Screen Layout Icons which must be Application Type. This collection can contain a maximum of 500 elements."
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "pages": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenFolderPage"
            }
          ]
        }
      },
      "microsoft.graph.iosHomeScreenFolderPage": {
        "title": "iosHomeScreenFolderPage",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Name of the folder page",
            "nullable": true
          },
          "apps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenApp"
            },
            "description": "A list of apps to appear on a page within a folder. This collection can contain a maximum of 500 elements."
          }
        },
        "example": {
          "displayName": "String",
          "apps": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenApp"
            }
          ]
        }
      },
      "microsoft.graph.iosHomeScreenApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenItem"
          },
          {
            "title": "iosHomeScreenApp",
            "type": "object",
            "properties": {
              "bundleID": {
                "type": "string",
                "description": "BundleID of app"
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "bundleID": "String"
        }
      },
      "microsoft.graph.macOSDeviceFeaturesConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.appleDeviceFeaturesConfigurationBase"
          },
          {
            "title": "macOSDeviceFeaturesConfiguration",
            "type": "object",
            "description": "MacOS device features configuration profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "airPrintDestinations": [
            {
              "@odata.type": "microsoft.graph.airPrintDestination"
            }
          ]
        }
      },
      "microsoft.graph.appleVpnConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "appleVpnConfiguration",
            "type": "object",
            "properties": {
              "connectionName": {
                "type": "string",
                "description": "Connection name displayed to the user."
              },
              "connectionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appleVpnConnectionType"
                  }
                ],
                "description": "Connection type."
              },
              "loginGroupOrDomain": {
                "type": "string",
                "description": "Login group or domain when connection type is set to Dell SonicWALL Mobile Connection.",
                "nullable": true
              },
              "role": {
                "type": "string",
                "description": "Role when connection type is set to Pulse Secure.",
                "nullable": true
              },
              "realm": {
                "type": "string",
                "description": "Realm when connection type is set to Pulse Secure.",
                "nullable": true
              },
              "server": {
                "$ref": "#/components/schemas/microsoft.graph.vpnServer"
              },
              "identifier": {
                "type": "string",
                "description": "Identifier provided by VPN vendor when connection type is set to Custom VPN. For example: Cisco AnyConnect uses an identifier of the form com.cisco.anyconnect.applevpn.plugin",
                "nullable": true
              },
              "customData": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.keyValue"
                    }
                  ],
                  "nullable": true
                },
                "description": "Custom data when connection type is set to Custom VPN. Use this field to enable functionality not supported by Intune, but available in your VPN solution. Contact your VPN vendor to learn how to add these key/value pairs. This collection can contain a maximum of 25 elements."
              },
              "enableSplitTunneling": {
                "type": "boolean",
                "description": "Send all network traffic through VPN."
              },
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vpnAuthenticationMethod"
                  }
                ],
                "description": "Authentication method for this VPN connection."
              },
              "enablePerApp": {
                "type": "boolean",
                "description": "Setting this to true creates Per-App VPN payload which can later be associated with Apps that can trigger this VPN conneciton on the end user's iOS device."
              },
              "safariDomains": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Safari domains when this VPN per App setting is enabled. In addition to the apps associated with this VPN, Safari domains specified here will also be able to trigger this VPN connection."
              },
              "onDemandRules": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.vpnOnDemandRule"
                    }
                  ],
                  "nullable": true
                },
                "description": "On-Demand Rules. This collection can contain a maximum of 500 elements."
              },
              "proxyServer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vpnProxyServer"
                  }
                ],
                "description": "Proxy Server.",
                "nullable": true
              }
            },
            "description": "Apple VPN configuration profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "connectionName": "String",
          "connectionType": {
            "@odata.type": "microsoft.graph.appleVpnConnectionType"
          },
          "loginGroupOrDomain": "String",
          "role": "String",
          "realm": "String",
          "server": {
            "@odata.type": "microsoft.graph.vpnServer"
          },
          "identifier": "String",
          "customData": [
            {
              "@odata.type": "microsoft.graph.keyValue"
            }
          ],
          "enableSplitTunneling": true,
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.vpnAuthenticationMethod"
          },
          "enablePerApp": true,
          "safariDomains": [
            "String"
          ],
          "onDemandRules": [
            {
              "@odata.type": "microsoft.graph.vpnOnDemandRule"
            }
          ],
          "proxyServer": {
            "@odata.type": "microsoft.graph.vpnProxyServer"
          }
        }
      },
      "microsoft.graph.vpnOnDemandRule": {
        "title": "vpnOnDemandRule",
        "type": "object",
        "properties": {
          "ssids": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Network Service Set Identifiers (SSIDs)."
          },
          "dnsSearchDomains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "DNS Search Domains."
          },
          "probeUrl": {
            "type": "string",
            "description": "A URL to probe. If this URL is successfully fetched (returning a 200 HTTP status code) without redirection, this rule matches.",
            "nullable": true
          },
          "action": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.vpnOnDemandRuleConnectionAction"
              }
            ],
            "description": "Action."
          },
          "domainAction": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.vpnOnDemandRuleConnectionDomainAction"
              }
            ],
            "description": "Domain Action (Only applicable when Action is evaluate connection)."
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Domains (Only applicable when Action is evaluate connection)."
          },
          "probeRequiredUrl": {
            "type": "string",
            "description": "Probe Required Url (Only applicable when Action is evaluate connection and DomainAction is connect if needed).",
            "nullable": true
          }
        },
        "example": {
          "ssids": [
            "String"
          ],
          "dnsSearchDomains": [
            "String"
          ],
          "probeUrl": "String",
          "action": {
            "@odata.type": "microsoft.graph.vpnOnDemandRuleConnectionAction"
          },
          "domainAction": {
            "@odata.type": "microsoft.graph.vpnOnDemandRuleConnectionDomainAction"
          },
          "domains": [
            "String"
          ],
          "probeRequiredUrl": "String"
        }
      },
      "microsoft.graph.vpnProxyServer": {
        "title": "vpnProxyServer",
        "type": "object",
        "properties": {
          "automaticConfigurationScriptUrl": {
            "type": "string",
            "description": "Proxy's automatic configuration script url.",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address.",
            "nullable": true
          },
          "port": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Port. Valid values 0 to 65535",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "automaticConfigurationScriptUrl": "String",
          "address": "String",
          "port": "Int32"
        }
      },
      "microsoft.graph.windows81VpnProxyServer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.vpnProxyServer"
          },
          {
            "title": "windows81VpnProxyServer",
            "type": "object",
            "properties": {
              "automaticallyDetectProxySettings": {
                "type": "boolean",
                "description": "Automatically detect proxy settings."
              },
              "bypassProxyServerForLocalAddress": {
                "type": "boolean",
                "description": "Bypass proxy server for local address."
              }
            }
          }
        ],
        "example": {
          "automaticConfigurationScriptUrl": "String",
          "address": "String",
          "port": "Int32",
          "automaticallyDetectProxySettings": true,
          "bypassProxyServerForLocalAddress": true
        }
      },
      "microsoft.graph.windows10VpnProxyServer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.vpnProxyServer"
          },
          {
            "title": "windows10VpnProxyServer",
            "type": "object",
            "properties": {
              "bypassProxyServerForLocalAddress": {
                "type": "boolean",
                "description": "Bypass proxy server for local address."
              }
            }
          }
        ],
        "example": {
          "automaticConfigurationScriptUrl": "String",
          "address": "String",
          "port": "Int32",
          "bypassProxyServerForLocalAddress": true
        }
      },
      "microsoft.graph.iosVpnConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.appleVpnConfiguration"
          },
          {
            "title": "iosVpnConfiguration",
            "type": "object",
            "properties": {
              "identityCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the iOS device to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "connectionName": "String",
          "connectionType": {
            "@odata.type": "microsoft.graph.appleVpnConnectionType"
          },
          "loginGroupOrDomain": "String",
          "role": "String",
          "realm": "String",
          "server": {
            "@odata.type": "microsoft.graph.vpnServer"
          },
          "identifier": "String",
          "customData": [
            {
              "@odata.type": "microsoft.graph.keyValue"
            }
          ],
          "enableSplitTunneling": true,
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.vpnAuthenticationMethod"
          },
          "enablePerApp": true,
          "safariDomains": [
            "String"
          ],
          "onDemandRules": [
            {
              "@odata.type": "microsoft.graph.vpnOnDemandRule"
            }
          ],
          "proxyServer": {
            "@odata.type": "microsoft.graph.vpnProxyServer"
          },
          "identityCertificate": {
            "@odata.type": "microsoft.graph.iosCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.macOSVpnConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.appleVpnConfiguration"
          },
          {
            "title": "macOSVpnConfiguration",
            "type": "object",
            "properties": {
              "identityCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.macOSCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the Mac device to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "connectionName": "String",
          "connectionType": {
            "@odata.type": "microsoft.graph.appleVpnConnectionType"
          },
          "loginGroupOrDomain": "String",
          "role": "String",
          "realm": "String",
          "server": {
            "@odata.type": "microsoft.graph.vpnServer"
          },
          "identifier": "String",
          "customData": [
            {
              "@odata.type": "microsoft.graph.keyValue"
            }
          ],
          "enableSplitTunneling": true,
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.vpnAuthenticationMethod"
          },
          "enablePerApp": true,
          "safariDomains": [
            "String"
          ],
          "onDemandRules": [
            {
              "@odata.type": "microsoft.graph.vpnOnDemandRule"
            }
          ],
          "proxyServer": {
            "@odata.type": "microsoft.graph.vpnProxyServer"
          },
          "identityCertificate": {
            "@odata.type": "microsoft.graph.macOSCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.windowsDefenderAdvancedThreatProtectionConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsDefenderAdvancedThreatProtectionConfiguration",
            "type": "object",
            "properties": {
              "advancedThreatProtectionOnboardingBlob": {
                "type": "string",
                "description": "Windows Defender AdvancedThreatProtection Onboarding Blob.",
                "nullable": true
              },
              "allowSampleSharing": {
                "type": "boolean",
                "description": "Windows Defender AdvancedThreatProtection \"Allow Sample Sharing\" Rule"
              },
              "enableExpeditedTelemetryReporting": {
                "type": "boolean",
                "description": "Expedite Windows Defender Advanced Threat Protection telemetry reporting frequency."
              },
              "advancedThreatProtectionOffboardingBlob": {
                "type": "string",
                "description": "Windows Defender AdvancedThreatProtection Offboarding Blob.",
                "nullable": true
              }
            },
            "description": "Windows Defender AdvancedThreatProtection Configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "advancedThreatProtectionOnboardingBlob": "String",
          "allowSampleSharing": true,
          "enableExpeditedTelemetryReporting": true,
          "advancedThreatProtectionOffboardingBlob": "String"
        }
      },
      "microsoft.graph.windows10EndpointProtectionConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10EndpointProtectionConfiguration",
            "type": "object",
            "properties": {
              "defenderSecurityCenterDisableAppBrowserUI": {
                "type": "boolean",
                "description": "Used to disable the display of the app and browser protection area."
              },
              "defenderSecurityCenterDisableFamilyUI": {
                "type": "boolean",
                "description": "Used to disable the display of the family options area."
              },
              "defenderSecurityCenterDisableHealthUI": {
                "type": "boolean",
                "description": "Used to disable the display of the device performance and health area."
              },
              "defenderSecurityCenterDisableNetworkUI": {
                "type": "boolean",
                "description": "Used to disable the display of the firewall and network protection area."
              },
              "defenderSecurityCenterDisableVirusUI": {
                "type": "boolean",
                "description": "Used to disable the display of the virus and threat protection area."
              },
              "defenderSecurityCenterOrganizationDisplayName": {
                "type": "string",
                "description": "The company name that is displayed to the users.",
                "nullable": true
              },
              "defenderSecurityCenterHelpEmail": {
                "type": "string",
                "description": "The email address that is displayed to users.",
                "nullable": true
              },
              "defenderSecurityCenterHelpPhone": {
                "type": "string",
                "description": "The phone number or Skype ID that is displayed to users.",
                "nullable": true
              },
              "defenderSecurityCenterHelpURL": {
                "type": "string",
                "description": "The help portal URL this is displayed to users.",
                "nullable": true
              },
              "defenderSecurityCenterNotificationsFromApp": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderSecurityCenterNotificationsFromAppType"
                  }
                ],
                "description": "Notifications to show from the displayed areas of app"
              },
              "defenderSecurityCenterITContactDisplay": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderSecurityCenterITContactDisplayType"
                  }
                ],
                "description": "Configure where to display IT contact information to end users."
              },
              "firewallBlockStatefulFTP": {
                "type": "boolean",
                "description": "Blocks stateful FTP connections to the device"
              },
              "firewallIdleTimeoutForSecurityAssociationInSeconds": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Configures the idle timeout for security associations, in seconds, from 300 to 3600 inclusive. This is the period after which security associations will expire and be deleted. Valid values 300 to 3600",
                "format": "int32",
                "nullable": true
              },
              "firewallPreSharedKeyEncodingMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.firewallPreSharedKeyEncodingMethodType"
                  }
                ],
                "description": "Select the preshared key encoding to be used"
              },
              "firewallIPSecExemptionsAllowNeighborDiscovery": {
                "type": "boolean",
                "description": "Configures IPSec exemptions to allow neighbor discovery IPv6 ICMP type-codes"
              },
              "firewallIPSecExemptionsAllowICMP": {
                "type": "boolean",
                "description": "Configures IPSec exemptions to allow ICMP"
              },
              "firewallIPSecExemptionsAllowRouterDiscovery": {
                "type": "boolean",
                "description": "Configures IPSec exemptions to allow router discovery IPv6 ICMP type-codes"
              },
              "firewallIPSecExemptionsAllowDHCP": {
                "type": "boolean",
                "description": "Configures IPSec exemptions to allow both IPv4 and IPv6 DHCP traffic"
              },
              "firewallCertificateRevocationListCheckMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.firewallCertificateRevocationListCheckMethodType"
                  }
                ],
                "description": "Specify how the certificate revocation list is to be enforced"
              },
              "firewallMergeKeyingModuleSettings": {
                "type": "boolean",
                "description": "If an authentication set is not fully supported by a keying module, direct the module to ignore only unsupported authentication suites rather than the entire set"
              },
              "firewallPacketQueueingMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.firewallPacketQueueingMethodType"
                  }
                ],
                "description": "Configures how packet queueing should be applied in the tunnel gateway scenario"
              },
              "firewallProfileDomain": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsFirewallNetworkProfile"
                  }
                ],
                "description": "Configures the firewall profile settings for domain networks",
                "nullable": true
              },
              "firewallProfilePublic": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsFirewallNetworkProfile"
                  }
                ],
                "description": "Configures the firewall profile settings for public networks",
                "nullable": true
              },
              "firewallProfilePrivate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsFirewallNetworkProfile"
                  }
                ],
                "description": "Configures the firewall profile settings for private networks",
                "nullable": true
              },
              "defenderAttackSurfaceReductionExcludedPaths": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "List of exe files and folders to be excluded from attack surface reduction rules"
              },
              "defenderOfficeAppsOtherProcessInjectionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderAttackSurfaceType"
                  }
                ],
                "description": "Value indicating the behavior of  Office applications injecting into other processes"
              },
              "defenderOfficeAppsExecutableContentCreationOrLaunchType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderAttackSurfaceType"
                  }
                ],
                "description": "Value indicating the behavior of Office applications/macros creating or launching executable content"
              },
              "defenderOfficeAppsLaunchChildProcessType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderAttackSurfaceType"
                  }
                ],
                "description": "Value indicating the behavior of Office application launching child processes"
              },
              "defenderOfficeMacroCodeAllowWin32ImportsType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderAttackSurfaceType"
                  }
                ],
                "description": "Value indicating the behavior of Win32 imports from Macro code in Office"
              },
              "defenderScriptObfuscatedMacroCodeType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderAttackSurfaceType"
                  }
                ],
                "description": "Value indicating the behavior of obfuscated js/vbs/ps/macro code"
              },
              "defenderScriptDownloadedPayloadExecutionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderAttackSurfaceType"
                  }
                ],
                "description": "Value indicating the behavior of js/vbs executing payload downloaded from Internet"
              },
              "defenderEmailContentExecutionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderAttackSurfaceType"
                  }
                ],
                "description": "Value indicating if execution of executable content (exe, dll, ps, js, vbs, etc) should be dropped from email(webmail/mail-client)"
              },
              "defenderGuardMyFoldersType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderProtectionType"
                  }
                ],
                "description": "Value indicating the behavior of protected folders"
              },
              "defenderGuardedFoldersAllowedAppPaths": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "List of paths to exe that are allowed to access protected folders"
              },
              "defenderAdditionalGuardedFolders": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "List of folder paths to be added to the list of protected folders"
              },
              "defenderNetworkProtectionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderProtectionType"
                  }
                ],
                "description": "Value indicating the behavior of NetworkProtection"
              },
              "defenderExploitProtectionXml": {
                "type": "string",
                "description": "Xml content containing information regarding exploit protection details.",
                "format": "base64url",
                "nullable": true
              },
              "defenderExploitProtectionXmlFileName": {
                "type": "string",
                "description": "Name of the file from which DefenderExploitProtectionXml was obtained.",
                "nullable": true
              },
              "defenderSecurityCenterBlockExploitProtectionOverride": {
                "type": "boolean",
                "description": "Indicates whether or not to block user from overriding Exploit Protection settings."
              },
              "appLockerApplicationControl": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appLockerApplicationControlType"
                  }
                ],
                "description": "Enables the Admin to choose what types of app to allow on devices."
              },
              "smartScreenEnableInShell": {
                "type": "boolean",
                "description": "Allows IT Admins to configure SmartScreen for Windows."
              },
              "smartScreenBlockOverrideForFiles": {
                "type": "boolean",
                "description": "Allows IT Admins to control whether users can can ignore SmartScreen warnings and run malicious files."
              },
              "applicationGuardEnabled": {
                "type": "boolean",
                "description": "Enable Windows Defender Application Guard"
              },
              "applicationGuardBlockFileTransfer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.applicationGuardBlockFileTransferType"
                  }
                ],
                "description": "Block clipboard to transfer image file, text file or neither of them"
              },
              "applicationGuardBlockNonEnterpriseContent": {
                "type": "boolean",
                "description": "Block enterprise sites to load non-enterprise content, such as third party plug-ins"
              },
              "applicationGuardAllowPersistence": {
                "type": "boolean",
                "description": "Allow persisting user generated data inside the App Guard Containter (favorites, cookies, web passwords, etc.)"
              },
              "applicationGuardForceAuditing": {
                "type": "boolean",
                "description": "Force auditing will persist Windows logs and events to meet security/compliance criteria (sample events are user login-logoff, use of privilege rights, software installation, system changes, etc.)"
              },
              "applicationGuardBlockClipboardSharing": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.applicationGuardBlockClipboardSharingType"
                  }
                ],
                "description": "Block clipboard to share data from Host to Container, or from Container to Host, or both ways, or neither ways."
              },
              "applicationGuardAllowPrintToPDF": {
                "type": "boolean",
                "description": "Allow printing to PDF from Container"
              },
              "applicationGuardAllowPrintToXPS": {
                "type": "boolean",
                "description": "Allow printing to XPS from Container"
              },
              "applicationGuardAllowPrintToLocalPrinters": {
                "type": "boolean",
                "description": "Allow printing to Local Printers from Container"
              },
              "applicationGuardAllowPrintToNetworkPrinters": {
                "type": "boolean",
                "description": "Allow printing to Network Printers from Container"
              },
              "applicationGuardAllowVirtualGPU": {
                "type": "boolean",
                "description": "Allow application guard to use virtual GPU"
              },
              "bitLockerDisableWarningForOtherDiskEncryption": {
                "type": "boolean",
                "description": "Allows the Admin to disable the warning prompt for other disk encryption on the user machines."
              },
              "bitLockerEnableStorageCardEncryptionOnMobile": {
                "type": "boolean",
                "description": "Allows the admin to require encryption to be turned on using BitLocker. This policy is valid only for a mobile SKU."
              },
              "bitLockerEncryptDevice": {
                "type": "boolean",
                "description": "Allows the admin to require encryption to be turned on using BitLocker."
              },
              "bitLockerSystemDrivePolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.bitLockerSystemDrivePolicy"
                  }
                ],
                "description": "BitLocker System Drive Policy.",
                "nullable": true
              },
              "bitLockerFixedDrivePolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.bitLockerFixedDrivePolicy"
                  }
                ],
                "description": "BitLocker Fixed Drive Policy.",
                "nullable": true
              },
              "bitLockerRemovableDrivePolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.bitLockerRemovableDrivePolicy"
                  }
                ],
                "description": "BitLocker Removable Drive Policy.",
                "nullable": true
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the Windows10EndpointProtectionConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "defenderSecurityCenterDisableAppBrowserUI": true,
          "defenderSecurityCenterDisableFamilyUI": true,
          "defenderSecurityCenterDisableHealthUI": true,
          "defenderSecurityCenterDisableNetworkUI": true,
          "defenderSecurityCenterDisableVirusUI": true,
          "defenderSecurityCenterOrganizationDisplayName": "String",
          "defenderSecurityCenterHelpEmail": "String",
          "defenderSecurityCenterHelpPhone": "String",
          "defenderSecurityCenterHelpURL": "String",
          "defenderSecurityCenterNotificationsFromApp": {
            "@odata.type": "microsoft.graph.defenderSecurityCenterNotificationsFromAppType"
          },
          "defenderSecurityCenterITContactDisplay": {
            "@odata.type": "microsoft.graph.defenderSecurityCenterITContactDisplayType"
          },
          "firewallBlockStatefulFTP": true,
          "firewallIdleTimeoutForSecurityAssociationInSeconds": "Int32",
          "firewallPreSharedKeyEncodingMethod": {
            "@odata.type": "microsoft.graph.firewallPreSharedKeyEncodingMethodType"
          },
          "firewallIPSecExemptionsAllowNeighborDiscovery": true,
          "firewallIPSecExemptionsAllowICMP": true,
          "firewallIPSecExemptionsAllowRouterDiscovery": true,
          "firewallIPSecExemptionsAllowDHCP": true,
          "firewallCertificateRevocationListCheckMethod": {
            "@odata.type": "microsoft.graph.firewallCertificateRevocationListCheckMethodType"
          },
          "firewallMergeKeyingModuleSettings": true,
          "firewallPacketQueueingMethod": {
            "@odata.type": "microsoft.graph.firewallPacketQueueingMethodType"
          },
          "firewallProfileDomain": {
            "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
          },
          "firewallProfilePublic": {
            "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
          },
          "firewallProfilePrivate": {
            "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
          },
          "defenderAttackSurfaceReductionExcludedPaths": [
            "String"
          ],
          "defenderOfficeAppsOtherProcessInjectionType": {
            "@odata.type": "microsoft.graph.defenderAttackSurfaceType"
          },
          "defenderOfficeAppsExecutableContentCreationOrLaunchType": {
            "@odata.type": "microsoft.graph.defenderAttackSurfaceType"
          },
          "defenderOfficeAppsLaunchChildProcessType": {
            "@odata.type": "microsoft.graph.defenderAttackSurfaceType"
          },
          "defenderOfficeMacroCodeAllowWin32ImportsType": {
            "@odata.type": "microsoft.graph.defenderAttackSurfaceType"
          },
          "defenderScriptObfuscatedMacroCodeType": {
            "@odata.type": "microsoft.graph.defenderAttackSurfaceType"
          },
          "defenderScriptDownloadedPayloadExecutionType": {
            "@odata.type": "microsoft.graph.defenderAttackSurfaceType"
          },
          "defenderEmailContentExecutionType": {
            "@odata.type": "microsoft.graph.defenderAttackSurfaceType"
          },
          "defenderGuardMyFoldersType": {
            "@odata.type": "microsoft.graph.defenderProtectionType"
          },
          "defenderGuardedFoldersAllowedAppPaths": [
            "String"
          ],
          "defenderAdditionalGuardedFolders": [
            "String"
          ],
          "defenderNetworkProtectionType": {
            "@odata.type": "microsoft.graph.defenderProtectionType"
          },
          "defenderExploitProtectionXml": "Binary",
          "defenderExploitProtectionXmlFileName": "String",
          "defenderSecurityCenterBlockExploitProtectionOverride": true,
          "appLockerApplicationControl": {
            "@odata.type": "microsoft.graph.appLockerApplicationControlType"
          },
          "smartScreenEnableInShell": true,
          "smartScreenBlockOverrideForFiles": true,
          "applicationGuardEnabled": true,
          "applicationGuardBlockFileTransfer": {
            "@odata.type": "microsoft.graph.applicationGuardBlockFileTransferType"
          },
          "applicationGuardBlockNonEnterpriseContent": true,
          "applicationGuardAllowPersistence": true,
          "applicationGuardForceAuditing": true,
          "applicationGuardBlockClipboardSharing": {
            "@odata.type": "microsoft.graph.applicationGuardBlockClipboardSharingType"
          },
          "applicationGuardAllowPrintToPDF": true,
          "applicationGuardAllowPrintToXPS": true,
          "applicationGuardAllowPrintToLocalPrinters": true,
          "applicationGuardAllowPrintToNetworkPrinters": true,
          "applicationGuardAllowVirtualGPU": true,
          "bitLockerDisableWarningForOtherDiskEncryption": true,
          "bitLockerEnableStorageCardEncryptionOnMobile": true,
          "bitLockerEncryptDevice": true,
          "bitLockerSystemDrivePolicy": {
            "@odata.type": "microsoft.graph.bitLockerSystemDrivePolicy"
          },
          "bitLockerFixedDrivePolicy": {
            "@odata.type": "microsoft.graph.bitLockerFixedDrivePolicy"
          },
          "bitLockerRemovableDrivePolicy": {
            "@odata.type": "microsoft.graph.bitLockerRemovableDrivePolicy"
          }
        }
      },
      "microsoft.graph.windowsFirewallNetworkProfile": {
        "title": "windowsFirewallNetworkProfile",
        "type": "object",
        "properties": {
          "firewallEnabled": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.stateManagementSetting"
              }
            ],
            "description": "Turn on the firewall and advanced security enforcement"
          },
          "stealthModeBlocked": {
            "type": "boolean",
            "description": "Prevent the server from operating in stealth mode"
          },
          "incomingTrafficBlocked": {
            "type": "boolean",
            "description": "Configures the firewall to block all incoming traffic regardless of other policy settings"
          },
          "unicastResponsesToMulticastBroadcastsBlocked": {
            "type": "boolean",
            "description": "Configures the firewall to block unicast responses to multicast broadcast traffic"
          },
          "inboundNotificationsBlocked": {
            "type": "boolean",
            "description": "Prevents the firewall from displaying notifications when an application is blocked from listening on a port"
          },
          "authorizedApplicationRulesFromGroupPolicyMerged": {
            "type": "boolean",
            "description": "Configures the firewall to merge authorized application rules from group policy with those from local store instead of ignoring the local store rules"
          },
          "globalPortRulesFromGroupPolicyMerged": {
            "type": "boolean",
            "description": "Configures the firewall to merge global port rules from group policy with those from local store instead of ignoring the local store rules"
          },
          "connectionSecurityRulesFromGroupPolicyMerged": {
            "type": "boolean",
            "description": "Configures the firewall to merge connection security rules from group policy with those from local store instead of ignoring the local store rules"
          },
          "outboundConnectionsBlocked": {
            "type": "boolean",
            "description": "Configures the firewall to block all outgoing connections by default"
          },
          "inboundConnectionsBlocked": {
            "type": "boolean",
            "description": "Configures the firewall to block all incoming connections by default"
          },
          "securedPacketExemptionAllowed": {
            "type": "boolean",
            "description": "Configures the firewall to allow the host computer to respond to unsolicited network traffic of that traffic is secured by IPSec even when stealthModeBlocked is set to true"
          },
          "policyRulesFromGroupPolicyMerged": {
            "type": "boolean",
            "description": "Configures the firewall to merge Firewall Rule policies from group policy with those from local store instead of ignoring the local store rules"
          }
        },
        "example": {
          "firewallEnabled": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "stealthModeBlocked": true,
          "incomingTrafficBlocked": true,
          "unicastResponsesToMulticastBroadcastsBlocked": true,
          "inboundNotificationsBlocked": true,
          "authorizedApplicationRulesFromGroupPolicyMerged": true,
          "globalPortRulesFromGroupPolicyMerged": true,
          "connectionSecurityRulesFromGroupPolicyMerged": true,
          "outboundConnectionsBlocked": true,
          "inboundConnectionsBlocked": true,
          "securedPacketExemptionAllowed": true,
          "policyRulesFromGroupPolicyMerged": true
        }
      },
      "microsoft.graph.bitLockerSystemDrivePolicy": {
        "title": "bitLockerSystemDrivePolicy",
        "type": "object",
        "properties": {
          "encryptionMethod": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.bitLockerEncryptionMethod"
              }
            ],
            "description": "Select the encryption method for operating system drives.",
            "nullable": true
          },
          "startupAuthenticationRequired": {
            "type": "boolean",
            "description": "Require additional authentication at startup."
          },
          "startupAuthenticationBlockWithoutTpmChip": {
            "type": "boolean",
            "description": "Indicates whether to allow BitLocker without a compatible TPM (requires a password or a startup key on a USB flash drive)."
          },
          "startupAuthenticationTpmUsage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.configurationUsage"
              }
            ],
            "description": "Indicates if TPM startup is allowed/required/disallowed."
          },
          "startupAuthenticationTpmPinUsage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.configurationUsage"
              }
            ],
            "description": "Indicates if TPM startup pin is allowed/required/disallowed."
          },
          "startupAuthenticationTpmKeyUsage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.configurationUsage"
              }
            ],
            "description": "Indicates if TPM startup key is allowed/required/disallowed."
          },
          "startupAuthenticationTpmPinAndKeyUsage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.configurationUsage"
              }
            ],
            "description": "Indicates if TPM startup pin key and key are allowed/required/disallowed."
          },
          "minimumPinLength": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Indicates the minimum length of startup pin. Valid values 4 to 20",
            "format": "int32",
            "nullable": true
          },
          "recoveryOptions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.bitLockerRecoveryOptions"
              }
            ],
            "description": "Allows to recover BitLocker encrypted operating system drives in the absence of the required startup key information. This policy setting is applied when you turn on BitLocker.",
            "nullable": true
          },
          "prebootRecoveryEnableMessageAndUrl": {
            "type": "boolean",
            "description": "Enable pre-boot recovery message and Url. If requireStartupAuthentication is false, this value does not affect."
          },
          "prebootRecoveryMessage": {
            "type": "string",
            "description": "Defines a custom recovery message.",
            "nullable": true
          },
          "prebootRecoveryUrl": {
            "type": "string",
            "description": "Defines a custom recovery URL.",
            "nullable": true
          }
        },
        "example": {
          "encryptionMethod": {
            "@odata.type": "microsoft.graph.bitLockerEncryptionMethod"
          },
          "startupAuthenticationRequired": true,
          "startupAuthenticationBlockWithoutTpmChip": true,
          "startupAuthenticationTpmUsage": {
            "@odata.type": "microsoft.graph.configurationUsage"
          },
          "startupAuthenticationTpmPinUsage": {
            "@odata.type": "microsoft.graph.configurationUsage"
          },
          "startupAuthenticationTpmKeyUsage": {
            "@odata.type": "microsoft.graph.configurationUsage"
          },
          "startupAuthenticationTpmPinAndKeyUsage": {
            "@odata.type": "microsoft.graph.configurationUsage"
          },
          "minimumPinLength": "Int32",
          "recoveryOptions": {
            "@odata.type": "microsoft.graph.bitLockerRecoveryOptions"
          },
          "prebootRecoveryEnableMessageAndUrl": true,
          "prebootRecoveryMessage": "String",
          "prebootRecoveryUrl": "String"
        }
      },
      "microsoft.graph.bitLockerRecoveryOptions": {
        "title": "bitLockerRecoveryOptions",
        "type": "object",
        "properties": {
          "blockDataRecoveryAgent": {
            "type": "boolean",
            "description": "Indicates whether to block certificate-based data recovery agent."
          },
          "recoveryPasswordUsage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.configurationUsage"
              }
            ],
            "description": "Indicates whether users are allowed or required to generate a 48-digit recovery password for fixed or system disk."
          },
          "recoveryKeyUsage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.configurationUsage"
              }
            ],
            "description": "Indicates whether users are allowed or required to generate a 256-bit recovery key for fixed or system disk."
          },
          "hideRecoveryOptions": {
            "type": "boolean",
            "description": "Indicates whether or not to allow showing recovery options in BitLocker Setup Wizard for fixed or system disk."
          },
          "enableRecoveryInformationSaveToStore": {
            "type": "boolean",
            "description": "Indicates whether or not to allow BitLocker recovery information to store in AD DS."
          },
          "recoveryInformationToStore": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.bitLockerRecoveryinformationType"
              }
            ],
            "description": "Configure what pieces of BitLocker recovery information are stored to AD DS."
          },
          "enableBitLockerAfterRecoveryInformationToStore": {
            "type": "boolean",
            "description": "Indicates whether or not to enable BitLocker until recovery information is stored in AD DS."
          }
        },
        "example": {
          "blockDataRecoveryAgent": true,
          "recoveryPasswordUsage": {
            "@odata.type": "microsoft.graph.configurationUsage"
          },
          "recoveryKeyUsage": {
            "@odata.type": "microsoft.graph.configurationUsage"
          },
          "hideRecoveryOptions": true,
          "enableRecoveryInformationSaveToStore": true,
          "recoveryInformationToStore": {
            "@odata.type": "microsoft.graph.bitLockerRecoveryinformationType"
          },
          "enableBitLockerAfterRecoveryInformationToStore": true
        }
      },
      "microsoft.graph.bitLockerFixedDrivePolicy": {
        "title": "bitLockerFixedDrivePolicy",
        "type": "object",
        "properties": {
          "encryptionMethod": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.bitLockerEncryptionMethod"
              }
            ],
            "description": "Select the encryption method for fixed drives.",
            "nullable": true
          },
          "requireEncryptionForWriteAccess": {
            "type": "boolean",
            "description": "This policy setting determines whether BitLocker protection is required for fixed data drives to be writable on a computer."
          },
          "recoveryOptions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.bitLockerRecoveryOptions"
              }
            ],
            "description": "This policy setting allows you to control how BitLocker-protected fixed data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker.",
            "nullable": true
          }
        },
        "example": {
          "encryptionMethod": {
            "@odata.type": "microsoft.graph.bitLockerEncryptionMethod"
          },
          "requireEncryptionForWriteAccess": true,
          "recoveryOptions": {
            "@odata.type": "microsoft.graph.bitLockerRecoveryOptions"
          }
        }
      },
      "microsoft.graph.bitLockerRemovableDrivePolicy": {
        "title": "bitLockerRemovableDrivePolicy",
        "type": "object",
        "properties": {
          "encryptionMethod": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.bitLockerEncryptionMethod"
              }
            ],
            "description": "Select the encryption method for removable  drives.",
            "nullable": true
          },
          "requireEncryptionForWriteAccess": {
            "type": "boolean",
            "description": "Indicates whether to block write access to devices configured in another organization.  If requireEncryptionForWriteAccess is false, this value does not affect."
          },
          "blockCrossOrganizationWriteAccess": {
            "type": "boolean",
            "description": "This policy setting determines whether BitLocker protection is required for removable data drives to be writable on a computer."
          }
        },
        "example": {
          "encryptionMethod": {
            "@odata.type": "microsoft.graph.bitLockerEncryptionMethod"
          },
          "requireEncryptionForWriteAccess": true,
          "blockCrossOrganizationWriteAccess": true
        }
      },
      "microsoft.graph.windows10GeneralConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10GeneralConfiguration",
            "type": "object",
            "properties": {
              "enableAutomaticRedeployment": {
                "type": "boolean",
                "description": "Allow users with administrative rights to delete all user data and settings using CTRL + Win + R at the device lock screen so that the device can be automatically re-configured and re-enrolled into management."
              },
              "assignedAccessSingleModeUserName": {
                "type": "string",
                "description": "This policy setting allows to define the user account that will be locked to Single App Kiosk Mode.",
                "nullable": true
              },
              "assignedAccessSingleModeAppUserModelId": {
                "type": "string",
                "description": "This policy setting allows to define the Application User Model ID (AUMID) that will be locked to Single App Kiosk Mode.",
                "nullable": true
              },
              "microsoftAccountSignInAssistantSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.signInAssistantOptions"
                  }
                ],
                "description": "Controls the Microsoft Account Sign-In Assistant (wlidsvc) NT service."
              },
              "authenticationAllowSecondaryDevice": {
                "type": "boolean",
                "description": "Allows secondary authentication devices to work with Windows."
              },
              "authenticationAllowFIDODevice": {
                "type": "boolean",
                "description": "Indicates whether or not to allow authentication using FIDO device (https://fidoalliance.org/)"
              },
              "cryptographyAllowFipsAlgorithmPolicy": {
                "type": "boolean",
                "description": "Specify whether to allow or disallow the Federal Information Processing Standard (FIPS) policy."
              },
              "displayAppListWithGdiDPIScalingTurnedOn": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "List of legacy applications that have GDI DPI Scaling turned on."
              },
              "displayAppListWithGdiDPIScalingTurnedOff": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "List of legacy applications that have GDI DPI Scaling turned off."
              },
              "enterpriseCloudPrintDiscoveryEndPoint": {
                "type": "string",
                "description": "Endpoint for discovering cloud printers.",
                "nullable": true
              },
              "enterpriseCloudPrintOAuthAuthority": {
                "type": "string",
                "description": "Authentication endpoint for acquiring OAuth tokens.",
                "nullable": true
              },
              "enterpriseCloudPrintOAuthClientIdentifier": {
                "type": "string",
                "description": "GUID of a client application authorized to retrieve OAuth tokens from the OAuth Authority.",
                "nullable": true
              },
              "enterpriseCloudPrintResourceIdentifier": {
                "type": "string",
                "description": "OAuth resource URI for print service as configured in the Azure portal.",
                "nullable": true
              },
              "enterpriseCloudPrintDiscoveryMaxLimit": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Maximum number of printers that should be queried from a discovery endpoint. This is a mobile only setting. Valid values 1 to 65535",
                "format": "int32",
                "nullable": true
              },
              "enterpriseCloudPrintMopriaDiscoveryResourceIdentifier": {
                "type": "string",
                "description": "OAuth resource URI for printer discovery service as configured in Azure portal.",
                "nullable": true
              },
              "messagingBlockSync": {
                "type": "boolean",
                "description": "Indicates whether or not to block text message back up and restore and Messaging Everywhere."
              },
              "messagingBlockMMS": {
                "type": "boolean",
                "description": "Indicates whether or not to block the the MMS send/receive functionality on the device."
              },
              "messagingBlockRichCommunicationServices": {
                "type": "boolean",
                "description": "Indicates whether or not to block the the RCS send/receive functionality on the device."
              },
              "searchBlockDiacritics": {
                "type": "boolean",
                "description": "Specifies if search can use diacritics."
              },
              "searchDisableAutoLanguageDetection": {
                "type": "boolean",
                "description": "Specifies whether to use automatic language detection when indexing content and properties."
              },
              "searchDisableIndexingEncryptedItems": {
                "type": "boolean",
                "description": "Indicates whether or not to block indexing of WIP-protected items to prevent them from appearing in search results for Cortana or Explorer."
              },
              "searchEnableRemoteQueries": {
                "type": "boolean",
                "description": "Indicates whether or not to block remote queries of this computer’s index."
              },
              "searchDisableUseLocation": {
                "type": "boolean",
                "description": "Specifies if search can use location information."
              },
              "searchDisableIndexerBackoff": {
                "type": "boolean",
                "description": "Indicates whether or not to disable the search indexer backoff feature."
              },
              "searchDisableIndexingRemovableDrive": {
                "type": "boolean",
                "description": "Indicates whether or not to allow users to add locations on removable drives to libraries and to be indexed."
              },
              "searchEnableAutomaticIndexSizeManangement": {
                "type": "boolean",
                "description": "Specifies minimum amount of hard drive space on the same drive as the index location before indexing stops."
              },
              "securityBlockAzureADJoinedDevicesAutoEncryption": {
                "type": "boolean",
                "description": "Specify whether to allow automatic device encryption during OOBE when the device is Azure AD joined (desktop only)."
              },
              "diagnosticsDataSubmissionMode": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.diagnosticDataSubmissionMode"
                  }
                ],
                "description": "Gets or sets a value allowing the device to send diagnostic and usage telemetry data, such as Watson."
              },
              "oneDriveDisableFileSync": {
                "type": "boolean",
                "description": "Gets or sets a value allowing IT admins to prevent apps and features from working with files on OneDrive."
              },
              "systemTelemetryProxyServer": {
                "type": "string",
                "description": "Gets or sets the fully qualified domain name (FQDN) or IP address of a proxy server to forward Connected User Experiences and Telemetry requests.",
                "nullable": true
              },
              "inkWorkspaceAccess": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.inkAccessSetting"
                  }
                ],
                "description": "Controls the user access to the ink workspace, from the desktop and from above the lock screen."
              },
              "inkWorkspaceBlockSuggestedApps": {
                "type": "boolean",
                "description": "Specify whether to show recommended app suggestions in the ink workspace."
              },
              "smartScreenEnableAppInstallControl": {
                "type": "boolean",
                "description": "Allows IT Admins to control whether users are allowed to install apps from places other than the Store."
              },
              "personalizationDesktopImageUrl": {
                "type": "string",
                "description": "A http or https Url to a jpg, jpeg or png image that needs to be downloaded and used as the Desktop Image or a file Url to a local image on the file system that needs to used as the Desktop Image.",
                "nullable": true
              },
              "personalizationLockScreenImageUrl": {
                "type": "string",
                "description": "A http or https Url to a jpg, jpeg or png image that neeeds to be downloaded and used as the Lock Screen Image or a file Url to a local image on the file system that needs to be used as the Lock Screen Image.",
                "nullable": true
              },
              "bluetoothAllowedServices": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Specify a list of allowed Bluetooth services and profiles in hex formatted strings."
              },
              "bluetoothBlockAdvertising": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using bluetooth advertising."
              },
              "bluetoothBlockDiscoverableMode": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using bluetooth discoverable mode."
              },
              "bluetoothBlockPrePairing": {
                "type": "boolean",
                "description": "Whether or not to block specific bundled Bluetooth peripherals to automatically pair with the host device."
              },
              "edgeBlockAutofill": {
                "type": "boolean",
                "description": "Indicates whether or not to block auto fill."
              },
              "edgeBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using the Edge browser."
              },
              "edgeCookiePolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.edgeCookiePolicy"
                  }
                ],
                "description": "Indicates which cookies to block in the Edge browser."
              },
              "edgeBlockDeveloperTools": {
                "type": "boolean",
                "description": "Indicates whether or not to block developer tools in the Edge browser."
              },
              "edgeBlockSendingDoNotTrackHeader": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from sending the do not track header."
              },
              "edgeBlockExtensions": {
                "type": "boolean",
                "description": "Indicates whether or not to block extensions in the Edge browser."
              },
              "edgeBlockInPrivateBrowsing": {
                "type": "boolean",
                "description": "Indicates whether or not to block InPrivate browsing on corporate networks, in the Edge browser."
              },
              "edgeBlockJavaScript": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using JavaScript."
              },
              "edgeBlockPasswordManager": {
                "type": "boolean",
                "description": "Indicates whether or not to Block password manager."
              },
              "edgeBlockAddressBarDropdown": {
                "type": "boolean",
                "description": "Block the address bar dropdown functionality in Microsoft Edge. Disable this settings to minimize network connections from Microsoft Edge to Microsoft services."
              },
              "edgeBlockCompatibilityList": {
                "type": "boolean",
                "description": "Block Microsoft compatibility list in Microsoft Edge. This list from Microsoft helps Edge properly display sites with known compatibility issues."
              },
              "edgeClearBrowsingDataOnExit": {
                "type": "boolean",
                "description": "Clear browsing data on exiting Microsoft Edge."
              },
              "edgeAllowStartPagesModification": {
                "type": "boolean",
                "description": "Allow users to change Start pages on Edge. Use the EdgeHomepageUrls to specify the Start pages that the user would see by default when they open Edge."
              },
              "edgeDisableFirstRunPage": {
                "type": "boolean",
                "description": "Block the Microsoft web page that opens on the first use of Microsoft Edge. This policy allows enterprises, like those enrolled in zero emissions configurations, to block this page."
              },
              "edgeBlockLiveTileDataCollection": {
                "type": "boolean",
                "description": "Block the collection of information by Microsoft for live tile creation when users pin a site to Start from Microsoft Edge."
              },
              "edgeSyncFavoritesWithInternetExplorer": {
                "type": "boolean",
                "description": "Enable favorites sync between Internet Explorer and Microsoft Edge. Additions, deletions, modifications and order changes to favorites are shared between browsers."
              },
              "cellularBlockDataWhenRoaming": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using data over cellular while roaming."
              },
              "cellularBlockVpn": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using VPN over cellular."
              },
              "cellularBlockVpnWhenRoaming": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using VPN when roaming over cellular."
              },
              "cellularData": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.configurationUsage"
                  }
                ],
                "description": "Whether or not to allow the cellular data channel on the device. If not configured, the cellular data channel is allowed and the user can turn it off."
              },
              "defenderBlockEndUserAccess": {
                "type": "boolean",
                "description": "Whether or not to block end user access to Defender."
              },
              "defenderDaysBeforeDeletingQuarantinedMalware": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before deleting quarantined malware. Valid values 0 to 90",
                "format": "int32",
                "nullable": true
              },
              "defenderDetectedMalwareActions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderDetectedMalwareActions"
                  }
                ],
                "description": "Gets or sets Defender’s actions to take on detected Malware per threat level.",
                "nullable": true
              },
              "defenderSystemScanSchedule": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.weeklySchedule"
                  }
                ],
                "description": "Defender day of the week for the system scan."
              },
              "defenderFilesAndFoldersToExclude": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Files and folder to exclude from scans and real time protection."
              },
              "defenderFileExtensionsToExclude": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "File extensions to exclude from scans and real time protection."
              },
              "defenderScanMaxCpu": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Max CPU usage percentage during scan. Valid values 0 to 100",
                "format": "int32",
                "nullable": true
              },
              "defenderMonitorFileActivity": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderMonitorFileActivity"
                  }
                ],
                "description": "Value for monitoring file activity."
              },
              "defenderPotentiallyUnwantedAppAction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderPotentiallyUnwantedAppAction"
                  }
                ],
                "description": "Gets or sets Defender’s action to take on Potentially Unwanted Application (PUA), which includes software with behaviors of ad-injection, software bundling, persistent solicitation for payment or subscription, etc. Defender alerts user when PUA is being downloaded or attempts to install itself. Added in Windows 10 for desktop.",
                "nullable": true
              },
              "defenderProcessesToExclude": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Processes to exclude from scans and real time protection."
              },
              "defenderPromptForSampleSubmission": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderPromptForSampleSubmission"
                  }
                ],
                "description": "The configuration for how to prompt user for sample submission."
              },
              "defenderRequireBehaviorMonitoring": {
                "type": "boolean",
                "description": "Indicates whether or not to require behavior monitoring."
              },
              "defenderRequireCloudProtection": {
                "type": "boolean",
                "description": "Indicates whether or not to require cloud protection."
              },
              "defenderRequireNetworkInspectionSystem": {
                "type": "boolean",
                "description": "Indicates whether or not to require network inspection system."
              },
              "defenderRequireRealTimeMonitoring": {
                "type": "boolean",
                "description": "Indicates whether or not to require real time monitoring."
              },
              "defenderScanArchiveFiles": {
                "type": "boolean",
                "description": "Indicates whether or not to scan archive files."
              },
              "defenderScanDownloads": {
                "type": "boolean",
                "description": "Indicates whether or not to scan downloads."
              },
              "defenderScanNetworkFiles": {
                "type": "boolean",
                "description": "Indicates whether or not to scan files opened from a network folder."
              },
              "defenderScanIncomingMail": {
                "type": "boolean",
                "description": "Indicates whether or not to scan incoming mail messages."
              },
              "defenderScanMappedNetworkDrivesDuringFullScan": {
                "type": "boolean",
                "description": "Indicates whether or not to scan mapped network drives during full scan."
              },
              "defenderScanRemovableDrivesDuringFullScan": {
                "type": "boolean",
                "description": "Indicates whether or not to scan removable drives during full scan."
              },
              "defenderScanScriptsLoadedInInternetExplorer": {
                "type": "boolean",
                "description": "Indicates whether or not to scan scripts loaded in Internet Explorer browser."
              },
              "defenderSignatureUpdateIntervalInHours": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The signature update interval in hours. Specify 0 not to check. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "defenderScanType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderScanType"
                  }
                ],
                "description": "The defender system scan type."
              },
              "defenderScheduledScanTime": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "The defender time for the system scan.",
                "format": "time",
                "nullable": true
              },
              "defenderScheduledQuickScanTime": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "The time to perform a daily quick scan.",
                "format": "time",
                "nullable": true
              },
              "defenderCloudBlockLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderCloudBlockLevelType"
                  }
                ],
                "description": "Specifies the level of cloud-delivered protection."
              },
              "defenderCloudExtendedTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Timeout extension for file scanning by the cloud. Valid values 0 to 50",
                "format": "int32",
                "nullable": true
              },
              "lockScreenAllowTimeoutConfiguration": {
                "type": "boolean",
                "description": "Specify whether to show a user-configurable setting to control the screen timeout while on the lock screen of Windows 10 Mobile devices. If this policy is set to Allow, the value set by lockScreenTimeoutInSeconds is ignored."
              },
              "lockScreenBlockActionCenterNotifications": {
                "type": "boolean",
                "description": "Indicates whether or not to block action center notifications over lock screen."
              },
              "lockScreenBlockCortana": {
                "type": "boolean",
                "description": "Indicates whether or not the user can interact with Cortana using speech while the system is locked."
              },
              "lockScreenBlockToastNotifications": {
                "type": "boolean",
                "description": "Indicates whether to allow toast notifications above the device lock screen."
              },
              "lockScreenTimeoutInSeconds": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Set the duration (in seconds) from the screen locking to the screen turning off for Windows 10 Mobile devices. Supported values are 11-1800. Valid values 11 to 1800",
                "format": "int32",
                "nullable": true
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Specify whether PINs or passwords such as \"1111\" or \"1234\" are allowed. For Windows 10 desktops, it also controls the use of picture passwords."
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The password expiration in days. Valid values 0 to 730",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minimum password length. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of previous passwords to prevent reuse of. Valid values 0 to 50",
                "format": "int32",
                "nullable": true
              },
              "passwordRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require the user to have a password."
              },
              "passwordRequireWhenResumeFromIdleState": {
                "type": "boolean",
                "description": "Indicates whether or not to require a password upon resuming from an idle state."
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type."
              },
              "passwordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of sign in failures before factory reset. Valid values 0 to 999",
                "format": "int32",
                "nullable": true
              },
              "privacyAdvertisingId": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.stateManagementSetting"
                  }
                ],
                "description": "Enables or disables the use of advertising ID. Added in Windows 10, version 1607."
              },
              "privacyAutoAcceptPairingAndConsentPrompts": {
                "type": "boolean",
                "description": "Indicates whether or not to allow the automatic acceptance of the pairing and privacy user consent dialog when launching apps."
              },
              "privacyBlockInputPersonalization": {
                "type": "boolean",
                "description": "Indicates whether or not to block the usage of cloud based speech services for Cortana, Dictation, or Store applications."
              },
              "startBlockUnpinningAppsFromTaskbar": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from unpinning apps from taskbar."
              },
              "startMenuAppListVisibility": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsStartMenuAppListVisibilityType"
                  }
                ],
                "description": "Setting the value of this collapses the app list, removes the app list entirely, or disables the corresponding toggle in the Settings app."
              },
              "startMenuHideChangeAccountSettings": {
                "type": "boolean",
                "description": "Enabling this policy hides the change account setting from appearing in the user tile in the start menu."
              },
              "startMenuHideFrequentlyUsedApps": {
                "type": "boolean",
                "description": "Enabling this policy hides the most used apps from appearing on the start menu and disables the corresponding toggle in the Settings app."
              },
              "startMenuHideHibernate": {
                "type": "boolean",
                "description": "Enabling this policy hides hibernate from appearing in the power button in the start menu."
              },
              "startMenuHideLock": {
                "type": "boolean",
                "description": "Enabling this policy hides lock from appearing in the user tile in the start menu."
              },
              "startMenuHidePowerButton": {
                "type": "boolean",
                "description": "Enabling this policy hides the power button from appearing in the start menu."
              },
              "startMenuHideRecentJumpLists": {
                "type": "boolean",
                "description": "Enabling this policy hides recent jump lists from appearing on the start menu/taskbar and disables the corresponding toggle in the Settings app."
              },
              "startMenuHideRecentlyAddedApps": {
                "type": "boolean",
                "description": "Enabling this policy hides recently added apps from appearing on the start menu and disables the corresponding toggle in the Settings app."
              },
              "startMenuHideRestartOptions": {
                "type": "boolean",
                "description": "Enabling this policy hides “Restart/Update and Restart” from appearing in the power button in the start menu."
              },
              "startMenuHideShutDown": {
                "type": "boolean",
                "description": "Enabling this policy hides shut down/update and shut down from appearing in the power button in the start menu."
              },
              "startMenuHideSignOut": {
                "type": "boolean",
                "description": "Enabling this policy hides sign out from appearing in the user tile in the start menu."
              },
              "startMenuHideSleep": {
                "type": "boolean",
                "description": "Enabling this policy hides sleep from appearing in the power button in the start menu."
              },
              "startMenuHideSwitchAccount": {
                "type": "boolean",
                "description": "Enabling this policy hides switch account from appearing in the user tile in the start menu."
              },
              "startMenuHideUserTile": {
                "type": "boolean",
                "description": "Enabling this policy hides the user tile from appearing in the start menu."
              },
              "startMenuLayoutEdgeAssetsXml": {
                "type": "string",
                "description": "This policy setting allows you to import Edge assets to be used with startMenuLayoutXml policy. Start layout can contain secondary tile from Edge app which looks for Edge local asset file. Edge local asset would not exist and cause Edge secondary tile to appear empty in this case. This policy only gets applied when startMenuLayoutXml policy is modified. The value should be a UTF-8 Base64 encoded byte array.",
                "format": "base64url",
                "nullable": true
              },
              "startMenuLayoutXml": {
                "type": "string",
                "description": "Allows admins to override the default Start menu layout and prevents the user from changing it. The layout is modified by specifying an XML file based on a layout modification schema. XML needs to be in a UTF8 encoded byte array format.",
                "format": "base64url",
                "nullable": true
              },
              "startMenuMode": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsStartMenuModeType"
                  }
                ],
                "description": "Allows admins to decide how the Start menu is displayed."
              },
              "startMenuPinnedFolderDocuments": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Documents folder shortcut on the Start menu."
              },
              "startMenuPinnedFolderDownloads": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Downloads folder shortcut on the Start menu."
              },
              "startMenuPinnedFolderFileExplorer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the FileExplorer shortcut on the Start menu."
              },
              "startMenuPinnedFolderHomeGroup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the HomeGroup folder shortcut on the Start menu."
              },
              "startMenuPinnedFolderMusic": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Music folder shortcut on the Start menu."
              },
              "startMenuPinnedFolderNetwork": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Network folder shortcut on the Start menu."
              },
              "startMenuPinnedFolderPersonalFolder": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the PersonalFolder shortcut on the Start menu."
              },
              "startMenuPinnedFolderPictures": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Pictures folder shortcut on the Start menu."
              },
              "startMenuPinnedFolderSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Settings folder shortcut on the Start menu."
              },
              "startMenuPinnedFolderVideos": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Videos folder shortcut on the Start menu."
              },
              "settingsBlockSettingsApp": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Settings app."
              },
              "settingsBlockSystemPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to System in Settings app."
              },
              "settingsBlockDevicesPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Devices in Settings app."
              },
              "settingsBlockNetworkInternetPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Network & Internet in Settings app."
              },
              "settingsBlockPersonalizationPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Personalization in Settings app."
              },
              "settingsBlockAccountsPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Accounts in Settings app."
              },
              "settingsBlockTimeLanguagePage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Time & Language in Settings app."
              },
              "settingsBlockEaseOfAccessPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Ease of Access in Settings app."
              },
              "settingsBlockPrivacyPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Privacy in Settings app."
              },
              "settingsBlockUpdateSecurityPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Update & Security in Settings app."
              },
              "settingsBlockAppsPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Apps in Settings app."
              },
              "settingsBlockGamingPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Gaming in Settings app."
              },
              "windowsSpotlightBlockConsumerSpecificFeatures": {
                "type": "boolean",
                "description": "Allows IT admins to block experiences that are typically for consumers only, such as Start suggestions, Membership notifications, Post-OOBE app install and redirect tiles."
              },
              "windowsSpotlightBlocked": {
                "type": "boolean",
                "description": "Allows IT admins to turn off all Windows Spotlight features"
              },
              "windowsSpotlightBlockOnActionCenter": {
                "type": "boolean",
                "description": "Block suggestions from Microsoft that show after each OS clean install, upgrade or in an on-going basis to introduce users to what is new or changed"
              },
              "windowsSpotlightBlockTailoredExperiences": {
                "type": "boolean",
                "description": "Block personalized content in Windows spotlight based on user’s device usage."
              },
              "windowsSpotlightBlockThirdPartyNotifications": {
                "type": "boolean",
                "description": "Block third party content delivered via Windows Spotlight"
              },
              "windowsSpotlightBlockWelcomeExperience": {
                "type": "boolean",
                "description": "Block Windows Spotlight Windows welcome experience"
              },
              "windowsSpotlightBlockWindowsTips": {
                "type": "boolean",
                "description": "Allows IT admins to turn off the popup of Windows Tips."
              },
              "windowsSpotlightConfigureOnLockScreen": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsSpotlightEnablementSettings"
                  }
                ],
                "description": "Specifies the type of Spotlight"
              },
              "networkProxyApplySettingsDeviceWide": {
                "type": "boolean",
                "description": "If set, proxy settings will be applied to all processes and accounts in the device. Otherwise, it will be applied to the user account that’s enrolled into MDM."
              },
              "networkProxyDisableAutoDetect": {
                "type": "boolean",
                "description": "Disable automatic detection of settings. If enabled, the system will try to find the path to a proxy auto-config (PAC) script."
              },
              "networkProxyAutomaticConfigurationUrl": {
                "type": "string",
                "description": "Address to the proxy auto-config (PAC) script you want to use.",
                "nullable": true
              },
              "networkProxyServer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windows10NetworkProxyServer"
                  }
                ],
                "description": "Specifies manual proxy server settings.",
                "nullable": true
              },
              "accountsBlockAddingNonMicrosoftAccountEmail": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from adding email accounts to the device that are not associated with a Microsoft account."
              },
              "antiTheftModeBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from selecting an AntiTheft mode preference (Windows 10 Mobile only)."
              },
              "bluetoothBlocked": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using bluetooth."
              },
              "cameraBlocked": {
                "type": "boolean",
                "description": "Whether or not to Block the user from accessing the camera of the device."
              },
              "connectedDevicesServiceBlocked": {
                "type": "boolean",
                "description": "Whether or not to block Connected Devices Service which enables discovery and connection to other devices, remote messaging, remote app sessions and other cross-device experiences."
              },
              "certificatesBlockManualRootCertificateInstallation": {
                "type": "boolean",
                "description": "Whether or not to Block the user from doing manual root certificate installation."
              },
              "copyPasteBlocked": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using copy paste."
              },
              "cortanaBlocked": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using Cortana."
              },
              "deviceManagementBlockFactoryResetOnMobile": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from resetting their phone."
              },
              "deviceManagementBlockManualUnenroll": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from doing manual un-enrollment from device management."
              },
              "safeSearchFilter": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.safeSearchFilterType"
                  }
                ],
                "description": "Specifies what filter level of safe search is required."
              },
              "edgeBlockPopups": {
                "type": "boolean",
                "description": "Indicates whether or not to block popups."
              },
              "edgeBlockSearchSuggestions": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using the search suggestions in the address bar."
              },
              "edgeBlockSendingIntranetTrafficToInternetExplorer": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from sending Intranet traffic to Internet Explorer from Edge."
              },
              "edgeRequireSmartScreen": {
                "type": "boolean",
                "description": "Indicates whether or not to Require the user to use the smart screen filter."
              },
              "edgeEnterpriseModeSiteListLocation": {
                "type": "string",
                "description": "Indicates the enterprise mode site list location. Could be a local file, local network or http location.",
                "nullable": true
              },
              "edgeFirstRunUrl": {
                "type": "string",
                "description": "The first run URL for when Edge browser is opened for the first time.",
                "nullable": true
              },
              "edgeSearchEngine": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.edgeSearchEngineBase"
                  }
                ],
                "description": "Allows IT admins to set a default search engine for MDM-Controlled devices. Users can override this and change their default search engine provided the AllowSearchEngineCustomization policy is not set.",
                "nullable": true
              },
              "edgeHomepageUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The list of URLs for homepages shodwn on MDM-enrolled devices on Edge browser."
              },
              "edgeBlockAccessToAboutFlags": {
                "type": "boolean",
                "description": "Indicates whether or not to prevent access to about flags on Edge browser."
              },
              "smartScreenBlockPromptOverride": {
                "type": "boolean",
                "description": "Indicates whether or not users can override SmartScreen Filter warnings about potentially malicious websites."
              },
              "smartScreenBlockPromptOverrideForFiles": {
                "type": "boolean",
                "description": "Indicates whether or not users can override the SmartScreen Filter warnings about downloading unverified files"
              },
              "webRtcBlockLocalhostIpAddress": {
                "type": "boolean",
                "description": "Indicates whether or not user's localhost IP address is displayed while making phone calls using the WebRTC"
              },
              "internetSharingBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using internet sharing."
              },
              "settingsBlockAddProvisioningPackage": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from installing provisioning packages."
              },
              "settingsBlockRemoveProvisioningPackage": {
                "type": "boolean",
                "description": "Indicates whether or not to block the runtime configuration agent from removing provisioning packages."
              },
              "settingsBlockChangeSystemTime": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from changing date and time settings."
              },
              "settingsBlockEditDeviceName": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from editing the device name."
              },
              "settingsBlockChangeRegion": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from changing the region settings."
              },
              "settingsBlockChangeLanguage": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from changing the language settings."
              },
              "settingsBlockChangePowerSleep": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from changing power and sleep settings."
              },
              "locationServicesBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from location services."
              },
              "microsoftAccountBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block a Microsoft account."
              },
              "microsoftAccountBlockSettingsSync": {
                "type": "boolean",
                "description": "Indicates whether or not to Block Microsoft account settings sync."
              },
              "nfcBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using near field communication."
              },
              "resetProtectionModeBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from reset protection mode."
              },
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from taking Screenshots."
              },
              "storageBlockRemovableStorage": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using removable storage."
              },
              "storageRequireMobileDeviceEncryption": {
                "type": "boolean",
                "description": "Indicating whether or not to require encryption on a mobile device."
              },
              "usbBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from USB connection."
              },
              "voiceRecordingBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from voice recording."
              },
              "wiFiBlockAutomaticConnectHotspots": {
                "type": "boolean",
                "description": "Indicating whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked."
              },
              "wiFiBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using Wi-Fi."
              },
              "wiFiBlockManualConfiguration": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using Wi-Fi manual configuration."
              },
              "wiFiScanInterval": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specify how often devices scan for Wi-Fi networks. Supported values are 1-500, where 100 = default, and 500 = low frequency. Valid values 1 to 500",
                "format": "int32",
                "nullable": true
              },
              "wirelessDisplayBlockProjectionToThisDevice": {
                "type": "boolean",
                "description": "Indicates whether or not to allow other devices from discovering this PC for projection."
              },
              "wirelessDisplayBlockUserInputFromReceiver": {
                "type": "boolean",
                "description": "Indicates whether or not to allow user input from wireless display receiver."
              },
              "wirelessDisplayRequirePinForPairing": {
                "type": "boolean",
                "description": "Indicates whether or not to require a PIN for new devices to initiate pairing."
              },
              "windowsStoreBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using the Windows store."
              },
              "appsAllowTrustedAppsSideloading": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.stateManagementSetting"
                  }
                ],
                "description": "Indicates whether apps from AppX packages signed with a trusted certificate can be side loaded."
              },
              "windowsStoreBlockAutoUpdate": {
                "type": "boolean",
                "description": "Indicates whether or not to block automatic update of apps from Windows Store."
              },
              "developerUnlockSetting": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.stateManagementSetting"
                  }
                ],
                "description": "Indicates whether or not to allow developer unlock."
              },
              "sharedUserAppDataAllowed": {
                "type": "boolean",
                "description": "Indicates whether or not to block multiple users of the same app to share data."
              },
              "appsBlockWindowsStoreOriginatedApps": {
                "type": "boolean",
                "description": "Indicates whether or not to disable the launch of all apps from Windows Store that came pre-installed or were downloaded."
              },
              "windowsStoreEnablePrivateStoreOnly": {
                "type": "boolean",
                "description": "Indicates whether or not to enable Private Store Only."
              },
              "storageRestrictAppDataToSystemVolume": {
                "type": "boolean",
                "description": "Indicates whether application data is restricted to the system drive."
              },
              "storageRestrictAppInstallToSystemVolume": {
                "type": "boolean",
                "description": "Indicates whether the installation of applications is restricted to the system drive."
              },
              "gameDvrBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block DVR and broadcasting."
              },
              "experienceBlockDeviceDiscovery": {
                "type": "boolean",
                "description": "Indicates whether or not to enable device discovery UX."
              },
              "experienceBlockErrorDialogWhenNoSIM": {
                "type": "boolean",
                "description": "Indicates whether or not to allow the error dialog from displaying if no SIM card is detected."
              },
              "experienceBlockTaskSwitcher": {
                "type": "boolean",
                "description": "Indicates whether or not to enable task switching on the device."
              },
              "logonBlockFastUserSwitching": {
                "type": "boolean",
                "description": "Disables the ability to quickly switch between users that are logged on simultaneously without logging off."
              },
              "assignedAccessMultiModeProfiles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsAssignedAccessProfile"
                }
              },
              "privacyAccessControls": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsPrivacyDataAccessControlItem"
                }
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windows10GeneralConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "enableAutomaticRedeployment": true,
          "assignedAccessSingleModeUserName": "String",
          "assignedAccessSingleModeAppUserModelId": "String",
          "microsoftAccountSignInAssistantSettings": {
            "@odata.type": "microsoft.graph.signInAssistantOptions"
          },
          "authenticationAllowSecondaryDevice": true,
          "authenticationAllowFIDODevice": true,
          "cryptographyAllowFipsAlgorithmPolicy": true,
          "displayAppListWithGdiDPIScalingTurnedOn": [
            "String"
          ],
          "displayAppListWithGdiDPIScalingTurnedOff": [
            "String"
          ],
          "enterpriseCloudPrintDiscoveryEndPoint": "String",
          "enterpriseCloudPrintOAuthAuthority": "String",
          "enterpriseCloudPrintOAuthClientIdentifier": "String",
          "enterpriseCloudPrintResourceIdentifier": "String",
          "enterpriseCloudPrintDiscoveryMaxLimit": "Int32",
          "enterpriseCloudPrintMopriaDiscoveryResourceIdentifier": "String",
          "messagingBlockSync": true,
          "messagingBlockMMS": true,
          "messagingBlockRichCommunicationServices": true,
          "searchBlockDiacritics": true,
          "searchDisableAutoLanguageDetection": true,
          "searchDisableIndexingEncryptedItems": true,
          "searchEnableRemoteQueries": true,
          "searchDisableUseLocation": true,
          "searchDisableIndexerBackoff": true,
          "searchDisableIndexingRemovableDrive": true,
          "searchEnableAutomaticIndexSizeManangement": true,
          "securityBlockAzureADJoinedDevicesAutoEncryption": true,
          "diagnosticsDataSubmissionMode": {
            "@odata.type": "microsoft.graph.diagnosticDataSubmissionMode"
          },
          "oneDriveDisableFileSync": true,
          "systemTelemetryProxyServer": "String",
          "inkWorkspaceAccess": {
            "@odata.type": "microsoft.graph.inkAccessSetting"
          },
          "inkWorkspaceBlockSuggestedApps": true,
          "smartScreenEnableAppInstallControl": true,
          "personalizationDesktopImageUrl": "String",
          "personalizationLockScreenImageUrl": "String",
          "bluetoothAllowedServices": [
            "String"
          ],
          "bluetoothBlockAdvertising": true,
          "bluetoothBlockDiscoverableMode": true,
          "bluetoothBlockPrePairing": true,
          "edgeBlockAutofill": true,
          "edgeBlocked": true,
          "edgeCookiePolicy": {
            "@odata.type": "microsoft.graph.edgeCookiePolicy"
          },
          "edgeBlockDeveloperTools": true,
          "edgeBlockSendingDoNotTrackHeader": true,
          "edgeBlockExtensions": true,
          "edgeBlockInPrivateBrowsing": true,
          "edgeBlockJavaScript": true,
          "edgeBlockPasswordManager": true,
          "edgeBlockAddressBarDropdown": true,
          "edgeBlockCompatibilityList": true,
          "edgeClearBrowsingDataOnExit": true,
          "edgeAllowStartPagesModification": true,
          "edgeDisableFirstRunPage": true,
          "edgeBlockLiveTileDataCollection": true,
          "edgeSyncFavoritesWithInternetExplorer": true,
          "cellularBlockDataWhenRoaming": true,
          "cellularBlockVpn": true,
          "cellularBlockVpnWhenRoaming": true,
          "cellularData": {
            "@odata.type": "microsoft.graph.configurationUsage"
          },
          "defenderBlockEndUserAccess": true,
          "defenderDaysBeforeDeletingQuarantinedMalware": "Int32",
          "defenderDetectedMalwareActions": {
            "@odata.type": "microsoft.graph.defenderDetectedMalwareActions"
          },
          "defenderSystemScanSchedule": {
            "@odata.type": "microsoft.graph.weeklySchedule"
          },
          "defenderFilesAndFoldersToExclude": [
            "String"
          ],
          "defenderFileExtensionsToExclude": [
            "String"
          ],
          "defenderScanMaxCpu": "Int32",
          "defenderMonitorFileActivity": {
            "@odata.type": "microsoft.graph.defenderMonitorFileActivity"
          },
          "defenderPotentiallyUnwantedAppAction": {
            "@odata.type": "microsoft.graph.defenderPotentiallyUnwantedAppAction"
          },
          "defenderProcessesToExclude": [
            "String"
          ],
          "defenderPromptForSampleSubmission": {
            "@odata.type": "microsoft.graph.defenderPromptForSampleSubmission"
          },
          "defenderRequireBehaviorMonitoring": true,
          "defenderRequireCloudProtection": true,
          "defenderRequireNetworkInspectionSystem": true,
          "defenderRequireRealTimeMonitoring": true,
          "defenderScanArchiveFiles": true,
          "defenderScanDownloads": true,
          "defenderScanNetworkFiles": true,
          "defenderScanIncomingMail": true,
          "defenderScanMappedNetworkDrivesDuringFullScan": true,
          "defenderScanRemovableDrivesDuringFullScan": true,
          "defenderScanScriptsLoadedInInternetExplorer": true,
          "defenderSignatureUpdateIntervalInHours": "Int32",
          "defenderScanType": {
            "@odata.type": "microsoft.graph.defenderScanType"
          },
          "defenderScheduledScanTime": "TimeOfDay (timestamp)",
          "defenderScheduledQuickScanTime": "TimeOfDay (timestamp)",
          "defenderCloudBlockLevel": {
            "@odata.type": "microsoft.graph.defenderCloudBlockLevelType"
          },
          "defenderCloudExtendedTimeout": "Int32",
          "lockScreenAllowTimeoutConfiguration": true,
          "lockScreenBlockActionCenterNotifications": true,
          "lockScreenBlockCortana": true,
          "lockScreenBlockToastNotifications": true,
          "lockScreenTimeoutInSeconds": "Int32",
          "passwordBlockSimple": true,
          "passwordExpirationDays": "Int32",
          "passwordMinimumLength": "Int32",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "Int32",
          "passwordMinimumCharacterSetCount": "Int32",
          "passwordPreviousPasswordBlockCount": "Int32",
          "passwordRequired": true,
          "passwordRequireWhenResumeFromIdleState": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordSignInFailureCountBeforeFactoryReset": "Int32",
          "privacyAdvertisingId": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "privacyAutoAcceptPairingAndConsentPrompts": true,
          "privacyBlockInputPersonalization": true,
          "startBlockUnpinningAppsFromTaskbar": true,
          "startMenuAppListVisibility": {
            "@odata.type": "microsoft.graph.windowsStartMenuAppListVisibilityType"
          },
          "startMenuHideChangeAccountSettings": true,
          "startMenuHideFrequentlyUsedApps": true,
          "startMenuHideHibernate": true,
          "startMenuHideLock": true,
          "startMenuHidePowerButton": true,
          "startMenuHideRecentJumpLists": true,
          "startMenuHideRecentlyAddedApps": true,
          "startMenuHideRestartOptions": true,
          "startMenuHideShutDown": true,
          "startMenuHideSignOut": true,
          "startMenuHideSleep": true,
          "startMenuHideSwitchAccount": true,
          "startMenuHideUserTile": true,
          "startMenuLayoutEdgeAssetsXml": "Binary",
          "startMenuLayoutXml": "Binary",
          "startMenuMode": {
            "@odata.type": "microsoft.graph.windowsStartMenuModeType"
          },
          "startMenuPinnedFolderDocuments": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderDownloads": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderFileExplorer": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderHomeGroup": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderMusic": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderNetwork": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderPersonalFolder": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderPictures": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderSettings": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderVideos": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "settingsBlockSettingsApp": true,
          "settingsBlockSystemPage": true,
          "settingsBlockDevicesPage": true,
          "settingsBlockNetworkInternetPage": true,
          "settingsBlockPersonalizationPage": true,
          "settingsBlockAccountsPage": true,
          "settingsBlockTimeLanguagePage": true,
          "settingsBlockEaseOfAccessPage": true,
          "settingsBlockPrivacyPage": true,
          "settingsBlockUpdateSecurityPage": true,
          "settingsBlockAppsPage": true,
          "settingsBlockGamingPage": true,
          "windowsSpotlightBlockConsumerSpecificFeatures": true,
          "windowsSpotlightBlocked": true,
          "windowsSpotlightBlockOnActionCenter": true,
          "windowsSpotlightBlockTailoredExperiences": true,
          "windowsSpotlightBlockThirdPartyNotifications": true,
          "windowsSpotlightBlockWelcomeExperience": true,
          "windowsSpotlightBlockWindowsTips": true,
          "windowsSpotlightConfigureOnLockScreen": {
            "@odata.type": "microsoft.graph.windowsSpotlightEnablementSettings"
          },
          "networkProxyApplySettingsDeviceWide": true,
          "networkProxyDisableAutoDetect": true,
          "networkProxyAutomaticConfigurationUrl": "String",
          "networkProxyServer": {
            "@odata.type": "microsoft.graph.windows10NetworkProxyServer"
          },
          "accountsBlockAddingNonMicrosoftAccountEmail": true,
          "antiTheftModeBlocked": true,
          "bluetoothBlocked": true,
          "cameraBlocked": true,
          "connectedDevicesServiceBlocked": true,
          "certificatesBlockManualRootCertificateInstallation": true,
          "copyPasteBlocked": true,
          "cortanaBlocked": true,
          "deviceManagementBlockFactoryResetOnMobile": true,
          "deviceManagementBlockManualUnenroll": true,
          "safeSearchFilter": {
            "@odata.type": "microsoft.graph.safeSearchFilterType"
          },
          "edgeBlockPopups": true,
          "edgeBlockSearchSuggestions": true,
          "edgeBlockSendingIntranetTrafficToInternetExplorer": true,
          "edgeRequireSmartScreen": true,
          "edgeEnterpriseModeSiteListLocation": "String",
          "edgeFirstRunUrl": "String",
          "edgeSearchEngine": {
            "@odata.type": "microsoft.graph.edgeSearchEngineBase"
          },
          "edgeHomepageUrls": [
            "String"
          ],
          "edgeBlockAccessToAboutFlags": true,
          "smartScreenBlockPromptOverride": true,
          "smartScreenBlockPromptOverrideForFiles": true,
          "webRtcBlockLocalhostIpAddress": true,
          "internetSharingBlocked": true,
          "settingsBlockAddProvisioningPackage": true,
          "settingsBlockRemoveProvisioningPackage": true,
          "settingsBlockChangeSystemTime": true,
          "settingsBlockEditDeviceName": true,
          "settingsBlockChangeRegion": true,
          "settingsBlockChangeLanguage": true,
          "settingsBlockChangePowerSleep": true,
          "locationServicesBlocked": true,
          "microsoftAccountBlocked": true,
          "microsoftAccountBlockSettingsSync": true,
          "nfcBlocked": true,
          "resetProtectionModeBlocked": true,
          "screenCaptureBlocked": true,
          "storageBlockRemovableStorage": true,
          "storageRequireMobileDeviceEncryption": true,
          "usbBlocked": true,
          "voiceRecordingBlocked": true,
          "wiFiBlockAutomaticConnectHotspots": true,
          "wiFiBlocked": true,
          "wiFiBlockManualConfiguration": true,
          "wiFiScanInterval": "Int32",
          "wirelessDisplayBlockProjectionToThisDevice": true,
          "wirelessDisplayBlockUserInputFromReceiver": true,
          "wirelessDisplayRequirePinForPairing": true,
          "windowsStoreBlocked": true,
          "appsAllowTrustedAppsSideloading": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "windowsStoreBlockAutoUpdate": true,
          "developerUnlockSetting": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "sharedUserAppDataAllowed": true,
          "appsBlockWindowsStoreOriginatedApps": true,
          "windowsStoreEnablePrivateStoreOnly": true,
          "storageRestrictAppDataToSystemVolume": true,
          "storageRestrictAppInstallToSystemVolume": true,
          "gameDvrBlocked": true,
          "experienceBlockDeviceDiscovery": true,
          "experienceBlockErrorDialogWhenNoSIM": true,
          "experienceBlockTaskSwitcher": true,
          "logonBlockFastUserSwitching": true,
          "assignedAccessMultiModeProfiles": [
            {
              "@odata.type": "microsoft.graph.windowsAssignedAccessProfile"
            }
          ],
          "privacyAccessControls": [
            {
              "@odata.type": "microsoft.graph.windowsPrivacyDataAccessControlItem"
            }
          ]
        }
      },
      "microsoft.graph.defenderDetectedMalwareActions": {
        "title": "defenderDetectedMalwareActions",
        "type": "object",
        "properties": {
          "lowSeverity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.defenderThreatAction"
              }
            ],
            "description": "Indicates a Defender action to take for low severity Malware threat detected."
          },
          "moderateSeverity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.defenderThreatAction"
              }
            ],
            "description": "Indicates a Defender action to take for moderate severity Malware threat detected."
          },
          "highSeverity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.defenderThreatAction"
              }
            ],
            "description": "Indicates a Defender action to take for high severity Malware threat detected."
          },
          "severeSeverity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.defenderThreatAction"
              }
            ],
            "description": "Indicates a Defender action to take for severe severity Malware threat detected."
          }
        },
        "example": {
          "lowSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          },
          "moderateSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          },
          "highSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          },
          "severeSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          }
        }
      },
      "microsoft.graph.windows10NetworkProxyServer": {
        "title": "windows10NetworkProxyServer",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Address to the proxy server. Specify an address in the format <server>[“:”<port>]"
          },
          "exceptions": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Addresses that should not use the proxy server. The system will not use the proxy server for addresses beginning with what is specified in this node."
          },
          "useForLocalAddresses": {
            "type": "boolean",
            "description": "Specifies whether the proxy server should be used for local (intranet) addresses."
          }
        },
        "example": {
          "address": "String",
          "exceptions": [
            "String"
          ],
          "useForLocalAddresses": true
        }
      },
      "microsoft.graph.edgeSearchEngineBase": {
        "title": "edgeSearchEngineBase",
        "type": "object"
      },
      "microsoft.graph.edgeSearchEngineCustom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.edgeSearchEngineBase"
          },
          {
            "title": "edgeSearchEngineCustom",
            "type": "object",
            "properties": {
              "edgeSearchEngineOpenSearchXmlUrl": {
                "type": "string",
                "description": "Points to a https link containing the OpenSearch xml file that contains, at minimum, the short name and the URL to the search Engine."
              }
            }
          }
        ],
        "example": {
          "edgeSearchEngineOpenSearchXmlUrl": "String"
        }
      },
      "microsoft.graph.edgeSearchEngine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.edgeSearchEngineBase"
          },
          {
            "title": "edgeSearchEngine",
            "type": "object",
            "properties": {
              "edgeSearchEngineType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.edgeSearchEngineType"
                  }
                ],
                "description": "Allows IT admins to set a predefined default search engine for MDM-Controlled devices."
              }
            }
          }
        ],
        "example": {
          "edgeSearchEngineType": {
            "@odata.type": "microsoft.graph.edgeSearchEngineType"
          }
        }
      },
      "microsoft.graph.windows10NetworkBoundaryConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10NetworkBoundaryConfiguration",
            "type": "object",
            "properties": {
              "windowsNetworkIsolationPolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsNetworkIsolationPolicy"
                  }
                ],
                "description": "Windows Network Isolation Policy",
                "nullable": true
              }
            },
            "description": "Windows10 Network Boundary Configuration"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "windowsNetworkIsolationPolicy": {
            "@odata.type": "microsoft.graph.windowsNetworkIsolationPolicy"
          }
        }
      },
      "microsoft.graph.windowsNetworkIsolationPolicy": {
        "title": "windowsNetworkIsolationPolicy",
        "type": "object",
        "properties": {
          "enterpriseNetworkDomainNames": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected. These locations will be considered a safe destination for enterprise data to be shared to."
          },
          "enterpriseCloudResources": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.proxiedDomain"
                }
              ],
              "nullable": true
            },
            "description": "Contains a list of enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy. This collection can contain a maximum of 500 elements."
          },
          "enterpriseIPRanges": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.ipRange"
                }
              ],
              "nullable": true
            },
            "description": "Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to. This collection can contain a maximum of 500 elements."
          },
          "enterpriseInternalProxyServers": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "This is the comma-separated list of internal proxy servers. For example, \"157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59\". These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseCloudResources policy to force traffic to the matched cloud resources through these proxies."
          },
          "enterpriseIPRangesAreAuthoritative": {
            "type": "boolean",
            "description": "Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false."
          },
          "enterpriseProxyServers": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "This is a list of proxy servers. Any server not on this list is considered non-enterprise."
          },
          "enterpriseProxyServersAreAuthoritative": {
            "type": "boolean",
            "description": "Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false"
          },
          "neutralDomainResources": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "List of domain names that can used for work or personal resource."
          }
        },
        "example": {
          "enterpriseNetworkDomainNames": [
            "String"
          ],
          "enterpriseCloudResources": [
            {
              "@odata.type": "microsoft.graph.proxiedDomain"
            }
          ],
          "enterpriseIPRanges": [
            {
              "@odata.type": "microsoft.graph.ipRange"
            }
          ],
          "enterpriseInternalProxyServers": [
            "String"
          ],
          "enterpriseIPRangesAreAuthoritative": true,
          "enterpriseProxyServers": [
            "String"
          ],
          "enterpriseProxyServersAreAuthoritative": true,
          "neutralDomainResources": [
            "String"
          ]
        }
      },
      "microsoft.graph.proxiedDomain": {
        "title": "proxiedDomain",
        "type": "object",
        "properties": {
          "ipAddressOrFQDN": {
            "type": "string",
            "description": "The IP address or FQDN"
          },
          "proxy": {
            "type": "string",
            "description": "Proxy IP",
            "nullable": true
          }
        },
        "example": {
          "ipAddressOrFQDN": "String",
          "proxy": "String"
        }
      },
      "microsoft.graph.ipRange": {
        "title": "ipRange",
        "type": "object"
      },
      "microsoft.graph.iPv6Range": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.ipRange"
          },
          {
            "title": "iPv6Range",
            "type": "object",
            "properties": {
              "lowerAddress": {
                "type": "string",
                "description": "Lower address."
              },
              "upperAddress": {
                "type": "string",
                "description": "Upper address."
              }
            }
          }
        ],
        "example": {
          "lowerAddress": "String",
          "upperAddress": "String"
        }
      },
      "microsoft.graph.iPv4Range": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.ipRange"
          },
          {
            "title": "iPv4Range",
            "type": "object",
            "properties": {
              "lowerAddress": {
                "type": "string",
                "description": "Lower address."
              },
              "upperAddress": {
                "type": "string",
                "description": "Upper address."
              }
            }
          }
        ],
        "example": {
          "lowerAddress": "String",
          "upperAddress": "String"
        }
      },
      "microsoft.graph.windows10CustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10CustomConfiguration",
            "type": "object",
            "properties": {
              "omaSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.omaSetting"
                    }
                  ],
                  "nullable": true
                },
                "description": "OMA settings. This collection can contain a maximum of 1000 elements."
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windows10CustomConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.windows10EasEmailProfileConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10EasEmailProfileConfiguration",
            "type": "object",
            "properties": {
              "accountName": {
                "type": "string",
                "description": "Account name."
              },
              "syncCalendar": {
                "type": "boolean",
                "description": "Whether or not to sync the calendar."
              },
              "syncContacts": {
                "type": "boolean",
                "description": "Whether or not to sync contacts."
              },
              "syncTasks": {
                "type": "boolean",
                "description": "Whether or not to sync tasks."
              },
              "durationOfEmailToSync": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailSyncDuration"
                  }
                ],
                "description": "Duration of email to sync."
              },
              "emailAddressSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.userEmailSource"
                  }
                ],
                "description": "Email attribute that is picked from AAD and injected into this profile before installing on the device."
              },
              "emailSyncSchedule": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailSyncSchedule"
                  }
                ],
                "description": "Email sync schedule."
              },
              "hostName": {
                "type": "string",
                "description": "Exchange location that (URL) that the native mail app connects to."
              },
              "requireSsl": {
                "type": "boolean",
                "description": "Indicates whether or not to use SSL."
              },
              "usernameSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.userEmailSource"
                  }
                ],
                "description": "Username attribute that is picked from AAD and injected into this profile before installing on the device."
              }
            },
            "description": "By providing configurations in this profile you can instruct the native email client (Outlook) on Windows 10 devices to communicate with an Exchange server and get email, contacts, calendar, and tasks. Furthermore, you can also specify how much email to sync and how often the device should sync."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "accountName": "String",
          "syncCalendar": true,
          "syncContacts": true,
          "syncTasks": true,
          "durationOfEmailToSync": {
            "@odata.type": "microsoft.graph.emailSyncDuration"
          },
          "emailAddressSource": {
            "@odata.type": "microsoft.graph.userEmailSource"
          },
          "emailSyncSchedule": {
            "@odata.type": "microsoft.graph.emailSyncSchedule"
          },
          "hostName": "String",
          "requireSsl": true,
          "usernameSource": {
            "@odata.type": "microsoft.graph.userEmailSource"
          }
        }
      },
      "microsoft.graph.windows10EnterpriseModernAppManagementConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10EnterpriseModernAppManagementConfiguration",
            "type": "object",
            "properties": {
              "uninstallBuiltInApps": {
                "type": "boolean",
                "description": "Indicates whether or not to uninstall a fixed list of built-in Windows apps."
              }
            },
            "description": "Windows10 Enterprise Modern App Management Configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "uninstallBuiltInApps": true
        }
      },
      "microsoft.graph.sharedPCConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "sharedPCConfiguration",
            "type": "object",
            "properties": {
              "accountManagerPolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharedPCAccountManagerPolicy"
                  }
                ],
                "description": "Specifies how accounts are managed on a shared PC. Only applies when disableAccountManager is false.",
                "nullable": true
              },
              "allowedAccounts": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharedPCAllowedAccountType"
                  }
                ],
                "description": "Indicates which type of accounts are allowed to use on a shared PC."
              },
              "allowLocalStorage": {
                "type": "boolean",
                "description": "Specifies whether local storage is allowed on a shared PC."
              },
              "disableAccountManager": {
                "type": "boolean",
                "description": "Disables the account manager for shared PC mode."
              },
              "disableEduPolicies": {
                "type": "boolean",
                "description": "Specifies whether the default shared PC education environment policies should be disabled. For Windows 10 RS2 and later, this policy will be applied without setting Enabled to true."
              },
              "disablePowerPolicies": {
                "type": "boolean",
                "description": "Specifies whether the default shared PC power policies should be disabled."
              },
              "disableSignInOnResume": {
                "type": "boolean",
                "description": "Disables the requirement to sign in whenever the device wakes up from sleep mode."
              },
              "enabled": {
                "type": "boolean",
                "description": "Enables shared PC mode and applies the shared pc policies."
              },
              "idleTimeBeforeSleepInSeconds": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the time in seconds that a device must sit idle before the PC goes to sleep. Setting this value to 0 prevents the sleep timeout from occurring.",
                "format": "int32",
                "nullable": true
              },
              "kioskAppDisplayName": {
                "type": "string",
                "description": "Specifies the display text for the account shown on the sign-in screen which launches the app specified by SetKioskAppUserModelId. Only applies when KioskAppUserModelId is set.",
                "nullable": true
              },
              "kioskAppUserModelId": {
                "type": "string",
                "description": "Specifies the application user model ID of the app to use with assigned access.",
                "nullable": true
              },
              "maintenanceStartTime": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "Specifies the daily start time of maintenance hour.",
                "format": "time",
                "nullable": true
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the sharedPCConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "accountManagerPolicy": {
            "@odata.type": "microsoft.graph.sharedPCAccountManagerPolicy"
          },
          "allowedAccounts": {
            "@odata.type": "microsoft.graph.sharedPCAllowedAccountType"
          },
          "allowLocalStorage": true,
          "disableAccountManager": true,
          "disableEduPolicies": true,
          "disablePowerPolicies": true,
          "disableSignInOnResume": true,
          "enabled": true,
          "idleTimeBeforeSleepInSeconds": "Int32",
          "kioskAppDisplayName": "String",
          "kioskAppUserModelId": "String",
          "maintenanceStartTime": "TimeOfDay (timestamp)"
        }
      },
      "microsoft.graph.sharedPCAccountManagerPolicy": {
        "title": "sharedPCAccountManagerPolicy",
        "type": "object",
        "properties": {
          "accountDeletionPolicy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sharedPCAccountDeletionPolicyType"
              }
            ],
            "description": "Configures when accounts are deleted."
          },
          "cacheAccountsAboveDiskFreePercentage": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Sets the percentage of available disk space a PC should have before it stops deleting cached shared PC accounts. Only applies when AccountDeletionPolicy is DiskSpaceThreshold or DiskSpaceThresholdOrInactiveThreshold. Valid values 0 to 100",
            "format": "int32",
            "nullable": true
          },
          "inactiveThresholdDays": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Specifies when the accounts will start being deleted when they have not been logged on during the specified period, given as number of days. Only applies when AccountDeletionPolicy is DiskSpaceThreshold or DiskSpaceThresholdOrInactiveThreshold.",
            "format": "int32",
            "nullable": true
          },
          "removeAccountsBelowDiskFreePercentage": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Sets the percentage of disk space remaining on a PC before cached accounts will be deleted to free disk space. Accounts that have been inactive the longest will be deleted first. Only applies when AccountDeletionPolicy is DiskSpaceThresholdOrInactiveThreshold. Valid values 0 to 100",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "accountDeletionPolicy": {
            "@odata.type": "microsoft.graph.sharedPCAccountDeletionPolicyType"
          },
          "cacheAccountsAboveDiskFreePercentage": "Int32",
          "inactiveThresholdDays": "Int32",
          "removeAccountsBelowDiskFreePercentage": "Int32"
        }
      },
      "microsoft.graph.windows10PFXImportCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10PFXImportCertificateProfile",
            "type": "object",
            "properties": {
              "keyStorageProvider": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keyStorageProviderOption"
                  }
                ]
              }
            },
            "description": "Deprecated"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "keyStorageProvider": {
            "@odata.type": "microsoft.graph.keyStorageProviderOption"
          }
        }
      },
      "microsoft.graph.windows10SecureAssessmentConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10SecureAssessmentConfiguration",
            "type": "object",
            "properties": {
              "launchUri": {
                "type": "string",
                "description": "Url link to an assessment that's automatically loaded when the secure assessment browser is launched. It has to be a valid Url (http[s]://msdn.microsoft.com/).",
                "nullable": true
              },
              "configurationAccount": {
                "type": "string",
                "description": "The account used to configure the Windows device for taking the test. The user can be a domain account (domain\\user), an AAD account (username@tenant.com) or a local account (username).",
                "nullable": true
              },
              "allowPrinting": {
                "type": "boolean",
                "description": "Indicates whether or not to allow the app from printing during the test."
              },
              "allowScreenCapture": {
                "type": "boolean",
                "description": "Indicates whether or not to allow screen capture capability during a test."
              },
              "allowTextSuggestion": {
                "type": "boolean",
                "description": "Indicates whether or not to allow text suggestions during the test."
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the secureAssessment resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "launchUri": "String",
          "configurationAccount": "String",
          "allowPrinting": true,
          "allowScreenCapture": true,
          "allowTextSuggestion": true
        }
      },
      "microsoft.graph.windows81WifiImportConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows81WifiImportConfiguration",
            "type": "object",
            "properties": {
              "payloadFileName": {
                "type": "string",
                "description": "Payload file name (*.xml)."
              },
              "profileName": {
                "type": "string",
                "description": "Profile name displayed in the UI."
              },
              "payload": {
                "type": "string",
                "description": "Payload. (UTF8 encoded byte array). This is the XML file saved on the device you used to connect to the Wi-Fi endpoint.",
                "format": "base64url"
              }
            },
            "description": "Windows 8.1+ Wi-Fi import configuration. By configuring this profile you can instruct Windows 8.1 (and later) devices to connect to desired Wi-Fi endpoint. Connect a Windows 8.1 device to the desired Wi-Fi network and extract the XML from that device to later embed into this Wi-Fi profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "payloadFileName": "String",
          "profileName": "String",
          "payload": "Binary"
        }
      },
      "microsoft.graph.windowsCertificateProfileBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsCertificateProfileBase",
            "type": "object",
            "properties": {
              "renewalThresholdPercentage": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Certificate renewal threshold percentage. Valid values 1 to 99",
                "format": "int32"
              },
              "keyStorageProvider": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keyStorageProviderOption"
                  }
                ],
                "description": "Key Storage Provider (KSP)"
              },
              "subjectNameFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.subjectNameFormat"
                  }
                ],
                "description": "Certificate Subject Name Format"
              },
              "subjectAlternativeNameType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.subjectAlternativeNameType"
                  }
                ],
                "description": "Certificate Subject Alternative Name Type"
              },
              "certificateValidityPeriodValue": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value for the Certificate Validity Period",
                "format": "int32"
              },
              "certificateValidityPeriodScale": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.certificateValidityPeriodScale"
                  }
                ],
                "description": "Scale for the Certificate Validity Period"
              }
            },
            "description": "Device Configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "keyStorageProvider": {
            "@odata.type": "microsoft.graph.keyStorageProviderOption"
          },
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          }
        }
      },
      "microsoft.graph.windows10CertificateProfileBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsCertificateProfileBase"
          },
          {
            "title": "windows10CertificateProfileBase",
            "type": "object",
            "description": "Base class for Windows 10 certificate profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "keyStorageProvider": {
            "@odata.type": "microsoft.graph.keyStorageProviderOption"
          },
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          }
        }
      },
      "microsoft.graph.windows10PkcsCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windows10CertificateProfileBase"
          },
          {
            "title": "windows10PkcsCertificateProfile",
            "type": "object",
            "properties": {
              "certificationAuthority": {
                "type": "string",
                "description": "PKCS Certification Authority"
              },
              "certificationAuthorityName": {
                "type": "string",
                "description": "PKCS Certification Authority Name"
              },
              "certificateTemplateName": {
                "type": "string",
                "description": "PKCS Certificate Template Name"
              },
              "subjectAlternativeNameFormatString": {
                "type": "string",
                "description": "Custom String that defines the AAD Attribute.",
                "nullable": true
              }
            },
            "description": "Windows 10 Desktop and Mobile PKCS certificate profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "keyStorageProvider": {
            "@odata.type": "microsoft.graph.keyStorageProviderOption"
          },
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "certificationAuthority": "String",
          "certificationAuthorityName": "String",
          "certificateTemplateName": "String",
          "subjectAlternativeNameFormatString": "String"
        }
      },
      "microsoft.graph.windows81CertificateProfileBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsCertificateProfileBase"
          },
          {
            "title": "windows81CertificateProfileBase",
            "type": "object",
            "properties": {
              "extendedKeyUsages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extendedKeyUsage"
                },
                "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements."
              }
            },
            "description": "Device Configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "keyStorageProvider": {
            "@odata.type": "microsoft.graph.keyStorageProviderOption"
          },
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ]
        }
      },
      "microsoft.graph.windows81SCEPCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windows81CertificateProfileBase"
          },
          {
            "title": "windows81SCEPCertificateProfile",
            "type": "object",
            "properties": {
              "scepServerUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "SCEP Server Url(s)."
              },
              "subjectNameFormatString": {
                "type": "string",
                "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
                "nullable": true
              },
              "keyUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keyUsages"
                  }
                ],
                "description": "SCEP Key Usage."
              },
              "keySize": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keySize"
                  }
                ],
                "description": "SCEP Key Size."
              },
              "hashAlgorithm": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.hashAlgorithms"
                  }
                ],
                "description": "SCEP Hash Algorithm."
              },
              "subjectAlternativeNameFormatString": {
                "type": "string",
                "description": "Custom String that defines the AAD Attribute.",
                "nullable": true
              },
              "rootCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windows81TrustedRootCertificate"
                  }
                ],
                "nullable": true
              },
              "managedDeviceCertificateStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceCertificateState"
                }
              }
            },
            "description": "Windows 8.1+ SCEP certificate profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "keyStorageProvider": {
            "@odata.type": "microsoft.graph.keyStorageProviderOption"
          },
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ],
          "scepServerUrls": [
            "String"
          ],
          "subjectNameFormatString": "String",
          "keyUsage": {
            "@odata.type": "microsoft.graph.keyUsages"
          },
          "keySize": {
            "@odata.type": "microsoft.graph.keySize"
          },
          "hashAlgorithm": {
            "@odata.type": "microsoft.graph.hashAlgorithms"
          },
          "subjectAlternativeNameFormatString": "String",
          "rootCertificate": {
            "@odata.type": "microsoft.graph.windows81TrustedRootCertificate"
          },
          "managedDeviceCertificateStates": [
            {
              "@odata.type": "microsoft.graph.managedDeviceCertificateState"
            }
          ]
        }
      },
      "microsoft.graph.windows81TrustedRootCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows81TrustedRootCertificate",
            "type": "object",
            "properties": {
              "trustedRootCertificate": {
                "type": "string",
                "description": "Trusted Root Certificate",
                "format": "base64url"
              },
              "certFileName": {
                "type": "string",
                "description": "File name to display in UI.",
                "nullable": true
              },
              "destinationStore": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.certificateDestinationStore"
                  }
                ],
                "description": "Destination store location for the Trusted Root Certificate."
              }
            },
            "description": "Windows 8.1 Trusted Certificate configuration profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "trustedRootCertificate": "Binary",
          "certFileName": "String",
          "destinationStore": {
            "@odata.type": "microsoft.graph.certificateDestinationStore"
          }
        }
      },
      "microsoft.graph.windowsPhone81CustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsPhone81CustomConfiguration",
            "type": "object",
            "properties": {
              "omaSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.omaSetting"
                    }
                  ],
                  "nullable": true
                },
                "description": "OMA settings. This collection can contain a maximum of 1000 elements."
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windowsPhone81CustomConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.windowsPhone81TrustedRootCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsPhone81TrustedRootCertificate",
            "type": "object",
            "properties": {
              "trustedRootCertificate": {
                "type": "string",
                "description": "Trusted Root Certificate",
                "format": "base64url"
              },
              "certFileName": {
                "type": "string",
                "description": "File name to display in UI.",
                "nullable": true
              }
            },
            "description": "Windows Phone 8.1+ Trusted Root Certificate configuration profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "trustedRootCertificate": "Binary",
          "certFileName": "String"
        }
      },
      "microsoft.graph.windowsPhoneEASEmailProfileConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsPhoneEASEmailProfileConfiguration",
            "type": "object",
            "properties": {
              "accountName": {
                "type": "string",
                "description": "Account name."
              },
              "applyOnlyToWindowsPhone81": {
                "type": "boolean",
                "description": "Value indicating whether this policy only applies to Windows 8.1. This property is read-only."
              },
              "syncCalendar": {
                "type": "boolean",
                "description": "Whether or not to sync the calendar."
              },
              "syncContacts": {
                "type": "boolean",
                "description": "Whether or not to sync contacts."
              },
              "syncTasks": {
                "type": "boolean",
                "description": "Whether or not to sync tasks."
              },
              "durationOfEmailToSync": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailSyncDuration"
                  }
                ],
                "description": "Duration of email to sync."
              },
              "emailAddressSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.userEmailSource"
                  }
                ],
                "description": "Email attribute that is picked from AAD and injected into this profile before installing on the device.",
                "nullable": true
              },
              "emailSyncSchedule": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailSyncSchedule"
                  }
                ],
                "description": "Email sync schedule."
              },
              "hostName": {
                "type": "string",
                "description": "Exchange location that (URL) that the native mail app connects to."
              },
              "requireSsl": {
                "type": "boolean",
                "description": "Indicates whether or not to use SSL."
              },
              "usernameSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.userEmailSource"
                  }
                ],
                "description": "Username attribute that is picked from AAD and injected into this profile before installing on the device.",
                "nullable": true
              }
            },
            "description": "By providing configurations in this profile you can instruct the native email client on Windows Phone to communicate with an Exchange server and get email, contacts, calendar, and tasks. Furthermore, you can also specify how much email to sync and how often the device should sync."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "accountName": "String",
          "applyOnlyToWindowsPhone81": true,
          "syncCalendar": true,
          "syncContacts": true,
          "syncTasks": true,
          "durationOfEmailToSync": {
            "@odata.type": "microsoft.graph.emailSyncDuration"
          },
          "emailAddressSource": {
            "@odata.type": "microsoft.graph.userEmailSource"
          },
          "emailSyncSchedule": {
            "@odata.type": "microsoft.graph.emailSyncSchedule"
          },
          "hostName": "String",
          "requireSsl": true,
          "usernameSource": {
            "@odata.type": "microsoft.graph.userEmailSource"
          }
        }
      },
      "microsoft.graph.windowsUpdateForBusinessConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsUpdateForBusinessConfiguration",
            "type": "object",
            "properties": {
              "deliveryOptimizationMode": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsDeliveryOptimizationMode"
                  }
                ],
                "description": "Delivery Optimization Mode"
              },
              "prereleaseFeatures": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.prereleaseFeatures"
                  }
                ],
                "description": "The pre-release features."
              },
              "automaticUpdateMode": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.automaticUpdateMode"
                  }
                ],
                "description": "Automatic update mode."
              },
              "microsoftUpdateServiceAllowed": {
                "type": "boolean",
                "description": "Allow Microsoft Update Service"
              },
              "driversExcluded": {
                "type": "boolean",
                "description": "Exclude Windows update Drivers"
              },
              "installationSchedule": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsUpdateInstallScheduleType"
                  }
                ],
                "description": "Installation schedule",
                "nullable": true
              },
              "qualityUpdatesDeferralPeriodInDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Defer Quality Updates by these many days",
                "format": "int32"
              },
              "featureUpdatesDeferralPeriodInDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Defer Feature Updates by these many days",
                "format": "int32"
              },
              "qualityUpdatesPaused": {
                "type": "boolean",
                "description": "Pause Quality Updates"
              },
              "featureUpdatesPaused": {
                "type": "boolean",
                "description": "Pause Feature Updates"
              },
              "qualityUpdatesPauseExpiryDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Quality Updates Pause Expiry datetime",
                "format": "date-time"
              },
              "featureUpdatesPauseExpiryDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Feature Updates Pause Expiry datetime",
                "format": "date-time"
              },
              "businessReadyUpdatesOnly": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsUpdateType"
                  }
                ],
                "description": "Business ready updates only or regular updates allowed too"
              },
              "previewBuildSetting": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsUpdateInsiderBuildControl"
                  }
                ],
                "description": "Set the insider build control in the advanced options for Windows Update"
              }
            },
            "description": "Windows Update for business configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "deliveryOptimizationMode": {
            "@odata.type": "microsoft.graph.windowsDeliveryOptimizationMode"
          },
          "prereleaseFeatures": {
            "@odata.type": "microsoft.graph.prereleaseFeatures"
          },
          "automaticUpdateMode": {
            "@odata.type": "microsoft.graph.automaticUpdateMode"
          },
          "microsoftUpdateServiceAllowed": true,
          "driversExcluded": true,
          "installationSchedule": {
            "@odata.type": "microsoft.graph.windowsUpdateInstallScheduleType"
          },
          "qualityUpdatesDeferralPeriodInDays": "Int32",
          "featureUpdatesDeferralPeriodInDays": "Int32",
          "qualityUpdatesPaused": true,
          "featureUpdatesPaused": true,
          "qualityUpdatesPauseExpiryDateTime": "DateTimeOffset (timestamp)",
          "featureUpdatesPauseExpiryDateTime": "DateTimeOffset (timestamp)",
          "businessReadyUpdatesOnly": {
            "@odata.type": "microsoft.graph.windowsUpdateType"
          },
          "previewBuildSetting": {
            "@odata.type": "microsoft.graph.windowsUpdateInsiderBuildControl"
          }
        }
      },
      "microsoft.graph.windowsUpdateInstallScheduleType": {
        "title": "windowsUpdateInstallScheduleType",
        "type": "object"
      },
      "microsoft.graph.windowsUpdateScheduledInstall": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsUpdateInstallScheduleType"
          },
          {
            "title": "windowsUpdateScheduledInstall",
            "type": "object",
            "properties": {
              "scheduledInstallDay": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.weeklySchedule"
                  }
                ],
                "description": "Scheduled Install Day in week"
              },
              "scheduledInstallTime": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "Scheduled Install Time during day",
                "format": "time"
              },
              "restartMode": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsUpdateRestartMode"
                  }
                ],
                "description": "Set restart mode allowed level to power or battery"
              }
            }
          }
        ],
        "example": {
          "scheduledInstallDay": {
            "@odata.type": "microsoft.graph.weeklySchedule"
          },
          "scheduledInstallTime": "TimeOfDay (timestamp)",
          "restartMode": {
            "@odata.type": "microsoft.graph.windowsUpdateRestartMode"
          }
        }
      },
      "microsoft.graph.windowsUpdateActiveHoursInstall": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsUpdateInstallScheduleType"
          },
          {
            "title": "windowsUpdateActiveHoursInstall",
            "type": "object",
            "properties": {
              "activeHoursStart": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "Active Hours Start",
                "format": "time"
              },
              "activeHoursEnd": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "Active Hours End",
                "format": "time"
              }
            }
          }
        ],
        "example": {
          "activeHoursStart": "TimeOfDay (timestamp)",
          "activeHoursEnd": "TimeOfDay (timestamp)"
        }
      },
      "microsoft.graph.windowsVpnConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsVpnConfiguration",
            "type": "object",
            "properties": {
              "connectionName": {
                "type": "string",
                "description": "Connection name displayed to the user."
              },
              "servers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.vpnServer"
                },
                "description": "List of VPN Servers on the network. Make sure end users can access these network locations. This collection can contain a maximum of 500 elements."
              },
              "customXml": {
                "type": "string",
                "description": "Custom XML commands that configures the VPN connection. (UTF8 encoded byte array)",
                "format": "base64url",
                "nullable": true
              }
            },
            "description": "Windows VPN configuration profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "connectionName": "String",
          "servers": [
            {
              "@odata.type": "microsoft.graph.vpnServer"
            }
          ],
          "customXml": "Binary"
        }
      },
      "microsoft.graph.windows10VpnConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsVpnConfiguration"
          },
          {
            "title": "windows10VpnConfiguration",
            "type": "object",
            "properties": {
              "connectionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windows10VpnConnectionType"
                  }
                ],
                "description": "Connection type."
              },
              "enableSplitTunneling": {
                "type": "boolean",
                "description": "Enable split tunneling."
              },
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windows10VpnAuthenticationMethod"
                  }
                ],
                "description": "Authentication method."
              },
              "rememberUserCredentials": {
                "type": "boolean",
                "description": "Remember user credentials."
              },
              "enableConditionalAccess": {
                "type": "boolean",
                "description": "Enable conditional access."
              },
              "enableSingleSignOnWithAlternateCertificate": {
                "type": "boolean",
                "description": "Enable single sign-on (SSO) with alternate certificate."
              },
              "singleSignOnEku": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extendedKeyUsage"
                  }
                ],
                "description": "Single sign-on Extended Key Usage (EKU).",
                "nullable": true
              },
              "singleSignOnIssuerHash": {
                "type": "string",
                "description": "Single sign-on issuer hash.",
                "nullable": true
              },
              "eapXml": {
                "type": "string",
                "description": "Extensible Authentication Protocol (EAP) XML. (UTF8 encoded byte array)",
                "format": "base64url",
                "nullable": true
              },
              "proxyServer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windows10VpnProxyServer"
                  }
                ],
                "description": "Proxy Server.",
                "nullable": true
              },
              "associatedApps": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windows10AssociatedApps"
                    }
                  ],
                  "nullable": true
                },
                "description": "Associated Apps. This collection can contain a maximum of 10000 elements."
              },
              "onlyAssociatedAppsCanUseConnection": {
                "type": "boolean",
                "description": "Only associated Apps can use connection (per-app VPN).",
                "nullable": true
              },
              "windowsInformationProtectionDomain": {
                "type": "string",
                "description": "Windows Information Protection (WIP) domain to associate with this connection.",
                "nullable": true
              },
              "trafficRules": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.vpnTrafficRule"
                    }
                  ],
                  "nullable": true
                },
                "description": "Traffic rules. This collection can contain a maximum of 1000 elements."
              },
              "routes": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.vpnRoute"
                    }
                  ],
                  "nullable": true
                },
                "description": "Routes (optional for third-party providers). This collection can contain a maximum of 1000 elements."
              },
              "dnsRules": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.vpnDnsRule"
                    }
                  ],
                  "nullable": true
                },
                "description": "DNS rules. This collection can contain a maximum of 1000 elements."
              },
              "trustedNetworkDomains": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Trusted Network Domains"
              },
              "identityCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsCertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the Windows 10 device (desktop or mobile) to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "connectionName": "String",
          "servers": [
            {
              "@odata.type": "microsoft.graph.vpnServer"
            }
          ],
          "customXml": "Binary",
          "connectionType": {
            "@odata.type": "microsoft.graph.windows10VpnConnectionType"
          },
          "enableSplitTunneling": true,
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.windows10VpnAuthenticationMethod"
          },
          "rememberUserCredentials": true,
          "enableConditionalAccess": true,
          "enableSingleSignOnWithAlternateCertificate": true,
          "singleSignOnEku": {
            "@odata.type": "microsoft.graph.extendedKeyUsage"
          },
          "singleSignOnIssuerHash": "String",
          "eapXml": "Binary",
          "proxyServer": {
            "@odata.type": "microsoft.graph.windows10VpnProxyServer"
          },
          "associatedApps": [
            {
              "@odata.type": "microsoft.graph.windows10AssociatedApps"
            }
          ],
          "onlyAssociatedAppsCanUseConnection": true,
          "windowsInformationProtectionDomain": "String",
          "trafficRules": [
            {
              "@odata.type": "microsoft.graph.vpnTrafficRule"
            }
          ],
          "routes": [
            {
              "@odata.type": "microsoft.graph.vpnRoute"
            }
          ],
          "dnsRules": [
            {
              "@odata.type": "microsoft.graph.vpnDnsRule"
            }
          ],
          "trustedNetworkDomains": [
            "String"
          ],
          "identityCertificate": {
            "@odata.type": "microsoft.graph.windowsCertificateProfileBase"
          }
        }
      },
      "microsoft.graph.windows10AssociatedApps": {
        "title": "windows10AssociatedApps",
        "type": "object",
        "properties": {
          "appType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.windows10AppType"
              }
            ],
            "description": "Application type."
          },
          "identifier": {
            "type": "string",
            "description": "Identifier."
          }
        },
        "example": {
          "appType": {
            "@odata.type": "microsoft.graph.windows10AppType"
          },
          "identifier": "String"
        }
      },
      "microsoft.graph.vpnTrafficRule": {
        "title": "vpnTrafficRule",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name."
          },
          "protocols": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Protocols (0-255). Valid values 0 to 255",
            "format": "int32",
            "nullable": true
          },
          "localPortRanges": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.numberRange"
                }
              ],
              "nullable": true
            },
            "description": "Local port range can be set only when protocol is either TCP or UDP (6 or 17). This collection can contain a maximum of 500 elements."
          },
          "remotePortRanges": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.numberRange"
                }
              ],
              "nullable": true
            },
            "description": "Remote port range can be set only when protocol is either TCP or UDP (6 or 17). This collection can contain a maximum of 500 elements."
          },
          "localAddressRanges": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.iPv4Range"
                }
              ],
              "nullable": true
            },
            "description": "Local address range. This collection can contain a maximum of 500 elements."
          },
          "remoteAddressRanges": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.iPv4Range"
                }
              ],
              "nullable": true
            },
            "description": "Remote address range. This collection can contain a maximum of 500 elements."
          },
          "appId": {
            "type": "string",
            "description": "App identifier, if this traffic rule is triggered by an app.",
            "nullable": true
          },
          "appType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.vpnTrafficRuleAppType"
              }
            ],
            "description": "App type, if this traffic rule is triggered by an app."
          },
          "routingPolicyType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.vpnTrafficRuleRoutingPolicyType"
              }
            ],
            "description": "When app triggered, indicates whether to enable split tunneling along this route."
          },
          "claims": {
            "type": "string",
            "description": "Claims associated with this traffic rule.",
            "nullable": true
          }
        },
        "example": {
          "name": "String",
          "protocols": "Int32",
          "localPortRanges": [
            {
              "@odata.type": "microsoft.graph.numberRange"
            }
          ],
          "remotePortRanges": [
            {
              "@odata.type": "microsoft.graph.numberRange"
            }
          ],
          "localAddressRanges": [
            {
              "@odata.type": "microsoft.graph.iPv4Range"
            }
          ],
          "remoteAddressRanges": [
            {
              "@odata.type": "microsoft.graph.iPv4Range"
            }
          ],
          "appId": "String",
          "appType": {
            "@odata.type": "microsoft.graph.vpnTrafficRuleAppType"
          },
          "routingPolicyType": {
            "@odata.type": "microsoft.graph.vpnTrafficRuleRoutingPolicyType"
          },
          "claims": "String"
        }
      },
      "microsoft.graph.numberRange": {
        "title": "numberRange",
        "type": "object",
        "properties": {
          "lowerNumber": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Lower number.",
            "format": "int32"
          },
          "upperNumber": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Upper number.",
            "format": "int32"
          }
        },
        "example": {
          "lowerNumber": "Int32",
          "upperNumber": "Int32"
        }
      },
      "microsoft.graph.vpnRoute": {
        "title": "vpnRoute",
        "type": "object",
        "properties": {
          "destinationPrefix": {
            "type": "string",
            "description": "Destination prefix (IPv4/v6 address)."
          },
          "prefixSize": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Prefix size. (1-32). Valid values 1 to 32",
            "format": "int32"
          }
        },
        "example": {
          "destinationPrefix": "String",
          "prefixSize": "Int32"
        }
      },
      "microsoft.graph.vpnDnsRule": {
        "title": "vpnDnsRule",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name."
          },
          "servers": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Servers."
          },
          "proxyServerUri": {
            "type": "string",
            "description": "Proxy Server Uri.",
            "nullable": true
          }
        },
        "example": {
          "name": "String",
          "servers": [
            "String"
          ],
          "proxyServerUri": "String"
        }
      },
      "microsoft.graph.windows81VpnConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsVpnConfiguration"
          },
          {
            "title": "windows81VpnConfiguration",
            "type": "object",
            "properties": {
              "applyOnlyToWindows81": {
                "type": "boolean",
                "description": "Value indicating whether this policy only applies to Windows 8.1. This property is read-only."
              },
              "connectionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsVpnConnectionType"
                  }
                ],
                "description": "Connection type."
              },
              "loginGroupOrDomain": {
                "type": "string",
                "description": "Login group or domain when connection type is set to Dell SonicWALL Mobile Connection.",
                "nullable": true
              },
              "enableSplitTunneling": {
                "type": "boolean",
                "description": "Enable split tunneling for the VPN."
              },
              "proxyServer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windows81VpnProxyServer"
                  }
                ],
                "description": "Proxy Server.",
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the Windows 8.1 (and later) devices to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "connectionName": "String",
          "servers": [
            {
              "@odata.type": "microsoft.graph.vpnServer"
            }
          ],
          "customXml": "Binary",
          "applyOnlyToWindows81": true,
          "connectionType": {
            "@odata.type": "microsoft.graph.windowsVpnConnectionType"
          },
          "loginGroupOrDomain": "String",
          "enableSplitTunneling": true,
          "proxyServer": {
            "@odata.type": "microsoft.graph.windows81VpnProxyServer"
          }
        }
      },
      "microsoft.graph.windowsPhone81VpnConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windows81VpnConfiguration"
          },
          {
            "title": "windowsPhone81VpnConfiguration",
            "type": "object",
            "properties": {
              "bypassVpnOnCompanyWifi": {
                "type": "boolean",
                "description": "Bypass VPN on company Wi-Fi."
              },
              "bypassVpnOnHomeWifi": {
                "type": "boolean",
                "description": "Bypass VPN on home Wi-Fi."
              },
              "authenticationMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vpnAuthenticationMethod"
                  }
                ],
                "description": "Authentication method."
              },
              "rememberUserCredentials": {
                "type": "boolean",
                "description": "Remember user credentials."
              },
              "dnsSuffixSearchList": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "DNS suffix search list."
              },
              "identityCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsPhone81CertificateProfileBase"
                  }
                ],
                "nullable": true
              }
            },
            "description": "By providing the configurations in this profile you can instruct the Windows Phone 8.1 to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "connectionName": "String",
          "servers": [
            {
              "@odata.type": "microsoft.graph.vpnServer"
            }
          ],
          "customXml": "Binary",
          "applyOnlyToWindows81": true,
          "connectionType": {
            "@odata.type": "microsoft.graph.windowsVpnConnectionType"
          },
          "loginGroupOrDomain": "String",
          "enableSplitTunneling": true,
          "proxyServer": {
            "@odata.type": "microsoft.graph.windows81VpnProxyServer"
          },
          "bypassVpnOnCompanyWifi": true,
          "bypassVpnOnHomeWifi": true,
          "authenticationMethod": {
            "@odata.type": "microsoft.graph.vpnAuthenticationMethod"
          },
          "rememberUserCredentials": true,
          "dnsSuffixSearchList": [
            "String"
          ],
          "identityCertificate": {
            "@odata.type": "microsoft.graph.windowsPhone81CertificateProfileBase"
          }
        }
      },
      "microsoft.graph.windowsPhone81CertificateProfileBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsPhone81CertificateProfileBase",
            "type": "object",
            "properties": {
              "renewalThresholdPercentage": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Certificate renewal threshold percentage.",
                "format": "int32"
              },
              "keyStorageProvider": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keyStorageProviderOption"
                  }
                ],
                "description": "Key Storage Provider (KSP)."
              },
              "subjectNameFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.subjectNameFormat"
                  }
                ],
                "description": "Certificate Subject Name Format."
              },
              "subjectAlternativeNameType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.subjectAlternativeNameType"
                  }
                ],
                "description": "Certificate Subject Alternative Name Type."
              },
              "certificateValidityPeriodValue": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value for the Certificate Validtiy Period.",
                "format": "int32"
              },
              "certificateValidityPeriodScale": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.certificateValidityPeriodScale"
                  }
                ],
                "description": "Scale for the Certificate Validity Period."
              },
              "extendedKeyUsages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extendedKeyUsage"
                },
                "description": "Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements."
              }
            },
            "description": "Base Windows Phone 8.1+ certificate profile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "keyStorageProvider": {
            "@odata.type": "microsoft.graph.keyStorageProviderOption"
          },
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ]
        }
      },
      "microsoft.graph.windowsPhone81SCEPCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsPhone81CertificateProfileBase"
          },
          {
            "title": "windowsPhone81SCEPCertificateProfile",
            "type": "object",
            "properties": {
              "scepServerUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "SCEP Server Url(s)."
              },
              "subjectNameFormatString": {
                "type": "string",
                "description": "Custom format to use with SubjectNameFormat = Custom. Example: CN={{EmailAddress}},E={{EmailAddress}},OU=Enterprise Users,O=Contoso Corporation,L=Redmond,ST=WA,C=US",
                "nullable": true
              },
              "keyUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keyUsages"
                  }
                ],
                "description": "SCEP Key Usage."
              },
              "keySize": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.keySize"
                  }
                ],
                "description": "SCEP Key Size."
              },
              "hashAlgorithm": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.hashAlgorithms"
                  }
                ],
                "description": "SCEP Hash Algorithm."
              },
              "subjectAlternativeNameFormatString": {
                "type": "string",
                "description": "Custom String that defines the AAD Attribute.",
                "nullable": true
              },
              "rootCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsPhone81TrustedRootCertificate"
                  }
                ],
                "nullable": true
              },
              "managedDeviceCertificateStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceCertificateState"
                }
              }
            },
            "description": "Windows Phone 8.1+ SCEP certificate profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "renewalThresholdPercentage": "Int32",
          "keyStorageProvider": {
            "@odata.type": "microsoft.graph.keyStorageProviderOption"
          },
          "subjectNameFormat": {
            "@odata.type": "microsoft.graph.subjectNameFormat"
          },
          "subjectAlternativeNameType": {
            "@odata.type": "microsoft.graph.subjectAlternativeNameType"
          },
          "certificateValidityPeriodValue": "Int32",
          "certificateValidityPeriodScale": {
            "@odata.type": "microsoft.graph.certificateValidityPeriodScale"
          },
          "extendedKeyUsages": [
            {
              "@odata.type": "microsoft.graph.extendedKeyUsage"
            }
          ],
          "scepServerUrls": [
            "String"
          ],
          "subjectNameFormatString": "String",
          "keyUsage": {
            "@odata.type": "microsoft.graph.keyUsages"
          },
          "keySize": {
            "@odata.type": "microsoft.graph.keySize"
          },
          "hashAlgorithm": {
            "@odata.type": "microsoft.graph.hashAlgorithms"
          },
          "subjectAlternativeNameFormatString": "String",
          "rootCertificate": {
            "@odata.type": "microsoft.graph.windowsPhone81TrustedRootCertificate"
          },
          "managedDeviceCertificateStates": [
            {
              "@odata.type": "microsoft.graph.managedDeviceCertificateState"
            }
          ]
        }
      },
      "microsoft.graph.windows81GeneralConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows81GeneralConfiguration",
            "type": "object",
            "properties": {
              "accountsBlockAddingNonMicrosoftAccountEmail": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from adding email accounts to the device that are not associated with a Microsoft account."
              },
              "applyOnlyToWindows81": {
                "type": "boolean",
                "description": "Value indicating whether this policy only applies to Windows 8.1. This property is read-only."
              },
              "browserBlockAutofill": {
                "type": "boolean",
                "description": "Indicates whether or not to block auto fill."
              },
              "browserBlockAutomaticDetectionOfIntranetSites": {
                "type": "boolean",
                "description": "Indicates whether or not to block automatic detection of Intranet sites."
              },
              "browserBlockEnterpriseModeAccess": {
                "type": "boolean",
                "description": "Indicates whether or not to block enterprise mode access."
              },
              "browserBlockJavaScript": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using JavaScript."
              },
              "browserBlockPlugins": {
                "type": "boolean",
                "description": "Indicates whether or not to block plug-ins."
              },
              "browserBlockPopups": {
                "type": "boolean",
                "description": "Indicates whether or not to block popups."
              },
              "browserBlockSendingDoNotTrackHeader": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from sending the do not track header."
              },
              "browserBlockSingleWordEntryOnIntranetSites": {
                "type": "boolean",
                "description": "Indicates whether or not to block a single word entry on Intranet sites."
              },
              "browserRequireSmartScreen": {
                "type": "boolean",
                "description": "Indicates whether or not to require the user to use the smart screen filter."
              },
              "browserEnterpriseModeSiteListLocation": {
                "type": "string",
                "description": "The enterprise mode site list location. Could be a local file, local network or http location.",
                "nullable": true
              },
              "browserInternetSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.internetSiteSecurityLevel"
                  }
                ],
                "description": "The internet security level."
              },
              "browserIntranetSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.siteSecurityLevel"
                  }
                ],
                "description": "The Intranet security level."
              },
              "browserLoggingReportLocation": {
                "type": "string",
                "description": "The logging report location.",
                "nullable": true
              },
              "browserRequireHighSecurityForRestrictedSites": {
                "type": "boolean",
                "description": "Indicates whether or not to require high security for restricted sites."
              },
              "browserRequireFirewall": {
                "type": "boolean",
                "description": "Indicates whether or not to require a firewall."
              },
              "browserRequireFraudWarning": {
                "type": "boolean",
                "description": "Indicates whether or not to require fraud warning."
              },
              "browserTrustedSitesSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.siteSecurityLevel"
                  }
                ],
                "description": "The trusted sites security level."
              },
              "cellularBlockDataRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block data roaming."
              },
              "diagnosticsBlockDataSubmission": {
                "type": "boolean",
                "description": "Indicates whether or not to block diagnostic data submission."
              },
              "passwordBlockPicturePasswordAndPin": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using a pictures password and pin."
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Password expiration in days.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minimum password length.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of previous passwords to prevent re-use of. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type."
              },
              "passwordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of sign in failures before factory reset.",
                "format": "int32",
                "nullable": true
              },
              "storageRequireDeviceEncryption": {
                "type": "boolean",
                "description": "Indicates whether or not to require encryption on a mobile device."
              },
              "minimumAutoInstallClassification": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.updateClassification"
                  }
                ],
                "description": "The minimum update classification to install automatically."
              },
              "updatesRequireAutomaticUpdates": {
                "type": "boolean",
                "description": "Indicates whether or not to require automatic updates."
              },
              "userAccountControlSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsUserAccountControlSettings"
                  }
                ],
                "description": "The user account control settings."
              },
              "workFoldersUrl": {
                "type": "string",
                "description": "The work folders url.",
                "nullable": true
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windows81GeneralConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "accountsBlockAddingNonMicrosoftAccountEmail": true,
          "applyOnlyToWindows81": true,
          "browserBlockAutofill": true,
          "browserBlockAutomaticDetectionOfIntranetSites": true,
          "browserBlockEnterpriseModeAccess": true,
          "browserBlockJavaScript": true,
          "browserBlockPlugins": true,
          "browserBlockPopups": true,
          "browserBlockSendingDoNotTrackHeader": true,
          "browserBlockSingleWordEntryOnIntranetSites": true,
          "browserRequireSmartScreen": true,
          "browserEnterpriseModeSiteListLocation": "String",
          "browserInternetSecurityLevel": {
            "@odata.type": "microsoft.graph.internetSiteSecurityLevel"
          },
          "browserIntranetSecurityLevel": {
            "@odata.type": "microsoft.graph.siteSecurityLevel"
          },
          "browserLoggingReportLocation": "String",
          "browserRequireHighSecurityForRestrictedSites": true,
          "browserRequireFirewall": true,
          "browserRequireFraudWarning": true,
          "browserTrustedSitesSecurityLevel": {
            "@odata.type": "microsoft.graph.siteSecurityLevel"
          },
          "cellularBlockDataRoaming": true,
          "diagnosticsBlockDataSubmission": true,
          "passwordBlockPicturePasswordAndPin": true,
          "passwordExpirationDays": "Int32",
          "passwordMinimumLength": "Int32",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "Int32",
          "passwordMinimumCharacterSetCount": "Int32",
          "passwordPreviousPasswordBlockCount": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordSignInFailureCountBeforeFactoryReset": "Int32",
          "storageRequireDeviceEncryption": true,
          "minimumAutoInstallClassification": {
            "@odata.type": "microsoft.graph.updateClassification"
          },
          "updatesRequireAutomaticUpdates": true,
          "userAccountControlSettings": {
            "@odata.type": "microsoft.graph.windowsUserAccountControlSettings"
          },
          "workFoldersUrl": "String"
        }
      },
      "microsoft.graph.windowsPhone81GeneralConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsPhone81GeneralConfiguration",
            "type": "object",
            "properties": {
              "applyOnlyToWindowsPhone81": {
                "type": "boolean",
                "description": "Value indicating whether this policy only applies to Windows Phone 8.1. This property is read-only."
              },
              "appsBlockCopyPaste": {
                "type": "boolean",
                "description": "Indicates whether or not to block copy paste."
              },
              "bluetoothBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block bluetooth."
              },
              "cameraBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block camera."
              },
              "cellularBlockWifiTethering": {
                "type": "boolean",
                "description": "Indicates whether or not to block Wi-Fi tethering. Has no impact if Wi-Fi is blocked."
              },
              "compliantAppsList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements."
              },
              "compliantAppListType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appListType"
                  }
                ],
                "description": "List that is in the AppComplianceList."
              },
              "diagnosticDataBlockSubmission": {
                "type": "boolean",
                "description": "Indicates whether or not to block diagnostic data submission."
              },
              "emailBlockAddingAccounts": {
                "type": "boolean",
                "description": "Indicates whether or not to block custom email accounts."
              },
              "locationServicesBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block location services."
              },
              "microsoftAccountBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block using a Microsoft Account."
              },
              "nfcBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block Near-Field Communication."
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block syncing the calendar."
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passwords.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before screen timeout.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of character sets a password must contain.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of sign in failures allowed before factory reset.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "Password type that is required."
              },
              "passwordRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require a password."
              },
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block screenshots."
              },
              "storageBlockRemovableStorage": {
                "type": "boolean",
                "description": "Indicates whether or not to block removable storage."
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Indicates whether or not to require encryption."
              },
              "webBrowserBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the web browser."
              },
              "wifiBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block Wi-Fi."
              },
              "wifiBlockAutomaticConnectHotspots": {
                "type": "boolean",
                "description": "Indicates whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked."
              },
              "wifiBlockHotspotReporting": {
                "type": "boolean",
                "description": "Indicates whether or not to block Wi-Fi hotspot reporting. Has no impact if Wi-Fi is blocked."
              },
              "windowsStoreBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the Windows Store."
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windowsPhone81GeneralConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "applyOnlyToWindowsPhone81": true,
          "appsBlockCopyPaste": true,
          "bluetoothBlocked": true,
          "cameraBlocked": true,
          "cellularBlockWifiTethering": true,
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "diagnosticDataBlockSubmission": true,
          "emailBlockAddingAccounts": true,
          "locationServicesBlocked": true,
          "microsoftAccountBlocked": true,
          "nfcBlocked": true,
          "passwordBlockSimple": true,
          "passwordExpirationDays": "Int32",
          "passwordMinimumLength": "Int32",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "Int32",
          "passwordMinimumCharacterSetCount": "Int32",
          "passwordPreviousPasswordBlockCount": "Int32",
          "passwordSignInFailureCountBeforeFactoryReset": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordRequired": true,
          "screenCaptureBlocked": true,
          "storageBlockRemovableStorage": true,
          "storageRequireEncryption": true,
          "webBrowserBlocked": true,
          "wifiBlocked": true,
          "wifiBlockAutomaticConnectHotspots": true,
          "wifiBlockHotspotReporting": true,
          "windowsStoreBlocked": true
        }
      },
      "microsoft.graph.windows10TeamGeneralConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10TeamGeneralConfiguration",
            "type": "object",
            "properties": {
              "azureOperationalInsightsBlockTelemetry": {
                "type": "boolean",
                "description": "Indicates whether or not to Block Azure Operational Insights."
              },
              "azureOperationalInsightsWorkspaceId": {
                "type": "string",
                "description": "The Azure Operational Insights workspace id.",
                "nullable": true
              },
              "azureOperationalInsightsWorkspaceKey": {
                "type": "string",
                "description": "The Azure Operational Insights Workspace key.",
                "nullable": true
              },
              "connectAppBlockAutoLaunch": {
                "type": "boolean",
                "description": "Specifies whether to automatically launch the Connect app whenever a projection is initiated."
              },
              "maintenanceWindowBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block setting a maintenance window for device updates."
              },
              "maintenanceWindowDurationInHours": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Maintenance window duration for device updates. Valid values 1 to 5",
                "format": "int32",
                "nullable": true
              },
              "maintenanceWindowStartTime": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "Maintenance window start time for device updates.",
                "format": "time",
                "nullable": true
              },
              "miracastChannel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.miracastChannel"
                  }
                ],
                "description": "The channel."
              },
              "miracastBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block wireless projection."
              },
              "miracastRequirePin": {
                "type": "boolean",
                "description": "Indicates whether or not to require a pin for wireless projection."
              },
              "settingsBlockMyMeetingsAndFiles": {
                "type": "boolean",
                "description": "Specifies whether to disable the \"My meetings and files\" feature in the Start menu, which shows the signed-in user's meetings and files from Office 365."
              },
              "settingsBlockSessionResume": {
                "type": "boolean",
                "description": "Specifies whether to allow the ability to resume a session when the session times out."
              },
              "settingsBlockSigninSuggestions": {
                "type": "boolean",
                "description": "Specifies whether to disable auto-populating of the sign-in dialog with invitees from scheduled meetings."
              },
              "settingsDefaultVolume": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the default volume value for a new session. Permitted values are 0-100. The default is 45. Valid values 0 to 100",
                "format": "int32",
                "nullable": true
              },
              "settingsScreenTimeoutInMinutes": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the number of minutes until the Hub screen turns off.",
                "format": "int32",
                "nullable": true
              },
              "settingsSessionTimeoutInMinutes": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the number of minutes until the session times out.",
                "format": "int32",
                "nullable": true
              },
              "settingsSleepTimeoutInMinutes": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the number of minutes until the Hub enters sleep mode.",
                "format": "int32",
                "nullable": true
              },
              "welcomeScreenBlockAutomaticWakeUp": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the welcome screen from waking up automatically when someone enters the room."
              },
              "welcomeScreenBackgroundImageUrl": {
                "type": "string",
                "description": "The welcome screen background image URL. The URL must use the HTTPS protocol and return a PNG image.",
                "nullable": true
              },
              "welcomeScreenMeetingInformation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.welcomeScreenMeetingInformation"
                  }
                ],
                "description": "The welcome screen meeting information shown."
              }
            },
            "description": "This topic provides descriptions of the declared methods, properties and relationships exposed by the windows10TeamGeneralConfiguration resource."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "azureOperationalInsightsBlockTelemetry": true,
          "azureOperationalInsightsWorkspaceId": "String",
          "azureOperationalInsightsWorkspaceKey": "String",
          "connectAppBlockAutoLaunch": true,
          "maintenanceWindowBlocked": true,
          "maintenanceWindowDurationInHours": "Int32",
          "maintenanceWindowStartTime": "TimeOfDay (timestamp)",
          "miracastChannel": {
            "@odata.type": "microsoft.graph.miracastChannel"
          },
          "miracastBlocked": true,
          "miracastRequirePin": true,
          "settingsBlockMyMeetingsAndFiles": true,
          "settingsBlockSessionResume": true,
          "settingsBlockSigninSuggestions": true,
          "settingsDefaultVolume": "Int32",
          "settingsScreenTimeoutInMinutes": "Int32",
          "settingsSessionTimeoutInMinutes": "Int32",
          "settingsSleepTimeoutInMinutes": "Int32",
          "welcomeScreenBlockAutomaticWakeUp": true,
          "welcomeScreenBackgroundImageUrl": "String",
          "welcomeScreenMeetingInformation": {
            "@odata.type": "microsoft.graph.welcomeScreenMeetingInformation"
          }
        }
      },
      "microsoft.graph.editionUpgradeConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "editionUpgradeConfiguration",
            "type": "object",
            "properties": {
              "licenseType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.editionUpgradeLicenseType"
                  }
                ],
                "description": "Edition Upgrade License Type."
              },
              "targetEdition": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windows10EditionType"
                  }
                ],
                "description": "Edition Upgrade Target Edition."
              },
              "license": {
                "type": "string",
                "description": "Edition Upgrade License File Content.",
                "nullable": true
              },
              "productKey": {
                "type": "string",
                "description": "Edition Upgrade Product Key.",
                "nullable": true
              }
            },
            "description": "Windows 10 Edition Upgrade configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "licenseType": {
            "@odata.type": "microsoft.graph.editionUpgradeLicenseType"
          },
          "targetEdition": {
            "@odata.type": "microsoft.graph.windows10EditionType"
          },
          "license": "String",
          "productKey": "String"
        }
      },
      "microsoft.graph.localizedNotificationMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "localizedNotificationMessage",
            "type": "object",
            "properties": {
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time"
              },
              "locale": {
                "type": "string",
                "description": "The Locale for which this message is destined."
              },
              "subject": {
                "type": "string",
                "description": "The Message Template Subject."
              },
              "messageTemplate": {
                "type": "string",
                "description": "The Message Template content."
              },
              "isDefault": {
                "type": "boolean",
                "description": "Flag to indicate whether or not this is the default locale for language fallback. This flag can only be set. To unset, set this property to true on another Localized Notification Message."
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "locale": "String",
          "subject": "String",
          "messageTemplate": "String",
          "isDefault": true
        }
      },
      "microsoft.graph.androidForWorkCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "androidForWorkCompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Require a password to unlock device."
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum password length. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidRequiredPasswordType"
                  }
                ],
                "description": "Type of characters in password"
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires. Valid values 1 to 255",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block.",
                "format": "int32",
                "nullable": true
              },
              "securityPreventInstallAppsFromUnknownSources": {
                "type": "boolean",
                "description": "Require that devices disallow installation of apps from unknown sources."
              },
              "securityDisableUsbDebugging": {
                "type": "boolean",
                "description": "Disable USB debugging on Android devices."
              },
              "requireAppVerify": {
                "type": "boolean",
                "description": "Require the Android Verify apps feature is turned on."
              },
              "deviceThreatProtectionEnabled": {
                "type": "boolean",
                "description": "Require that devices have enabled device threat protection."
              },
              "deviceThreatProtectionRequiredSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceThreatProtectionLevel"
                  }
                ],
                "description": "Require Mobile Threat Protection minimum risk level to report noncompliance."
              },
              "securityBlockJailbrokenDevices": {
                "type": "boolean",
                "description": "Devices must not be jailbroken or rooted."
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Android version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Android version.",
                "nullable": true
              },
              "minAndroidSecurityPatchLevel": {
                "type": "string",
                "description": "Minimum Android security patch level.",
                "nullable": true
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on Android devices."
              },
              "requireSafetyNetAttestationBasicIntegrity": {
                "type": "boolean",
                "description": "Require the device to pass the SafetyNet basic integrity check."
              },
              "requireSafetyNetAttestationCertifiedDevice": {
                "type": "boolean",
                "description": "Require the device to pass the SafetyNet certified device check."
              },
              "requireGooglePlayServices": {
                "type": "boolean",
                "description": "Require Google Play Services to be installed and enabled on the device."
              },
              "requireUpToDateSecurityProviders": {
                "type": "boolean",
                "description": "Require the device to have up to date security providers. The device will require Google Play Services to be enabled and up to date."
              },
              "requireCompanyPortalAppIntegrity": {
                "type": "boolean",
                "description": "Require the device to pass the Company Portal client app runtime integrity check."
              }
            },
            "description": "This class contains compliance settings for Android for Work."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyGroupAssignment"
            }
          ],
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordMinimumLength": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidRequiredPasswordType"
          },
          "passwordMinutesOfInactivityBeforeLock": "Int32",
          "passwordExpirationDays": "Int32",
          "passwordPreviousPasswordBlockCount": "Int32",
          "securityPreventInstallAppsFromUnknownSources": true,
          "securityDisableUsbDebugging": true,
          "requireAppVerify": true,
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "securityBlockJailbrokenDevices": true,
          "osMinimumVersion": "String",
          "osMaximumVersion": "String",
          "minAndroidSecurityPatchLevel": "String",
          "storageRequireEncryption": true,
          "requireSafetyNetAttestationBasicIntegrity": true,
          "requireSafetyNetAttestationCertifiedDevice": true,
          "requireGooglePlayServices": true,
          "requireUpToDateSecurityProviders": true,
          "requireCompanyPortalAppIntegrity": true
        }
      },
      "microsoft.graph.androidCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "androidCompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Require a password to unlock device."
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum password length. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidRequiredPasswordType"
                  }
                ],
                "description": "Type of characters in password"
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires. Valid values 1 to 255",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block.",
                "format": "int32",
                "nullable": true
              },
              "securityPreventInstallAppsFromUnknownSources": {
                "type": "boolean",
                "description": "Require that devices disallow installation of apps from unknown sources."
              },
              "securityDisableUsbDebugging": {
                "type": "boolean",
                "description": "Disable USB debugging on Android devices."
              },
              "requireAppVerify": {
                "type": "boolean",
                "description": "Require the Android Verify apps feature is turned on."
              },
              "deviceThreatProtectionEnabled": {
                "type": "boolean",
                "description": "Require that devices have enabled device threat protection."
              },
              "deviceThreatProtectionRequiredSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceThreatProtectionLevel"
                  }
                ],
                "description": "Require Mobile Threat Protection minimum risk level to report noncompliance."
              },
              "securityBlockJailbrokenDevices": {
                "type": "boolean",
                "description": "Devices must not be jailbroken or rooted."
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Android version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Android version.",
                "nullable": true
              },
              "minAndroidSecurityPatchLevel": {
                "type": "string",
                "description": "Minimum Android security patch level.",
                "nullable": true
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on Android devices."
              },
              "requireSafetyNetAttestationBasicIntegrity": {
                "type": "boolean",
                "description": "Require the device to pass the SafetyNet basic integrity check."
              },
              "requireSafetyNetAttestationCertifiedDevice": {
                "type": "boolean",
                "description": "Require the device to pass the SafetyNet certified device check."
              },
              "requireGooglePlayServices": {
                "type": "boolean",
                "description": "Require Google Play Services to be installed and enabled on the device."
              },
              "requireUpToDateSecurityProviders": {
                "type": "boolean",
                "description": "Require the device to have up to date security providers. The device will require Google Play Services to be enabled and up to date."
              },
              "requireCompanyPortalAppIntegrity": {
                "type": "boolean",
                "description": "Require the device to pass the Company Portal client app runtime integrity check."
              },
              "conditionStatementId": {
                "type": "string",
                "description": "Condition statement id.",
                "nullable": true
              },
              "localActions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.androidDeviceComplianceLocalActionBase"
                }
              }
            },
            "description": "This class contains compliance settings for Android."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyGroupAssignment"
            }
          ],
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordMinimumLength": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidRequiredPasswordType"
          },
          "passwordMinutesOfInactivityBeforeLock": "Int32",
          "passwordExpirationDays": "Int32",
          "passwordPreviousPasswordBlockCount": "Int32",
          "securityPreventInstallAppsFromUnknownSources": true,
          "securityDisableUsbDebugging": true,
          "requireAppVerify": true,
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "securityBlockJailbrokenDevices": true,
          "osMinimumVersion": "String",
          "osMaximumVersion": "String",
          "minAndroidSecurityPatchLevel": "String",
          "storageRequireEncryption": true,
          "requireSafetyNetAttestationBasicIntegrity": true,
          "requireSafetyNetAttestationCertifiedDevice": true,
          "requireGooglePlayServices": true,
          "requireUpToDateSecurityProviders": true,
          "requireCompanyPortalAppIntegrity": true,
          "conditionStatementId": "String",
          "localActions": [
            {
              "@odata.type": "microsoft.graph.androidDeviceComplianceLocalActionBase"
            }
          ]
        }
      },
      "microsoft.graph.androidDeviceComplianceLocalActionLockDevice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.androidDeviceComplianceLocalActionBase"
          },
          {
            "title": "androidDeviceComplianceLocalActionLockDevice",
            "type": "object",
            "description": "Local Action Lock Device Only Configuration"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "gracePeriodInMinutes": "Int32"
        }
      },
      "microsoft.graph.androidDeviceComplianceLocalActionLockDeviceWithPasscode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.androidDeviceComplianceLocalActionBase"
          },
          {
            "title": "androidDeviceComplianceLocalActionLockDeviceWithPasscode",
            "type": "object",
            "properties": {
              "passcode": {
                "type": "string",
                "description": "Passcode to reset to Android device. This property is read-only.",
                "nullable": true
              },
              "passcodeSignInFailureCountBeforeWipe": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of sign in failures before wiping device, the value can be 4-11. Valid values 4 to 11",
                "format": "int32",
                "nullable": true
              }
            },
            "description": "Local Action Lock Device with Passcode Configuration"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "gracePeriodInMinutes": "Int32",
          "passcode": "String",
          "passcodeSignInFailureCountBeforeWipe": "Int32"
        }
      },
      "microsoft.graph.iosCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "iosCompliancePolicy",
            "type": "object",
            "properties": {
              "passcodeBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block simple passcodes."
              },
              "passcodeExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the passcode expires. Valid values 1 to 255",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passcode. Valid values 4 to 14",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a passcode is required.",
                "format": "int32",
                "nullable": true
              },
              "passcodePreviousPasscodeBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passcodes to block. Valid values 1 to 24",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passcodeRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required passcode type."
              },
              "passcodeRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require a passcode."
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum IOS version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum IOS version.",
                "nullable": true
              },
              "securityBlockJailbrokenDevices": {
                "type": "boolean",
                "description": "Devices must not be jailbroken or rooted."
              },
              "deviceThreatProtectionEnabled": {
                "type": "boolean",
                "description": "Require that devices have enabled device threat protection ."
              },
              "deviceThreatProtectionRequiredSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceThreatProtectionLevel"
                  }
                ],
                "description": "Require Mobile Threat Protection minimum risk level to report noncompliance."
              },
              "managedEmailProfileRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require a managed email profile."
              }
            },
            "description": "This class contains compliance settings for IOS."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyGroupAssignment"
            }
          ],
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passcodeBlockSimple": true,
          "passcodeExpirationDays": "Int32",
          "passcodeMinimumLength": "Int32",
          "passcodeMinutesOfInactivityBeforeLock": "Int32",
          "passcodePreviousPasscodeBlockCount": "Int32",
          "passcodeMinimumCharacterSetCount": "Int32",
          "passcodeRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passcodeRequired": true,
          "osMinimumVersion": "String",
          "osMaximumVersion": "String",
          "securityBlockJailbrokenDevices": true,
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "managedEmailProfileRequired": true
        }
      },
      "microsoft.graph.macOSCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "macOSCompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Whether or not to require a password."
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block simple passwords."
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires. Valid values 1 to 255",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of password. Valid values 4 to 14",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block. Valid values 1 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type."
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum IOS version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum IOS version.",
                "nullable": true
              },
              "systemIntegrityProtectionEnabled": {
                "type": "boolean",
                "description": "Require that devices have enabled system integrity protection."
              },
              "deviceThreatProtectionEnabled": {
                "type": "boolean",
                "description": "Require that devices have enabled device threat protection ."
              },
              "deviceThreatProtectionRequiredSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceThreatProtectionLevel"
                  }
                ],
                "description": "Require Mobile Threat Protection minimum risk level to report noncompliance."
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on Mac OS devices."
              }
            },
            "description": "This class contains compliance settings for Mac OS."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyGroupAssignment"
            }
          ],
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordBlockSimple": true,
          "passwordExpirationDays": "Int32",
          "passwordMinimumLength": "Int32",
          "passwordMinutesOfInactivityBeforeLock": "Int32",
          "passwordPreviousPasswordBlockCount": "Int32",
          "passwordMinimumCharacterSetCount": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "osMinimumVersion": "String",
          "osMaximumVersion": "String",
          "systemIntegrityProtectionEnabled": true,
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.defaultDeviceCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "defaultDeviceCompliancePolicy",
            "type": "object",
            "description": "Default device compliance policy rules that are enforced account wide."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyGroupAssignment"
            }
          ],
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ]
        }
      },
      "microsoft.graph.windows10CompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "windows10CompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Require a password to unlock Windows device."
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block simple password."
              },
              "passwordRequiredToUnlockFromIdle": {
                "type": "boolean",
                "description": "Require a password to unlock an idle device."
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The password expiration in days.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minimum password length.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type."
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of previous passwords to prevent re-use of.",
                "format": "int32",
                "nullable": true
              },
              "requireHealthyDeviceReport": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation."
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Windows 10 version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Windows 10 version.",
                "nullable": true
              },
              "minimumUpdateAutoInstallClassification": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.updateClassification"
                  }
                ],
                "description": "The minimum update classification to install automatically."
              },
              "mobileOsMinimumVersion": {
                "type": "string",
                "description": "Minimum Windows Phone version.",
                "nullable": true
              },
              "mobileOsMaximumVersion": {
                "type": "string",
                "description": "Maximum Windows Phone version.",
                "nullable": true
              },
              "earlyLaunchAntiMalwareDriverEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation - early launch antimalware driver is enabled."
              },
              "bitLockerEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported healthy by Windows Device Health Attestation - bit locker is enabled"
              },
              "secureBootEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation - secure boot is enabled."
              },
              "codeIntegrityEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation."
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on windows devices."
              },
              "activeFirewallRequired": {
                "type": "boolean",
                "description": "Require active firewall on Windows devices."
              },
              "uacRequired": {
                "type": "boolean",
                "description": "Require UAC on Windows devices."
              },
              "defenderEnabled": {
                "type": "boolean",
                "description": "Require Windows Defender Antimalware on Windows devices."
              },
              "defenderVersion": {
                "type": "string",
                "description": "Require Windows Defender Antimalware minimum version on Windows devices.",
                "nullable": true
              },
              "signatureOutOfDate": {
                "type": "boolean",
                "description": "Require Windows Defender Antimalware Signature to be up to date on Windows devices."
              },
              "rtpEnabled": {
                "type": "boolean",
                "description": "Require Windows Defender Antimalware Real-Time Protection on Windows devices."
              },
              "validOperatingSystemBuildRanges": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.operatingSystemVersionRange"
                    }
                  ],
                  "nullable": true
                },
                "description": "The valid operating system build ranges on Windows devices. This collection can contain a maximum of 10000 elements."
              }
            },
            "description": "This class contains compliance settings for Windows 10."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyGroupAssignment"
            }
          ],
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordBlockSimple": true,
          "passwordRequiredToUnlockFromIdle": true,
          "passwordMinutesOfInactivityBeforeLock": "Int32",
          "passwordExpirationDays": "Int32",
          "passwordMinimumLength": "Int32",
          "passwordMinimumCharacterSetCount": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordPreviousPasswordBlockCount": "Int32",
          "requireHealthyDeviceReport": true,
          "osMinimumVersion": "String",
          "osMaximumVersion": "String",
          "minimumUpdateAutoInstallClassification": {
            "@odata.type": "microsoft.graph.updateClassification"
          },
          "mobileOsMinimumVersion": "String",
          "mobileOsMaximumVersion": "String",
          "earlyLaunchAntiMalwareDriverEnabled": true,
          "bitLockerEnabled": true,
          "secureBootEnabled": true,
          "codeIntegrityEnabled": true,
          "storageRequireEncryption": true,
          "activeFirewallRequired": true,
          "uacRequired": true,
          "defenderEnabled": true,
          "defenderVersion": "String",
          "signatureOutOfDate": true,
          "rtpEnabled": true,
          "validOperatingSystemBuildRanges": [
            {
              "@odata.type": "microsoft.graph.operatingSystemVersionRange"
            }
          ]
        }
      },
      "microsoft.graph.operatingSystemVersionRange": {
        "title": "operatingSystemVersionRange",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of this range (e.g. Valid 1702 builds)"
          },
          "lowestVersion": {
            "type": "string",
            "description": "The lowest inclusive version that this range contains."
          },
          "highestVersion": {
            "type": "string",
            "description": "The highest inclusive version that this range contains."
          }
        },
        "example": {
          "description": "String",
          "lowestVersion": "String",
          "highestVersion": "String"
        }
      },
      "microsoft.graph.windows10MobileCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "windows10MobileCompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Require a password to unlock Windows Phone device."
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Whether or not to block syncing the calendar."
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum password length. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type."
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of previous passwords to prevent re-use of.",
                "format": "int32",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before password expiration. Valid values 1 to 255",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequireToUnlockFromIdle": {
                "type": "boolean",
                "description": "Require a password to unlock an idle device."
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Windows Phone version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Windows Phone version.",
                "nullable": true
              },
              "earlyLaunchAntiMalwareDriverEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation - early launch antimalware driver is enabled."
              },
              "bitLockerEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported healthy by Windows Device Health Attestation - bit locker is enabled"
              },
              "secureBootEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation - secure boot is enabled."
              },
              "codeIntegrityEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation."
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on windows devices."
              },
              "activeFirewallRequired": {
                "type": "boolean",
                "description": "Require active firewall on Windows devices."
              },
              "uacRequired": {
                "type": "boolean",
                "description": "Require UAC on Windows devices."
              },
              "validOperatingSystemBuildRanges": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.operatingSystemVersionRange"
                    }
                  ],
                  "nullable": true
                },
                "description": "The valid operating system build ranges on Windows devices. This collection can contain a maximum of 10000 elements."
              }
            },
            "description": "This class contains compliance settings for Windows 10 Mobile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyGroupAssignment"
            }
          ],
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordBlockSimple": true,
          "passwordMinimumLength": "Int32",
          "passwordMinimumCharacterSetCount": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordPreviousPasswordBlockCount": "Int32",
          "passwordExpirationDays": "Int32",
          "passwordMinutesOfInactivityBeforeLock": "Int32",
          "passwordRequireToUnlockFromIdle": true,
          "osMinimumVersion": "String",
          "osMaximumVersion": "String",
          "earlyLaunchAntiMalwareDriverEnabled": true,
          "bitLockerEnabled": true,
          "secureBootEnabled": true,
          "codeIntegrityEnabled": true,
          "storageRequireEncryption": true,
          "activeFirewallRequired": true,
          "uacRequired": true,
          "validOperatingSystemBuildRanges": [
            {
              "@odata.type": "microsoft.graph.operatingSystemVersionRange"
            }
          ]
        }
      },
      "microsoft.graph.windows81CompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "windows81CompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Require a password to unlock Windows device."
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block simple password."
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Password expiration in days.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minimum password length.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type."
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of previous passwords to prevent re-use of. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Windows 8.1 version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Windows 8.1 version.",
                "nullable": true
              },
              "minimumUpdateAutoInstallClassification": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.updateClassification"
                  }
                ],
                "description": "The minimum update classification to install automatically."
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Indicates whether or not to require encryption on a windows 8.1 device."
              }
            },
            "description": "This class contains compliance settings for Windows 8.1."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyGroupAssignment"
            }
          ],
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordBlockSimple": true,
          "passwordExpirationDays": "Int32",
          "passwordMinimumLength": "Int32",
          "passwordMinutesOfInactivityBeforeLock": "Int32",
          "passwordMinimumCharacterSetCount": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordPreviousPasswordBlockCount": "Int32",
          "osMinimumVersion": "String",
          "osMaximumVersion": "String",
          "minimumUpdateAutoInstallClassification": {
            "@odata.type": "microsoft.graph.updateClassification"
          },
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.windowsPhone81CompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "windowsPhone81CompliancePolicy",
            "type": "object",
            "properties": {
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Whether or not to block syncing the calendar."
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passwords.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type."
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordRequired": {
                "type": "boolean",
                "description": "Whether or not to require a password."
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Windows Phone version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Windows Phone version.",
                "nullable": true
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on windows phone devices."
              }
            },
            "description": "This class contains compliance settings for Windows 8.1 Mobile."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyGroupAssignment"
            }
          ],
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordBlockSimple": true,
          "passwordExpirationDays": "Int32",
          "passwordMinimumLength": "Int32",
          "passwordMinutesOfInactivityBeforeLock": "Int32",
          "passwordMinimumCharacterSetCount": "Int32",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordPreviousPasswordBlockCount": "Int32",
          "passwordRequired": true,
          "osMinimumVersion": "String",
          "osMaximumVersion": "String",
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.windowsDomainJoinConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceSetupConfiguration"
          },
          {
            "title": "windowsDomainJoinConfiguration",
            "type": "object",
            "properties": {
              "computerNameStaticPrefix": {
                "type": "string",
                "description": "Fixed prefix to be used for computer name. This property can only be set during creation."
              },
              "computerNameSuffixRandomCharCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Dynamically generated characters used as suffix for computer name. Valid values 3 to 14. This property can only be set during creation.",
                "format": "int32"
              },
              "activeDirectoryDomainName": {
                "type": "string",
                "description": "Active Directory domain name to join. This property can only be set during creation."
              }
            },
            "description": "Windows Domain Join device setup configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "description": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "displayName": "String",
          "version": "Int32",
          "computerNameStaticPrefix": "String",
          "computerNameSuffixRandomCharCount": "Int32",
          "activeDirectoryDomainName": "String"
        }
      },
      "microsoft.graph.complianceSettingStateSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "complianceSettingStateSummary",
            "type": "object",
            "properties": {
              "setting": {
                "type": "string",
                "description": "The setting class name and property name.",
                "nullable": true
              },
              "settingName": {
                "type": "string",
                "description": "Name of the setting.",
                "nullable": true
              },
              "platformType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.policyPlatformType"
                  }
                ],
                "description": "Setting platform"
              },
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown devices",
                "format": "int32"
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32"
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant devices",
                "format": "int32"
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated devices",
                "format": "int32"
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of NonCompliant devices",
                "format": "int32"
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32"
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict devices",
                "format": "int32"
              }
            },
            "description": "Device Compilance Policy Setting State summary across the account."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "setting": "String",
          "settingName": "String",
          "platformType": {
            "@odata.type": "microsoft.graph.policyPlatformType"
          },
          "unknownDeviceCount": "Int32",
          "notApplicableDeviceCount": "Int32",
          "compliantDeviceCount": "Int32",
          "remediatedDeviceCount": "Int32",
          "nonCompliantDeviceCount": "Int32",
          "errorDeviceCount": "Int32",
          "conflictDeviceCount": "Int32"
        }
      },
      "microsoft.graph.deviceComplianceSettingState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceSettingState",
            "type": "object",
            "properties": {
              "platformType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceType"
                  }
                ],
                "description": "Device platform type"
              },
              "setting": {
                "type": "string",
                "description": "The setting class name and property name.",
                "nullable": true
              },
              "settingName": {
                "type": "string",
                "description": "The Setting Name that is being reported",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "description": "The Device Id that is being reported",
                "nullable": true
              },
              "deviceName": {
                "type": "string",
                "description": "The Device Name that is being reported",
                "nullable": true
              },
              "userId": {
                "type": "string",
                "description": "The user Id that is being reported",
                "nullable": true
              },
              "userEmail": {
                "type": "string",
                "description": "The User email address that is being reported",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "The User Name that is being reported",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "The User PrincipalName that is being reported",
                "nullable": true
              },
              "deviceModel": {
                "type": "string",
                "description": "The device model that is being reported",
                "nullable": true
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "The compliance state of the setting"
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time"
              }
            },
            "description": "Device compliance setting State for a given device."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "platformType": {
            "@odata.type": "microsoft.graph.deviceType"
          },
          "setting": "String",
          "settingName": "String",
          "deviceId": "String",
          "deviceName": "String",
          "userId": "String",
          "userEmail": "String",
          "userName": "String",
          "userPrincipalName": "String",
          "deviceModel": "String",
          "state": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "complianceGracePeriodExpirationDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.deviceConfigurationSettingState": {
        "title": "deviceConfigurationSettingState",
        "type": "object",
        "properties": {
          "setting": {
            "type": "string",
            "description": "The setting that is being reported",
            "nullable": true
          },
          "settingName": {
            "type": "string",
            "description": "Localized/user friendly setting name that is being reported",
            "nullable": true
          },
          "instanceDisplayName": {
            "type": "string",
            "description": "Name of setting instance that is being reported.",
            "nullable": true
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
              }
            ],
            "description": "The compliance state of the setting"
          },
          "errorCode": {
            "type": "integer",
            "description": "Error code for the setting",
            "format": "int64"
          },
          "errorDescription": {
            "type": "string",
            "description": "Error description",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "UserId",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "UserName",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "description": "UserEmail",
            "nullable": true
          },
          "userPrincipalName": {
            "type": "string",
            "description": "UserPrincipalName.",
            "nullable": true
          },
          "sources": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.settingSource"
                }
              ],
              "nullable": true
            },
            "description": "Contributing policies"
          },
          "currentValue": {
            "type": "string",
            "description": "Current value of setting on device",
            "nullable": true
          }
        },
        "example": {
          "setting": "String",
          "settingName": "String",
          "instanceDisplayName": "String",
          "state": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "errorCode": "Int64",
          "errorDescription": "String",
          "userId": "String",
          "userName": "String",
          "userEmail": "String",
          "userPrincipalName": "String",
          "sources": [
            {
              "@odata.type": "microsoft.graph.settingSource"
            }
          ],
          "currentValue": "String"
        }
      },
      "microsoft.graph.settingSource": {
        "title": "settingSource",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          }
        },
        "example": {
          "id": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.deviceCompliancePolicySettingState": {
        "title": "deviceCompliancePolicySettingState",
        "type": "object",
        "properties": {
          "setting": {
            "type": "string",
            "description": "The setting that is being reported",
            "nullable": true
          },
          "settingName": {
            "type": "string",
            "description": "Localized/user friendly setting name that is being reported",
            "nullable": true
          },
          "instanceDisplayName": {
            "type": "string",
            "description": "Name of setting instance that is being reported.",
            "nullable": true
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
              }
            ],
            "description": "The compliance state of the setting"
          },
          "errorCode": {
            "type": "integer",
            "description": "Error code for the setting",
            "format": "int64"
          },
          "errorDescription": {
            "type": "string",
            "description": "Error description",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "UserId",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "UserName",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "description": "UserEmail",
            "nullable": true
          },
          "userPrincipalName": {
            "type": "string",
            "description": "UserPrincipalName.",
            "nullable": true
          },
          "sources": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.settingSource"
                }
              ],
              "nullable": true
            },
            "description": "Contributing policies"
          },
          "currentValue": {
            "type": "string",
            "description": "Current value of setting on device",
            "nullable": true
          }
        },
        "example": {
          "setting": "String",
          "settingName": "String",
          "instanceDisplayName": "String",
          "state": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "errorCode": "Int64",
          "errorDescription": "String",
          "userId": "String",
          "userName": "String",
          "userEmail": "String",
          "userPrincipalName": "String",
          "sources": [
            {
              "@odata.type": "microsoft.graph.settingSource"
            }
          ],
          "currentValue": "String"
        }
      },
      "microsoft.graph.vppTokenActionResult": {
        "title": "vppTokenActionResult",
        "type": "object",
        "properties": {
          "actionName": {
            "type": "string",
            "description": "Action name",
            "nullable": true
          },
          "actionState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.vppTokenActionState"
              }
            ],
            "description": "State of the action"
          },
          "actionMessage": {
            "type": "string",
            "description": "Message about the action status",
            "nullable": true
          },
          "startDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action was initiated",
            "format": "date-time"
          },
          "lastUpdatedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action state was last updated",
            "format": "date-time"
          }
        },
        "example": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.vppTokenActionState"
          },
          "actionMessage": "String",
          "startDateTime": "DateTimeOffset (timestamp)",
          "lastUpdatedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.enrollmentConfigurationAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "enrollmentConfigurationAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "Not yet documented",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.defaultDeviceEnrollmentRestrictions": {
        "title": "defaultDeviceEnrollmentRestrictions",
        "type": "object",
        "properties": {
          "iosRestrictions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestrictions"
              }
            ],
            "description": "Restrictions on iOS enrollment",
            "nullable": true
          },
          "windowsRestrictions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestrictions"
              }
            ],
            "description": "Restrictions on Windows Desktop enrollment",
            "nullable": true
          },
          "windowsMobileRestrictions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestrictions"
              }
            ],
            "description": "Restrictions on Windows Mobile enrollment",
            "nullable": true
          },
          "androidRestrictions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestrictions"
              }
            ],
            "description": "Restrictions on Android enrollment",
            "nullable": true
          },
          "androidForWorkRestrictions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestrictions"
              }
            ],
            "description": "Restrictions on Android for Work enrollment",
            "nullable": true
          },
          "macRestrictions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestrictions"
              }
            ],
            "description": "Restrictions on Mac enrollment",
            "nullable": true
          }
        },
        "example": {
          "iosRestrictions": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestrictions"
          },
          "windowsRestrictions": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestrictions"
          },
          "windowsMobileRestrictions": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestrictions"
          },
          "androidRestrictions": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestrictions"
          },
          "androidForWorkRestrictions": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestrictions"
          },
          "macRestrictions": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestrictions"
          }
        }
      },
      "microsoft.graph.deviceEnrollmentPlatformRestrictions": {
        "title": "deviceEnrollmentPlatformRestrictions",
        "type": "object",
        "properties": {
          "platformBlocked": {
            "type": "boolean",
            "description": "Block the platform from enrolling"
          },
          "personalDeviceEnrollmentBlocked": {
            "type": "boolean",
            "description": "Block personally owned devices from enrolling"
          },
          "osMinimumVersion": {
            "type": "string",
            "description": "Min OS version supported",
            "nullable": true
          },
          "osMaximumVersion": {
            "type": "string",
            "description": "Max OS version supported",
            "nullable": true
          }
        },
        "example": {
          "platformBlocked": true,
          "personalDeviceEnrollmentBlocked": true,
          "osMinimumVersion": "String",
          "osMaximumVersion": "String"
        }
      },
      "microsoft.graph.defaultDeviceEnrollmentWindowsHelloForBusinessSettings": {
        "title": "defaultDeviceEnrollmentWindowsHelloForBusinessSettings",
        "type": "object",
        "properties": {
          "pinMinimumLength": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Controls the minimum number of characters required for the Windows Hello for Business PIN.  This value must be between 4 and 127, inclusive, and less than or equal to the value set for the maximum PIN.",
            "format": "int32"
          },
          "pinMaximumLength": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Controls the maximum number of characters allowed for the Windows Hello for Business PIN. This value must be between 4 and 127, inclusive. This value must be greater than or equal to the value set for the minimum PIN.",
            "format": "int32"
          },
          "pinUppercaseLettersUsage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.windowsHelloForBusinessPinUsage"
              }
            ],
            "description": "Controls the ability to use uppercase letters in the Windows Hello for Business PIN.  Allowed permits the use of uppercase letter(s), whereas Required ensures they are present. If set to Not Allowed, uppercase letters will not be permitted."
          },
          "pinLowercaseLettersUsage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.windowsHelloForBusinessPinUsage"
              }
            ],
            "description": "Controls the ability to use lowercase letters in the Windows Hello for Business PIN.  Allowed permits the use of lowercase letter(s), whereas Required ensures they are present. If set to Not Allowed, lowercase letters will not be permitted."
          },
          "pinSpecialCharactersUsage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.windowsHelloForBusinessPinUsage"
              }
            ],
            "description": "Controls the ability to use special characters in the Windows Hello for Business PIN.  Allowed permits the use of special character(s), whereas Required ensures they are present. If set to Not Allowed, special character(s) will not be permitted."
          },
          "windowsHelloForBusiness": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.windowsHelloForBusinessConfiguration"
              }
            ],
            "description": "Controls whether to allow the device to be configured for Windows Hello for Business. If set to disabled, the user cannot provision Windows Hello for Business except on Azure Active Directory joined mobile phones if otherwise required. If set to Not Configured, Intune will not override client defaults."
          },
          "securityDeviceRequired": {
            "type": "boolean",
            "description": "Controls whether to require a Trusted Platform Module (TPM) for provisioning Windows Hello for Business. A TPM provides an additional security benefit in that data stored on it cannot be used on other devices. If set to False, all devices can provision Windows Hello for Business even if there is not a usable TPM."
          },
          "unlockWithBiometricsEnabled": {
            "type": "boolean",
            "description": "Controls the use of biometric gestures, such as face and fingerprint, as an alternative to the Windows Hello for Business PIN.  If set to False, biometric gestures are not allowed. Users must still configure a PIN as a backup in case of failures."
          },
          "mobilePinSignInEnabled": {
            "type": "boolean",
            "description": "Controls the use of Remote Windows Hello for Business. Remote Windows Hello for Business provides the ability for a portable, registered device to be usable as a companion for desktop authentication. The desktop must be Azure AD joined and the companion device must have a Windows Hello for Business PIN."
          },
          "pinPreviousBlockCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Controls the ability to prevent users from using past PINs. This must be set between 0 and 50, inclusive, and the current PIN of the user is included in that count. If set to 0, previous PINs are not stored. PIN history is not preserved through a PIN reset.",
            "format": "int32"
          },
          "pinExpirationInDays": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Controls the period of time (in days) that a PIN can be used before the system requires the user to change it. This must be set between 0 and 730, inclusive. If set to 0, the user's PIN will never expire",
            "format": "int32"
          },
          "enhancedBiometrics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.windowsHelloForBusinessConfiguration"
              }
            ],
            "description": "Controls the ability to use the anti-spoofing features for facial recognition on devices which support it. If set to disabled, anti-spoofing features are not allowed. If set to Not Configured, the user can choose whether they want to use anti-spoofing."
          }
        },
        "example": {
          "pinMinimumLength": "Int32",
          "pinMaximumLength": "Int32",
          "pinUppercaseLettersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "pinLowercaseLettersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "pinSpecialCharactersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "windowsHelloForBusiness": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessConfiguration"
          },
          "securityDeviceRequired": true,
          "unlockWithBiometricsEnabled": true,
          "mobilePinSignInEnabled": true,
          "pinPreviousBlockCount": "Int32",
          "pinExpirationInDays": "Int32",
          "enhancedBiometrics": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessConfiguration"
          }
        }
      },
      "microsoft.graph.deviceEnrollmentLimitConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentConfiguration"
          },
          {
            "title": "deviceEnrollmentLimitConfiguration",
            "type": "object",
            "properties": {
              "limit": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32"
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "priority": "Int32",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "Int32",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
            }
          ],
          "limit": "Int32"
        }
      },
      "microsoft.graph.deviceEnrollmentPlatformRestrictionsConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentConfiguration"
          },
          {
            "title": "deviceEnrollmentPlatformRestrictionsConfiguration",
            "type": "object",
            "properties": {
              "iosRestriction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestriction"
                  }
                ],
                "description": "Not yet documented",
                "nullable": true
              },
              "windowsRestriction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestriction"
                  }
                ],
                "description": "Not yet documented",
                "nullable": true
              },
              "windowsMobileRestriction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestriction"
                  }
                ],
                "description": "Not yet documented",
                "nullable": true
              },
              "androidRestriction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestriction"
                  }
                ],
                "description": "Not yet documented",
                "nullable": true
              },
              "androidForWorkRestriction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestriction"
                  }
                ],
                "nullable": true
              },
              "macRestriction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestriction"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "priority": "Int32",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "Int32",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
            }
          ],
          "iosRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "windowsRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "windowsMobileRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "androidRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "androidForWorkRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "macRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          }
        }
      },
      "microsoft.graph.deviceEnrollmentPlatformRestriction": {
        "title": "deviceEnrollmentPlatformRestriction",
        "type": "object",
        "properties": {
          "platformBlocked": {
            "type": "boolean",
            "description": "Block the platform from enrolling"
          },
          "personalDeviceEnrollmentBlocked": {
            "type": "boolean",
            "description": "Block personally owned devices from enrolling"
          },
          "osMinimumVersion": {
            "type": "string",
            "description": "Min OS version supported",
            "nullable": true
          },
          "osMaximumVersion": {
            "type": "string",
            "description": "Max OS version supported",
            "nullable": true
          }
        },
        "example": {
          "platformBlocked": true,
          "personalDeviceEnrollmentBlocked": true,
          "osMinimumVersion": "String",
          "osMaximumVersion": "String"
        }
      },
      "microsoft.graph.windows10EnrollmentCompletionPageConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentConfiguration"
          },
          {
            "title": "windows10EnrollmentCompletionPageConfiguration",
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "nullable": true
              },
              "bodyText": {
                "type": "string",
                "nullable": true
              },
              "moreInfoUrl": {
                "type": "string",
                "nullable": true
              },
              "moreInfoText": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "priority": "Int32",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "Int32",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
            }
          ],
          "title": "String",
          "bodyText": "String",
          "moreInfoUrl": "String",
          "moreInfoText": "String"
        }
      },
      "microsoft.graph.deviceEnrollmentWindowsHelloForBusinessConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentConfiguration"
          },
          {
            "title": "deviceEnrollmentWindowsHelloForBusinessConfiguration",
            "type": "object",
            "properties": {
              "pinMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32"
              },
              "pinMaximumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32"
              },
              "pinUppercaseCharactersUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsHelloForBusinessPinUsage"
                  }
                ],
                "description": "Not yet documented. Possible values are: allowed, required, disallowed."
              },
              "pinLowercaseCharactersUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsHelloForBusinessPinUsage"
                  }
                ],
                "description": "Not yet documented. Possible values are: allowed, required, disallowed."
              },
              "pinSpecialCharactersUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsHelloForBusinessPinUsage"
                  }
                ],
                "description": "Not yet documented. Possible values are: allowed, required, disallowed."
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.enablement"
                  }
                ],
                "description": "Not yet documented. Possible values are: notConfigured, enabled, disabled."
              },
              "securityDeviceRequired": {
                "type": "boolean",
                "description": "Not yet documented"
              },
              "unlockWithBiometricsEnabled": {
                "type": "boolean",
                "description": "Not yet documented"
              },
              "remotePassportEnabled": {
                "type": "boolean",
                "description": "Not yet documented"
              },
              "pinPreviousBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32"
              },
              "pinExpirationInDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32"
              },
              "enhancedBiometricsState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.enablement"
                  }
                ],
                "description": "Not yet documented. Possible values are: notConfigured, enabled, disabled."
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "priority": "Int32",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "version": "Int32",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
            }
          ],
          "pinMinimumLength": "Int32",
          "pinMaximumLength": "Int32",
          "pinUppercaseCharactersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "pinLowercaseCharactersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "pinSpecialCharactersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "state": {
            "@odata.type": "microsoft.graph.enablement"
          },
          "securityDeviceRequired": true,
          "unlockWithBiometricsEnabled": true,
          "remotePassportEnabled": true,
          "pinPreviousBlockCount": "Int32",
          "pinExpirationInDays": "Int32",
          "enhancedBiometricsState": {
            "@odata.type": "microsoft.graph.enablement"
          }
        }
      },
      "microsoft.graph.deviceManagementExchangeAccessRule": {
        "title": "deviceManagementExchangeAccessRule",
        "type": "object",
        "properties": {
          "deviceClass": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeDeviceClass"
              }
            ],
            "description": "Device Class which will be impacted by this rule.",
            "nullable": true
          },
          "accessLevel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeAccessLevel"
              }
            ],
            "description": "Access Level for Exchange granted by this rule."
          }
        },
        "example": {
          "deviceClass": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeDeviceClass"
          },
          "accessLevel": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeAccessLevel"
          }
        }
      },
      "microsoft.graph.deviceManagementExchangeDeviceClass": {
        "title": "deviceManagementExchangeDeviceClass",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the device class which will be impacted by this rule.",
            "nullable": true
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.exchangeAccessRuleType"
              }
            ],
            "description": "Type of device which is impacted by this rule e.g. Model, Family"
          }
        },
        "example": {
          "name": "String",
          "type": {
            "@odata.type": "microsoft.graph.exchangeAccessRuleType"
          }
        }
      },
      "microsoft.graph.managedMobileApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedMobileApp",
            "type": "object",
            "properties": {
              "mobileAppIdentifier": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileAppIdentifier"
                  }
                ],
                "description": "The identifier for an app with it's operating system type.",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            },
            "description": "The identifier for the deployment an app."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "mobileAppIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "version": "String"
        }
      },
      "microsoft.graph.mobileAppIdentifier": {
        "title": "mobileAppIdentifier",
        "type": "object"
      },
      "microsoft.graph.targetedManagedAppPolicyAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "targetedManagedAppPolicyAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "Identifier for deployment of a group or app",
                "nullable": true
              }
            },
            "description": "The type for deployment of groups or apps."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.managedAppDiagnosticStatus": {
        "title": "managedAppDiagnosticStatus",
        "type": "object",
        "properties": {
          "validationName": {
            "type": "string",
            "description": "The validation friendly name",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "The state of the operation",
            "nullable": true
          },
          "mitigationInstruction": {
            "type": "string",
            "description": "Instruction on how to mitigate a failed validation",
            "nullable": true
          }
        },
        "example": {
          "validationName": "String",
          "state": "String",
          "mitigationInstruction": "String"
        }
      },
      "microsoft.graph.managedAppOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedAppOperation",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The operation name.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time the app operation was modified.",
                "format": "date-time"
              },
              "state": {
                "type": "string",
                "description": "The current state of the operation",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            },
            "description": "Represents an operation applied against an app registration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "state": "String",
          "version": "String"
        }
      },
      "microsoft.graph.managedAppPolicyDeploymentSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedAppPolicyDeploymentSummary",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Not yet documented",
                "nullable": true
              },
              "configurationDeployedUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32"
              },
              "lastRefreshTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Not yet documented",
                "format": "date-time"
              },
              "configurationDeploymentSummaryPerApp": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.managedAppPolicyDeploymentSummaryPerApp"
                    }
                  ],
                  "nullable": true
                },
                "description": "Not yet documented"
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            },
            "description": "The ManagedAppEntity is the base entity type for all other entity types under app management workflow."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "configurationDeployedUserCount": "Int32",
          "lastRefreshTime": "DateTimeOffset (timestamp)",
          "configurationDeploymentSummaryPerApp": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummaryPerApp"
            }
          ],
          "version": "String"
        }
      },
      "microsoft.graph.windowsInformationProtectionResourceCollection": {
        "title": "windowsInformationProtectionResourceCollection",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name"
          },
          "resources": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Collection of resources"
          }
        },
        "example": {
          "displayName": "String",
          "resources": [
            "String"
          ]
        }
      },
      "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate": {
        "title": "windowsInformationProtectionDataRecoveryCertificate",
        "type": "object",
        "properties": {
          "subjectName": {
            "type": "string",
            "description": "Data recovery Certificate subject name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Data recovery Certificate description",
            "nullable": true
          },
          "expirationDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Data recovery Certificate expiration datetime",
            "format": "date-time"
          },
          "certificate": {
            "type": "string",
            "description": "Data recovery Certificate",
            "format": "base64url",
            "nullable": true
          }
        },
        "example": {
          "subjectName": "String",
          "description": "String",
          "expirationDateTime": "DateTimeOffset (timestamp)",
          "certificate": "Binary"
        }
      },
      "microsoft.graph.windowsInformationProtectionApp": {
        "title": "windowsInformationProtectionApp",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "App display name."
          },
          "description": {
            "type": "string",
            "description": "The app's description.",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "description": "The publisher name",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "description": "The product name.",
            "nullable": true
          },
          "denied": {
            "type": "boolean",
            "description": "If true, app is denied protection or exemption."
          }
        },
        "example": {
          "displayName": "String",
          "description": "String",
          "publisherName": "String",
          "productName": "String",
          "denied": true
        }
      },
      "microsoft.graph.windowsInformationProtectionProxiedDomainCollection": {
        "title": "windowsInformationProtectionProxiedDomainCollection",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name"
          },
          "proxiedDomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.proxiedDomain"
            },
            "description": "Collection of proxied domains"
          }
        },
        "example": {
          "displayName": "String",
          "proxiedDomains": [
            {
              "@odata.type": "microsoft.graph.proxiedDomain"
            }
          ]
        }
      },
      "microsoft.graph.windowsInformationProtectionIPRangeCollection": {
        "title": "windowsInformationProtectionIPRangeCollection",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name"
          },
          "ranges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.ipRange"
            },
            "description": "Collection of ip ranges"
          }
        },
        "example": {
          "displayName": "String",
          "ranges": [
            {
              "@odata.type": "microsoft.graph.ipRange"
            }
          ]
        }
      },
      "microsoft.graph.windowsInformationProtectionAppLockerFile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsInformationProtectionAppLockerFile",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The friendly name",
                "nullable": true
              },
              "fileHash": {
                "type": "string",
                "description": "SHA256 hash of the file",
                "nullable": true
              },
              "file": {
                "type": "string",
                "description": "File as a byte array",
                "format": "base64url",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            },
            "description": "Windows Information Protection AppLocker File"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "fileHash": "String",
          "file": "Binary",
          "version": "String"
        }
      },
      "microsoft.graph.androidMobileAppIdentifier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileAppIdentifier"
          },
          {
            "title": "androidMobileAppIdentifier",
            "type": "object",
            "properties": {
              "packageId": {
                "type": "string",
                "description": "The identifier for an app, as specified in the play store."
              }
            }
          }
        ],
        "example": {
          "packageId": "String"
        }
      },
      "microsoft.graph.iosMobileAppIdentifier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileAppIdentifier"
          },
          {
            "title": "iosMobileAppIdentifier",
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string",
                "description": "The identifier for an app, as specified in the app store."
              }
            }
          }
        ],
        "example": {
          "bundleId": "String"
        }
      },
      "microsoft.graph.managedAppPolicyDeploymentSummaryPerApp": {
        "title": "managedAppPolicyDeploymentSummaryPerApp",
        "type": "object",
        "properties": {
          "mobileAppIdentifier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mobileAppIdentifier"
              }
            ],
            "description": "Deployment of an app.",
            "nullable": true
          },
          "configurationAppliedUserCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of users the policy is applied.",
            "format": "int32"
          }
        },
        "example": {
          "mobileAppIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "configurationAppliedUserCount": "Int32"
        }
      },
      "microsoft.graph.windowsInformationProtectionStoreApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionApp"
          },
          {
            "title": "windowsInformationProtectionStoreApp",
            "type": "object"
          }
        ],
        "example": {
          "displayName": "String",
          "description": "String",
          "publisherName": "String",
          "productName": "String",
          "denied": true
        }
      },
      "microsoft.graph.windowsInformationProtectionDesktopApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionApp"
          },
          {
            "title": "windowsInformationProtectionDesktopApp",
            "type": "object",
            "properties": {
              "binaryName": {
                "type": "string",
                "description": "The binary name."
              },
              "binaryVersionLow": {
                "type": "string",
                "description": "The lower binary version.",
                "nullable": true
              },
              "binaryVersionHigh": {
                "type": "string",
                "description": "The high binary version.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "description": "String",
          "publisherName": "String",
          "productName": "String",
          "denied": true,
          "binaryName": "String",
          "binaryVersionLow": "String",
          "binaryVersionHigh": "String"
        }
      },
      "microsoft.graph.iosManagedAppRegistration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
          },
          {
            "title": "iosManagedAppRegistration",
            "type": "object",
            "description": "Represents the synchronization details of an ios app, with management capabilities, for a specific user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastSyncDateTime": "DateTimeOffset (timestamp)",
          "applicationVersion": "String",
          "managementSdkVersion": "String",
          "platformVersion": "String",
          "deviceType": "String",
          "deviceTag": "String",
          "deviceName": "String",
          "flaggedReasons": [
            {
              "@odata.type": "microsoft.graph.managedAppFlaggedReason"
            }
          ],
          "userId": "String",
          "appIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "version": "String",
          "appliedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "intendedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "operations": [
            {
              "@odata.type": "microsoft.graph.managedAppOperation"
            }
          ]
        }
      },
      "microsoft.graph.androidManagedAppRegistration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
          },
          {
            "title": "androidManagedAppRegistration",
            "type": "object",
            "description": "Represents the synchronization details of an android app, with management capabilities, for a specific user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastSyncDateTime": "DateTimeOffset (timestamp)",
          "applicationVersion": "String",
          "managementSdkVersion": "String",
          "platformVersion": "String",
          "deviceType": "String",
          "deviceTag": "String",
          "deviceName": "String",
          "flaggedReasons": [
            {
              "@odata.type": "microsoft.graph.managedAppFlaggedReason"
            }
          ],
          "userId": "String",
          "appIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "version": "String",
          "appliedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "intendedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "operations": [
            {
              "@odata.type": "microsoft.graph.managedAppOperation"
            }
          ]
        }
      },
      "microsoft.graph.managedAppStatusRaw": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppStatus"
          },
          {
            "title": "managedAppStatusRaw",
            "type": "object",
            "properties": {
              "content": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Status report content.",
                "nullable": true
              }
            },
            "description": "Represents an un-typed status report about organizations app protection and configuration."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "version": "String",
          "content": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.rolePermission": {
        "title": "rolePermission",
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Allowed Actions"
          },
          "resourceActions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.resourceAction"
                }
              ],
              "nullable": true
            },
            "description": "Actions"
          }
        },
        "example": {
          "actions": [
            "String"
          ],
          "resourceActions": [
            {
              "@odata.type": "microsoft.graph.resourceAction"
            }
          ]
        }
      },
      "microsoft.graph.resourceAction": {
        "title": "resourceAction",
        "type": "object",
        "properties": {
          "allowedResourceActions": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Allowed Actions"
          },
          "notAllowedResourceActions": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Not Allowed Actions"
          }
        },
        "example": {
          "allowedResourceActions": [
            "String"
          ],
          "notAllowedResourceActions": [
            "String"
          ]
        }
      },
      "microsoft.graph.deviceAndAppManagementRoleAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.roleAssignment"
          },
          {
            "title": "deviceAndAppManagementRoleAssignment",
            "type": "object",
            "description": "The Role Assignment resource. Role assignments tie together a role definition with members and scopes. There can be one or more role assignments per role. This applies to custom and built-in roles."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "members": [
            "String"
          ],
          "scopeMembers": [
            "String"
          ],
          "resourceScopes": [
            "String"
          ],
          "roleDefinition": {
            "@odata.type": "microsoft.graph.roleDefinition"
          }
        }
      },
      "microsoft.graph.deviceAndAppManagementRoleDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.roleDefinition"
          },
          {
            "title": "deviceAndAppManagementRoleDefinition",
            "type": "object",
            "description": "The Role Definition resource. The role definition is the foundation of role based access in Intune. The role combines an Intune resource such as a Mobile App and associated role permissions such as Create or Read for the resource. There are two types of roles, built-in and custom. Built-in roles cannot be modified. Both built-in roles and custom roles must have assignments to be enforced. Create custom roles if you want to define a role that allows any of the available resources and role permissions to be combined into a single role."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "permissions": [
            {
              "@odata.type": "microsoft.graph.rolePermission"
            }
          ],
          "rolePermissions": [
            {
              "@odata.type": "microsoft.graph.rolePermission"
            }
          ],
          "isBuiltInRoleDefinition": true,
          "isBuiltIn": true,
          "roleAssignments": [
            {
              "@odata.type": "microsoft.graph.roleAssignment"
            }
          ]
        }
      },
      "microsoft.graph.eBookGroupAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "eBookGroupAssignment",
            "type": "object",
            "properties": {
              "targetGroupId": {
                "type": "string",
                "description": "The Id of the AAD group we are targeting the eBook to."
              },
              "installIntent": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.installIntent"
                  }
                ],
                "description": "The install intent defined by the admin."
              },
              "eBook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedEBook"
                  }
                ],
                "nullable": true
              }
            },
            "description": "Contains properties used to assign a eBook to a group."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetGroupId": "String",
          "installIntent": {
            "@odata.type": "microsoft.graph.installIntent"
          },
          "eBook": {
            "@odata.type": "microsoft.graph.managedEBook"
          }
        }
      },
      "microsoft.graph.managedEBookAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedEBookAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "The assignment target for eBook.",
                "nullable": true
              },
              "installIntent": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.installIntent"
                  }
                ],
                "description": "The install intent for eBook."
              }
            },
            "description": "Contains properties used to assign a eBook to a group."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          },
          "installIntent": {
            "@odata.type": "microsoft.graph.installIntent"
          }
        }
      },
      "microsoft.graph.eBookInstallSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "eBookInstallSummary",
            "type": "object",
            "properties": {
              "installedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Devices that have successfully installed this book.",
                "format": "int32"
              },
              "failedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Devices that have failed to install this book.",
                "format": "int32"
              },
              "notInstalledDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Devices that does not have this book installed.",
                "format": "int32"
              },
              "installedUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Users whose devices have all succeeded to install this book.",
                "format": "int32"
              },
              "failedUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Users that have 1 or more device that failed to install this book.",
                "format": "int32"
              },
              "notInstalledUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Users that did not install this book.",
                "format": "int32"
              }
            },
            "description": "Contains properties for the installation summary of a book for a device."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "installedDeviceCount": "Int32",
          "failedDeviceCount": "Int32",
          "notInstalledDeviceCount": "Int32",
          "installedUserCount": "Int32",
          "failedUserCount": "Int32",
          "notInstalledUserCount": "Int32"
        }
      },
      "microsoft.graph.deviceInstallState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceInstallState",
            "type": "object",
            "properties": {
              "deviceName": {
                "type": "string",
                "description": "Device name.",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "description": "Device Id.",
                "nullable": true
              },
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last sync date and time.",
                "format": "date-time"
              },
              "installState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.installState"
                  }
                ],
                "description": "The install state of the eBook."
              },
              "errorCode": {
                "type": "string",
                "description": "The error code for install failures.",
                "nullable": true
              },
              "osVersion": {
                "type": "string",
                "description": "OS Version.",
                "nullable": true
              },
              "osDescription": {
                "type": "string",
                "description": "OS Description.",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "Device User Name.",
                "nullable": true
              }
            },
            "description": "Contains properties for the installation state for a device."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "deviceName": "String",
          "deviceId": "String",
          "lastSyncDateTime": "DateTimeOffset (timestamp)",
          "installState": {
            "@odata.type": "microsoft.graph.installState"
          },
          "errorCode": "String",
          "osVersion": "String",
          "osDescription": "String",
          "userName": "String"
        }
      },
      "microsoft.graph.userInstallStateSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "userInstallStateSummary",
            "type": "object",
            "properties": {
              "userName": {
                "type": "string",
                "description": "User name.",
                "nullable": true
              },
              "installedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Installed Device Count.",
                "format": "int32"
              },
              "failedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Failed Device Count.",
                "format": "int32"
              },
              "notInstalledDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not installed device count.",
                "format": "int32"
              },
              "deviceStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceInstallState"
                }
              }
            },
            "description": "Contains properties for the installation state summary for a user."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "userName": "String",
          "installedDeviceCount": "Int32",
          "failedDeviceCount": "Int32",
          "notInstalledDeviceCount": "Int32",
          "deviceStates": [
            {
              "@odata.type": "microsoft.graph.deviceInstallState"
            }
          ]
        }
      },
      "microsoft.graph.eBookVppGroupAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.eBookGroupAssignment"
          },
          {
            "title": "eBookVppGroupAssignment",
            "type": "object",
            "properties": {
              "useDeviceLicensing": {
                "type": "boolean",
                "description": "Whether or not to use device licensing."
              }
            },
            "description": "Contains properties used to assign a VPP eBook to a group."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "targetGroupId": "String",
          "installIntent": {
            "@odata.type": "microsoft.graph.installIntent"
          },
          "eBook": {
            "@odata.type": "microsoft.graph.managedEBook"
          },
          "useDeviceLicensing": true
        }
      },
      "microsoft.graph.iosVppEBookAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedEBookAssignment"
          },
          {
            "title": "iosVppEBookAssignment",
            "type": "object",
            "description": "Contains properties used to assign an iOS VPP EBook to a group."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          },
          "installIntent": {
            "@odata.type": "microsoft.graph.installIntent"
          }
        }
      },
      "microsoft.graph.iosVppEBook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedEBook"
          },
          {
            "title": "iosVppEBook",
            "type": "object",
            "properties": {
              "vppTokenId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "The Vpp token ID.",
                "format": "uuid"
              },
              "appleId": {
                "type": "string",
                "description": "The Apple ID associated with Vpp token.",
                "nullable": true
              },
              "vppOrganizationName": {
                "type": "string",
                "description": "The Vpp token's organization name.",
                "nullable": true
              },
              "genres": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Genres."
              },
              "language": {
                "type": "string",
                "description": "Language.",
                "nullable": true
              },
              "seller": {
                "type": "string",
                "description": "Seller.",
                "nullable": true
              },
              "totalLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Total license count.",
                "format": "int32"
              },
              "usedLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Used license count.",
                "format": "int32"
              }
            },
            "description": "A class containing the properties for iOS Vpp eBook."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "publisher": "String",
          "publishedDateTime": "DateTimeOffset (timestamp)",
          "largeCover": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "informationUrl": "String",
          "privacyInformationUrl": "String",
          "groupAssignments": [
            {
              "@odata.type": "microsoft.graph.eBookGroupAssignment"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.managedEBookAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.eBookInstallSummary"
          },
          "deviceStates": [
            {
              "@odata.type": "microsoft.graph.deviceInstallState"
            }
          ],
          "userStateSummary": [
            {
              "@odata.type": "microsoft.graph.userInstallStateSummary"
            }
          ],
          "vppTokenId": "Guid",
          "appleId": "String",
          "vppOrganizationName": "String",
          "genres": [
            "String"
          ],
          "language": "String",
          "seller": "String",
          "totalLicenseCount": "Int32",
          "usedLicenseCount": "Int32"
        }
      },
      "microsoft.graph.outOfBoxExperienceSettings": {
        "title": "outOfBoxExperienceSettings",
        "type": "object",
        "properties": {
          "hidePrivacySettings": {
            "type": "boolean",
            "description": "Show or hide privacy settings to user"
          },
          "hideEULA": {
            "type": "boolean",
            "description": "Show or hide EULA to user"
          },
          "userType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.windowsUserType"
              }
            ],
            "description": "Type of user"
          }
        },
        "example": {
          "hidePrivacySettings": true,
          "hideEULA": true,
          "userType": {
            "@odata.type": "microsoft.graph.windowsUserType"
          }
        }
      },
      "microsoft.graph.activeDirectoryWindowsAutopilotDeploymentProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsAutopilotDeploymentProfile"
          },
          {
            "title": "activeDirectoryWindowsAutopilotDeploymentProfile",
            "type": "object",
            "description": "Windows Auto Pilot Deployment Profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "outOfBoxExperienceSettings": {
            "@odata.type": "microsoft.graph.outOfBoxExperienceSettings"
          },
          "assignedDevices": [
            {
              "@odata.type": "microsoft.graph.windowsAutopilotDeviceIdentity"
            }
          ]
        }
      },
      "microsoft.graph.azureADWindowsAutopilotDeploymentProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsAutopilotDeploymentProfile"
          },
          {
            "title": "azureADWindowsAutopilotDeploymentProfile",
            "type": "object",
            "description": "Windows Auto Pilot Deployment Profile"
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "outOfBoxExperienceSettings": {
            "@odata.type": "microsoft.graph.outOfBoxExperienceSettings"
          },
          "assignedDevices": [
            {
              "@odata.type": "microsoft.graph.windowsAutopilotDeviceIdentity"
            }
          ]
        }
      },
      "microsoft.graph.office365ActivationsUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "office365ActivationsUserDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "userActivationCounts": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.userActivationCounts"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "displayName": "String",
          "userActivationCounts": [
            {
              "@odata.type": "microsoft.graph.userActivationCounts"
            }
          ]
        }
      },
      "microsoft.graph.userActivationCounts": {
        "title": "userActivationCounts",
        "type": "object",
        "properties": {
          "productType": {
            "type": "string",
            "nullable": true
          },
          "lastActivatedDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "windows": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "mac": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "windows10Mobile": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ios": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "android": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "example": {
          "productType": "String",
          "lastActivatedDate": "Date (timestamp)",
          "windows": "Int64",
          "mac": "Int64",
          "windows10Mobile": "Int64",
          "ios": "Int64",
          "android": "Int64"
        }
      },
      "microsoft.graph.office365ActivationCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "office365ActivationCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "productType": {
                "type": "string",
                "nullable": true
              },
              "windows": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "mac": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "android": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "ios": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "windows10Mobile": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "productType": "String",
          "windows": "Int64",
          "mac": "Int64",
          "android": "Int64",
          "ios": "Int64",
          "windows10Mobile": "Int64"
        }
      },
      "microsoft.graph.office365ActivationsUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "office365ActivationsUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "productType": {
                "type": "string",
                "nullable": true
              },
              "assigned": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "activated": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "productType": "String",
          "assigned": "Int64",
          "activated": "Int64"
        }
      },
      "microsoft.graph.office365ActiveUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "office365ActiveUserDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "deletedDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "hasExchangeLicense": {
                "type": "boolean",
                "nullable": true
              },
              "hasOneDriveLicense": {
                "type": "boolean",
                "nullable": true
              },
              "hasSharePointLicense": {
                "type": "boolean",
                "nullable": true
              },
              "hasSkypeForBusinessLicense": {
                "type": "boolean",
                "nullable": true
              },
              "hasYammerLicense": {
                "type": "boolean",
                "nullable": true
              },
              "hasTeamsLicense": {
                "type": "boolean",
                "nullable": true
              },
              "exchangeLastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "oneDriveLastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "sharePointLastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "skypeForBusinessLastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "yammerLastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "teamsLastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "exchangeLicenseAssignDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "oneDriveLicenseAssignDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "sharePointLicenseAssignDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "skypeForBusinessLicenseAssignDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "yammerLicenseAssignDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "teamsLicenseAssignDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "assignedProducts": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "displayName": "String",
          "isDeleted": true,
          "deletedDate": "Date (timestamp)",
          "hasExchangeLicense": true,
          "hasOneDriveLicense": true,
          "hasSharePointLicense": true,
          "hasSkypeForBusinessLicense": true,
          "hasYammerLicense": true,
          "hasTeamsLicense": true,
          "exchangeLastActivityDate": "Date (timestamp)",
          "oneDriveLastActivityDate": "Date (timestamp)",
          "sharePointLastActivityDate": "Date (timestamp)",
          "skypeForBusinessLastActivityDate": "Date (timestamp)",
          "yammerLastActivityDate": "Date (timestamp)",
          "teamsLastActivityDate": "Date (timestamp)",
          "exchangeLicenseAssignDate": "Date (timestamp)",
          "oneDriveLicenseAssignDate": "Date (timestamp)",
          "sharePointLicenseAssignDate": "Date (timestamp)",
          "skypeForBusinessLicenseAssignDate": "Date (timestamp)",
          "yammerLicenseAssignDate": "Date (timestamp)",
          "teamsLicenseAssignDate": "Date (timestamp)",
          "assignedProducts": [
            "String"
          ]
        }
      },
      "microsoft.graph.office365ServicesUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "office365ServicesUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "exchangeActive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "exchangeInactive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "oneDriveActive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "oneDriveInactive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharePointActive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharePointInactive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "skypeForBusinessActive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "skypeForBusinessInactive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "yammerActive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "yammerInactive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "teamsActive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "teamsInactive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "exchangeActive": "Int64",
          "exchangeInactive": "Int64",
          "oneDriveActive": "Int64",
          "oneDriveInactive": "Int64",
          "sharePointActive": "Int64",
          "sharePointInactive": "Int64",
          "skypeForBusinessActive": "Int64",
          "skypeForBusinessInactive": "Int64",
          "yammerActive": "Int64",
          "yammerInactive": "Int64",
          "teamsActive": "Int64",
          "teamsInactive": "Int64",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.office365ActiveUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "office365ActiveUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "office365": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "exchange": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "oneDrive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharePoint": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "skypeForBusiness": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "yammer": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "teams": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "office365": "Int64",
          "exchange": "Int64",
          "oneDrive": "Int64",
          "sharePoint": "Int64",
          "skypeForBusiness": "Int64",
          "yammer": "Int64",
          "teams": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.office365GroupsActivityDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "office365GroupsActivityDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "groupDisplayName": {
                "type": "string",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "ownerPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "groupType": {
                "type": "string",
                "nullable": true
              },
              "memberCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "externalMemberCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "exchangeReceivedEmailCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharePointActiveFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "yammerPostedMessageCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "yammerReadMessageCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "yammerLikedMessageCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "exchangeMailboxTotalItemCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "exchangeMailboxStorageUsedInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharePointTotalFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharePointSiteStorageUsedInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "groupDisplayName": "String",
          "isDeleted": true,
          "ownerPrincipalName": "String",
          "lastActivityDate": "Date (timestamp)",
          "groupType": "String",
          "memberCount": "Int64",
          "externalMemberCount": "Int64",
          "exchangeReceivedEmailCount": "Int64",
          "sharePointActiveFileCount": "Int64",
          "yammerPostedMessageCount": "Int64",
          "yammerReadMessageCount": "Int64",
          "yammerLikedMessageCount": "Int64",
          "exchangeMailboxTotalItemCount": "Int64",
          "exchangeMailboxStorageUsedInBytes": "Int64",
          "sharePointTotalFileCount": "Int64",
          "sharePointSiteStorageUsedInBytes": "Int64",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.office365GroupsActivityCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "office365GroupsActivityCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "exchangeEmailsReceived": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "yammerMessagesPosted": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "yammerMessagesRead": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "yammerMessagesLiked": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "exchangeEmailsReceived": "Int64",
          "yammerMessagesPosted": "Int64",
          "yammerMessagesRead": "Int64",
          "yammerMessagesLiked": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.office365GroupsActivityGroupCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "office365GroupsActivityGroupCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "total": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "active": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "total": "Int64",
          "active": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.office365GroupsActivityStorage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "office365GroupsActivityStorage",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "mailboxStorageUsedInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "siteStorageUsedInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "mailboxStorageUsedInBytes": "Int64",
          "siteStorageUsedInBytes": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.office365GroupsActivityFileCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "office365GroupsActivityFileCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "total": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "active": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "total": "Int64",
          "active": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.emailActivityUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "emailActivityUserDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "deletedDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "sendCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "receiveCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "readCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "assignedProducts": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "displayName": "String",
          "isDeleted": true,
          "deletedDate": "Date (timestamp)",
          "lastActivityDate": "Date (timestamp)",
          "sendCount": "Int64",
          "receiveCount": "Int64",
          "readCount": "Int64",
          "assignedProducts": [
            "String"
          ],
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.emailActivitySummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "emailActivitySummary",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "send": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "receive": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "read": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "send": "Int64",
          "receive": "Int64",
          "read": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.emailAppUsageUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "emailAppUsageUserDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "deletedDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "mailForMac": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "outlookForMac": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "outlookForWindows": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "outlookForMobile": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "otherForMobile": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "outlookForWeb": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "pop3App": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "imap4App": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "smtpApp": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "displayName": "String",
          "isDeleted": true,
          "deletedDate": "Date (timestamp)",
          "lastActivityDate": "Date (timestamp)",
          "mailForMac": [
            "String"
          ],
          "outlookForMac": [
            "String"
          ],
          "outlookForWindows": [
            "String"
          ],
          "outlookForMobile": [
            "String"
          ],
          "otherForMobile": [
            "String"
          ],
          "outlookForWeb": [
            "String"
          ],
          "pop3App": [
            "String"
          ],
          "imap4App": [
            "String"
          ],
          "smtpApp": [
            "String"
          ],
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.emailAppUsageAppsUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "emailAppUsageAppsUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "mailForMac": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "outlookForMac": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "outlookForWindows": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "outlookForMobile": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "otherForMobile": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "outlookForWeb": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "pop3App": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "imap4App": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "smtpApp": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "mailForMac": "Int64",
          "outlookForMac": "Int64",
          "outlookForWindows": "Int64",
          "outlookForMobile": "Int64",
          "otherForMobile": "Int64",
          "outlookForWeb": "Int64",
          "pop3App": "Int64",
          "imap4App": "Int64",
          "smtpApp": "Int64",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.emailAppUsageUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "emailAppUsageUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "mailForMac": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "outlookForMac": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "outlookForWindows": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "outlookForMobile": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "otherForMobile": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "outlookForWeb": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "pop3App": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "imap4App": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "smtpApp": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "mailForMac": "Int64",
          "outlookForMac": "Int64",
          "outlookForWindows": "Int64",
          "outlookForMobile": "Int64",
          "otherForMobile": "Int64",
          "outlookForWeb": "Int64",
          "pop3App": "Int64",
          "imap4App": "Int64",
          "smtpApp": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.emailAppUsageVersionsUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "emailAppUsageVersionsUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "outlook2016": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "outlook2013": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "outlook2010": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "outlook2007": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "undetermined": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "outlook2016": "Int64",
          "outlook2013": "Int64",
          "outlook2010": "Int64",
          "outlook2007": "Int64",
          "undetermined": "Int64",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.mailboxUsageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mailboxUsageDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "deletedDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "createdDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "itemCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "storageUsedInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "issueWarningQuotaInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "prohibitSendQuotaInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "prohibitSendReceiveQuotaInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "displayName": "String",
          "isDeleted": true,
          "deletedDate": "Date (timestamp)",
          "createdDate": "Date (timestamp)",
          "lastActivityDate": "Date (timestamp)",
          "itemCount": "Int64",
          "storageUsedInBytes": "Int64",
          "issueWarningQuotaInBytes": "Int64",
          "prohibitSendQuotaInBytes": "Int64",
          "prohibitSendReceiveQuotaInBytes": "Int64",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.mailboxUsageMailboxCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mailboxUsageMailboxCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "total": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "active": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "total": "Int64",
          "active": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.mailboxUsageQuotaStatusMailboxCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mailboxUsageQuotaStatusMailboxCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "underLimit": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "warningIssued": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sendProhibited": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sendReceiveProhibited": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "indeterminate": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "underLimit": "Int64",
          "warningIssued": "Int64",
          "sendProhibited": "Int64",
          "sendReceiveProhibited": "Int64",
          "indeterminate": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.mailboxUsageStorage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mailboxUsageStorage",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "storageUsedInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "storageUsedInBytes": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.oneDriveActivityUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "oneDriveActivityUserDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "deletedDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "viewedOrEditedFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "syncedFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharedInternallyFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharedExternallyFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "assignedProducts": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "isDeleted": true,
          "deletedDate": "Date (timestamp)",
          "lastActivityDate": "Date (timestamp)",
          "viewedOrEditedFileCount": "Int64",
          "syncedFileCount": "Int64",
          "sharedInternallyFileCount": "Int64",
          "sharedExternallyFileCount": "Int64",
          "assignedProducts": [
            "String"
          ],
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.siteActivitySummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "siteActivitySummary",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "viewedOrEdited": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "synced": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharedInternally": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharedExternally": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "viewedOrEdited": "Int64",
          "synced": "Int64",
          "sharedInternally": "Int64",
          "sharedExternally": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.oneDriveUsageAccountDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "oneDriveUsageAccountDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "siteUrl": {
                "type": "string",
                "nullable": true
              },
              "ownerDisplayName": {
                "type": "string",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "fileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "activeFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "storageUsedInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "storageAllocatedInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "siteUrl": "String",
          "ownerDisplayName": "String",
          "isDeleted": true,
          "lastActivityDate": "Date (timestamp)",
          "fileCount": "Int64",
          "activeFileCount": "Int64",
          "storageUsedInBytes": "Int64",
          "storageAllocatedInBytes": "Int64",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.oneDriveUsageAccountCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "oneDriveUsageAccountCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "siteType": {
                "type": "string",
                "nullable": true
              },
              "total": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "active": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "siteType": "String",
          "total": "Int64",
          "active": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.oneDriveUsageFileCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "oneDriveUsageFileCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "siteType": {
                "type": "string",
                "nullable": true
              },
              "total": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "active": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "siteType": "String",
          "total": "Int64",
          "active": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.siteUsageStorage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "siteUsageStorage",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "siteType": {
                "type": "string",
                "nullable": true
              },
              "storageUsedInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "siteType": "String",
          "storageUsedInBytes": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.sharePointActivityUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "sharePointActivityUserDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "deletedDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "viewedOrEditedFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "syncedFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharedInternallyFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharedExternallyFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "visitedPageCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "assignedProducts": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "isDeleted": true,
          "deletedDate": "Date (timestamp)",
          "lastActivityDate": "Date (timestamp)",
          "viewedOrEditedFileCount": "Int64",
          "syncedFileCount": "Int64",
          "sharedInternallyFileCount": "Int64",
          "sharedExternallyFileCount": "Int64",
          "visitedPageCount": "Int64",
          "assignedProducts": [
            "String"
          ],
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.sharePointActivityUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "sharePointActivityUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "visitedPage": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "viewedOrEdited": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "synced": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharedInternally": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "sharedExternally": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "visitedPage": "Int64",
          "viewedOrEdited": "Int64",
          "synced": "Int64",
          "sharedInternally": "Int64",
          "sharedExternally": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.sharePointActivityPages": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "sharePointActivityPages",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "visitedPageCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "visitedPageCount": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.sharePointSiteUsageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "sharePointSiteUsageDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "siteUrl": {
                "type": "string",
                "nullable": true
              },
              "ownerDisplayName": {
                "type": "string",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "fileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "activeFileCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "pageViewCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "visitedPageCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "storageUsedInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "storageAllocatedInBytes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "rootWebTemplate": {
                "type": "string",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "siteUrl": "String",
          "ownerDisplayName": "String",
          "isDeleted": true,
          "lastActivityDate": "Date (timestamp)",
          "fileCount": "Int64",
          "activeFileCount": "Int64",
          "pageViewCount": "Int64",
          "visitedPageCount": "Int64",
          "storageUsedInBytes": "Int64",
          "storageAllocatedInBytes": "Int64",
          "rootWebTemplate": "String",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.sharePointSiteUsageFileCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "sharePointSiteUsageFileCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "siteType": {
                "type": "string",
                "nullable": true
              },
              "total": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "active": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "siteType": "String",
          "total": "Int64",
          "active": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.sharePointSiteUsageSiteCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "sharePointSiteUsageSiteCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "siteType": {
                "type": "string",
                "nullable": true
              },
              "total": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "active": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "siteType": "String",
          "total": "Int64",
          "active": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.sharePointSiteUsagePages": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "sharePointSiteUsagePages",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "siteType": {
                "type": "string",
                "nullable": true
              },
              "pageViewCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "siteType": "String",
          "pageViewCount": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessActivityUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessActivityUserDetail",
            "type": "object",
            "properties": {
              "totalPeerToPeerSessionCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "totalOrganizedConferenceCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "totalParticipatedConferenceCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "peerToPeerLastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "organizedConferenceLastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "participatedConferenceLastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "peerToPeerIMCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "peerToPeerAudioCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "peerToPeerAudioMinutes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "peerToPeerVideoCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "peerToPeerVideoMinutes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "peerToPeerAppSharingCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "peerToPeerFileTransferCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "organizedConferenceIMCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "organizedConferenceAudioVideoCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "organizedConferenceAudioVideoMinutes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "organizedConferenceAppSharingCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "organizedConferenceWebCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "organizedConferenceDialInOut3rdPartyCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "organizedConferenceCloudDialInOutMicrosoftCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "organizedConferenceCloudDialInMicrosoftMinutes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "organizedConferenceCloudDialOutMicrosoftMinutes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "participatedConferenceIMCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "participatedConferenceAudioVideoCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "participatedConferenceAudioVideoMinutes": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "participatedConferenceAppSharingCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "participatedConferenceWebCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "participatedConferenceDialInOut3rdPartyCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "deletedDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "assignedProducts": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "totalPeerToPeerSessionCount": "Int64",
          "totalOrganizedConferenceCount": "Int64",
          "totalParticipatedConferenceCount": "Int64",
          "peerToPeerLastActivityDate": "Date (timestamp)",
          "organizedConferenceLastActivityDate": "Date (timestamp)",
          "participatedConferenceLastActivityDate": "Date (timestamp)",
          "peerToPeerIMCount": "Int64",
          "peerToPeerAudioCount": "Int64",
          "peerToPeerAudioMinutes": "Int64",
          "peerToPeerVideoCount": "Int64",
          "peerToPeerVideoMinutes": "Int64",
          "peerToPeerAppSharingCount": "Int64",
          "peerToPeerFileTransferCount": "Int64",
          "organizedConferenceIMCount": "Int64",
          "organizedConferenceAudioVideoCount": "Int64",
          "organizedConferenceAudioVideoMinutes": "Int64",
          "organizedConferenceAppSharingCount": "Int64",
          "organizedConferenceWebCount": "Int64",
          "organizedConferenceDialInOut3rdPartyCount": "Int64",
          "organizedConferenceCloudDialInOutMicrosoftCount": "Int64",
          "organizedConferenceCloudDialInMicrosoftMinutes": "Int64",
          "organizedConferenceCloudDialOutMicrosoftMinutes": "Int64",
          "participatedConferenceIMCount": "Int64",
          "participatedConferenceAudioVideoCount": "Int64",
          "participatedConferenceAudioVideoMinutes": "Int64",
          "participatedConferenceAppSharingCount": "Int64",
          "participatedConferenceWebCount": "Int64",
          "participatedConferenceDialInOut3rdPartyCount": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "isDeleted": true,
          "deletedDate": "Date (timestamp)",
          "lastActivityDate": "Date (timestamp)",
          "assignedProducts": [
            "String"
          ],
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessActivityCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessActivityCounts",
            "type": "object",
            "properties": {
              "peerToPeer": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "organized": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "participated": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "peerToPeer": "Int64",
          "organized": "Int64",
          "participated": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessActivityUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessActivityUserCounts",
            "type": "object",
            "properties": {
              "peerToPeer": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "organized": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "participated": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "peerToPeer": "Int64",
          "organized": "Int64",
          "participated": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessPeerToPeerActivityCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessPeerToPeerActivityCounts",
            "type": "object",
            "properties": {
              "im": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "audio": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "video": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "appSharing": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "fileTransfer": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "im": "Int64",
          "audio": "Int64",
          "video": "Int64",
          "appSharing": "Int64",
          "fileTransfer": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessPeerToPeerActivityUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessPeerToPeerActivityUserCounts",
            "type": "object",
            "properties": {
              "im": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "audio": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "video": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "appSharing": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "fileTransfer": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "im": "Int64",
          "audio": "Int64",
          "video": "Int64",
          "appSharing": "Int64",
          "fileTransfer": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessPeerToPeerActivityMinuteCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessPeerToPeerActivityMinuteCounts",
            "type": "object",
            "properties": {
              "audio": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "video": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "audio": "Int64",
          "video": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessOrganizerActivityCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessOrganizerActivityCounts",
            "type": "object",
            "properties": {
              "im": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "audioVideo": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "appSharing": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "web": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "dialInOut3rdParty": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "dialInOutMicrosoft": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "im": "Int64",
          "audioVideo": "Int64",
          "appSharing": "Int64",
          "web": "Int64",
          "dialInOut3rdParty": "Int64",
          "dialInOutMicrosoft": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessOrganizerActivityUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessOrganizerActivityUserCounts",
            "type": "object",
            "properties": {
              "im": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "audioVideo": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "appSharing": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "web": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "dialInOut3rdParty": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "dialInOutMicrosoft": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "im": "Int64",
          "audioVideo": "Int64",
          "appSharing": "Int64",
          "web": "Int64",
          "dialInOut3rdParty": "Int64",
          "dialInOutMicrosoft": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessOrganizerActivityMinuteCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessOrganizerActivityMinuteCounts",
            "type": "object",
            "properties": {
              "audioVideo": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "dialInMicrosoft": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "dialOutMicrosoft": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "audioVideo": "Int64",
          "dialInMicrosoft": "Int64",
          "dialOutMicrosoft": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessParticipantActivityCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessParticipantActivityCounts",
            "type": "object",
            "properties": {
              "im": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "audioVideo": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "appSharing": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "web": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "dialInOut3rdParty": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "im": "Int64",
          "audioVideo": "Int64",
          "appSharing": "Int64",
          "web": "Int64",
          "dialInOut3rdParty": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessParticipantActivityUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessParticipantActivityUserCounts",
            "type": "object",
            "properties": {
              "im": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "audioVideo": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "appSharing": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "web": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "dialInOut3rdParty": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "im": "Int64",
          "audioVideo": "Int64",
          "appSharing": "Int64",
          "web": "Int64",
          "dialInOut3rdParty": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessParticipantActivityMinuteCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessParticipantActivityMinuteCounts",
            "type": "object",
            "properties": {
              "audiovideo": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "audiovideo": "Int64",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessDeviceUsageUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessDeviceUsageUserDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "usedWindows": {
                "type": "boolean",
                "nullable": true
              },
              "usedWindowsPhone": {
                "type": "boolean",
                "nullable": true
              },
              "usedAndroidPhone": {
                "type": "boolean",
                "nullable": true
              },
              "usediPhone": {
                "type": "boolean",
                "nullable": true
              },
              "usediPad": {
                "type": "boolean",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "lastActivityDate": "Date (timestamp)",
          "usedWindows": true,
          "usedWindowsPhone": true,
          "usedAndroidPhone": true,
          "usediPhone": true,
          "usediPad": true,
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessDeviceUsageDistributionUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessDeviceUsageDistributionUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "windows": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "windowsPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "androidPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "iPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "iPad": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "windows": "Int32",
          "windowsPhone": "Int32",
          "androidPhone": "Int32",
          "iPhone": "Int32",
          "iPad": "Int32",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.skypeForBusinessDeviceUsageUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "skypeForBusinessDeviceUsageUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "windows": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "windowsPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "androidPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "iPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "iPad": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "windows": "Int32",
          "windowsPhone": "Int32",
          "androidPhone": "Int32",
          "iPhone": "Int32",
          "iPad": "Int32",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.yammerActivityUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "yammerActivityUserDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "userState": {
                "type": "string",
                "nullable": true
              },
              "stateChangeDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "postedCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "readCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "likedCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "assignedProducts": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "displayName": "String",
          "userState": "String",
          "stateChangeDate": "Date (timestamp)",
          "lastActivityDate": "Date (timestamp)",
          "postedCount": "Int64",
          "readCount": "Int64",
          "likedCount": "Int64",
          "assignedProducts": [
            "String"
          ],
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.yammerActivitySummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "yammerActivitySummary",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "liked": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "posted": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "read": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "liked": "Int64",
          "posted": "Int64",
          "read": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.yammerDeviceUsageUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "yammerDeviceUsageUserDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "userState": {
                "type": "string",
                "nullable": true
              },
              "stateChangeDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "usedWeb": {
                "type": "boolean",
                "nullable": true
              },
              "usedWindowsPhone": {
                "type": "boolean",
                "nullable": true
              },
              "usedAndroidPhone": {
                "type": "boolean",
                "nullable": true
              },
              "usediPhone": {
                "type": "boolean",
                "nullable": true
              },
              "usediPad": {
                "type": "boolean",
                "nullable": true
              },
              "usedOthers": {
                "type": "boolean",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "displayName": "String",
          "userState": "String",
          "stateChangeDate": "Date (timestamp)",
          "lastActivityDate": "Date (timestamp)",
          "usedWeb": true,
          "usedWindowsPhone": true,
          "usedAndroidPhone": true,
          "usediPhone": true,
          "usediPad": true,
          "usedOthers": true,
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.yammerDeviceUsageDistributionUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "yammerDeviceUsageDistributionUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "web": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "windowsPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "androidPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "iPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "iPad": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "other": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "web": "Int32",
          "windowsPhone": "Int32",
          "androidPhone": "Int32",
          "iPhone": "Int32",
          "iPad": "Int32",
          "other": "Int32",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.yammerDeviceUsageUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "yammerDeviceUsageUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "web": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "windowsPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "androidPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "iPhone": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "iPad": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "other": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "web": "Int32",
          "windowsPhone": "Int32",
          "androidPhone": "Int32",
          "iPhone": "Int32",
          "iPad": "Int32",
          "other": "Int32",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.yammerGroupsActivityDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "yammerGroupsActivityDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "groupDisplayName": {
                "type": "string",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "ownerPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "groupType": {
                "type": "string",
                "nullable": true
              },
              "office365Connected": {
                "type": "boolean",
                "nullable": true
              },
              "memberCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "postedCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "readCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "likedCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "groupDisplayName": "String",
          "isDeleted": true,
          "ownerPrincipalName": "String",
          "lastActivityDate": "Date (timestamp)",
          "groupType": "String",
          "office365Connected": true,
          "memberCount": "Int64",
          "postedCount": "Int64",
          "readCount": "Int64",
          "likedCount": "Int64",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.yammerGroupsActivityGroupCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "yammerGroupsActivityGroupCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "total": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "active": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "total": "Int64",
          "active": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.yammerGroupsActivityCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "yammerGroupsActivityCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "liked": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "posted": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "read": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "liked": "Int64",
          "posted": "Int64",
          "read": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.teamsUserActivityUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "teamsUserActivityUserDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "deletedDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "assignedProducts": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "teamChatMessageCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "privateChatMessageCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "callCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "meetingCount": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "hasOtherAction": {
                "type": "boolean",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "lastActivityDate": "Date (timestamp)",
          "isDeleted": true,
          "deletedDate": "Date (timestamp)",
          "assignedProducts": [
            "String"
          ],
          "teamChatMessageCount": "Int64",
          "privateChatMessageCount": "Int64",
          "callCount": "Int64",
          "meetingCount": "Int64",
          "hasOtherAction": true,
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.teamsUserActivityCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "teamsUserActivityCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "teamChatMessages": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "privateChatMessages": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "calls": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "meetings": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "teamChatMessages": "Int64",
          "privateChatMessages": "Int64",
          "calls": "Int64",
          "meetings": "Int64",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.teamsUserActivityUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "teamsUserActivityUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "teamChatMessages": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "privateChatMessages": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "calls": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "meetings": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "otherActions": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "reportDate": "Date (timestamp)",
          "teamChatMessages": "Int64",
          "privateChatMessages": "Int64",
          "calls": "Int64",
          "meetings": "Int64",
          "otherActions": "Int64",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.teamsDeviceUsageUserDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "teamsDeviceUsageUserDetail",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "nullable": true
              },
              "lastActivityDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              },
              "deletedDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "usedWeb": {
                "type": "boolean",
                "nullable": true
              },
              "usedWindowsPhone": {
                "type": "boolean",
                "nullable": true
              },
              "usediOS": {
                "type": "boolean",
                "nullable": true
              },
              "usedMac": {
                "type": "boolean",
                "nullable": true
              },
              "usedAndroidPhone": {
                "type": "boolean",
                "nullable": true
              },
              "usedWindows": {
                "type": "boolean",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "userPrincipalName": "String",
          "lastActivityDate": "Date (timestamp)",
          "isDeleted": true,
          "deletedDate": "Date (timestamp)",
          "usedWeb": true,
          "usedWindowsPhone": true,
          "usediOS": true,
          "usedMac": true,
          "usedAndroidPhone": true,
          "usedWindows": true,
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.teamsDeviceUsageUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "teamsDeviceUsageUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "web": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "windowsPhone": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "androidPhone": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "ios": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "mac": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "windows": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "web": "Int64",
          "windowsPhone": "Int64",
          "androidPhone": "Int64",
          "ios": "Int64",
          "mac": "Int64",
          "windows": "Int64",
          "reportDate": "Date (timestamp)",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.teamsDeviceUsageDistributionUserCounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "teamsDeviceUsageDistributionUserCounts",
            "type": "object",
            "properties": {
              "reportRefreshDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "web": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "windowsPhone": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "androidPhone": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "ios": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "mac": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "windows": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reportPeriod": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "reportRefreshDate": "Date (timestamp)",
          "web": "Int64",
          "windowsPhone": "Int64",
          "androidPhone": "Int64",
          "ios": "Int64",
          "mac": "Int64",
          "windows": "Int64",
          "reportPeriod": "String"
        }
      },
      "microsoft.graph.PayloadRequest": {
        "title": "PayloadRequest",
        "type": "object"
      },
      "microsoft.graph.payloadResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "payloadResponse",
            "type": "object"
          }
        ],
        "example": {
          "id": "String (identifier)"
        }
      },
      "microsoft.graph.teamMemberSettings": {
        "title": "teamMemberSettings",
        "type": "object",
        "properties": {
          "allowCreateUpdateChannels": {
            "type": "boolean",
            "nullable": true
          },
          "allowDeleteChannels": {
            "type": "boolean",
            "nullable": true
          },
          "allowAddRemoveApps": {
            "type": "boolean",
            "nullable": true
          },
          "allowCreateUpdateRemoveTabs": {
            "type": "boolean",
            "nullable": true
          },
          "allowCreateUpdateRemoveConnectors": {
            "type": "boolean",
            "nullable": true
          }
        },
        "example": {
          "allowCreateUpdateChannels": true,
          "allowDeleteChannels": true,
          "allowAddRemoveApps": true,
          "allowCreateUpdateRemoveTabs": true,
          "allowCreateUpdateRemoveConnectors": true
        }
      },
      "microsoft.graph.teamMessagingSettings": {
        "title": "teamMessagingSettings",
        "type": "object",
        "properties": {
          "allowUserEditMessages": {
            "type": "boolean",
            "nullable": true
          },
          "allowUserDeleteMessages": {
            "type": "boolean",
            "nullable": true
          },
          "allowOwnerDeleteMessages": {
            "type": "boolean",
            "nullable": true
          },
          "allowTeamMentions": {
            "type": "boolean",
            "nullable": true
          },
          "allowChannelMentions": {
            "type": "boolean",
            "nullable": true
          }
        },
        "example": {
          "allowUserEditMessages": true,
          "allowUserDeleteMessages": true,
          "allowOwnerDeleteMessages": true,
          "allowTeamMentions": true,
          "allowChannelMentions": true
        }
      },
      "microsoft.graph.teamFunSettings": {
        "title": "teamFunSettings",
        "type": "object",
        "properties": {
          "allowGiphy": {
            "type": "boolean",
            "nullable": true
          },
          "giphyContentRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.giphyRatingType"
              }
            ],
            "nullable": true
          },
          "allowStickersAndMemes": {
            "type": "boolean",
            "nullable": true
          },
          "allowCustomMemes": {
            "type": "boolean",
            "nullable": true
          }
        },
        "example": {
          "allowGiphy": true,
          "giphyContentRating": {
            "@odata.type": "microsoft.graph.giphyRatingType"
          },
          "allowStickersAndMemes": true,
          "allowCustomMemes": true
        }
      },
      "microsoft.graph.teamGuestSettings": {
        "title": "teamGuestSettings",
        "type": "object",
        "properties": {
          "allowCreateUpdateChannels": {
            "type": "boolean",
            "nullable": true
          },
          "allowDeleteChannels": {
            "type": "boolean",
            "nullable": true
          }
        },
        "example": {
          "allowCreateUpdateChannels": true,
          "allowDeleteChannels": true
        }
      },
      "microsoft.graph.chatThread": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "chatThread",
            "type": "object",
            "properties": {
              "chatMessages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                }
              },
              "rootMessage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "chatMessages": [
            {
              "@odata.type": "microsoft.graph.chatMessage"
            }
          ],
          "rootMessage": {
            "@odata.type": "microsoft.graph.chatMessage"
          }
        }
      },
      "microsoft.graph.chatMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "chatMessage",
            "type": "object",
            "properties": {
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "nullable": true
              },
              "inReplyTo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                  }
                ],
                "nullable": true
              },
              "replies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                }
              },
              "from": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "inReplyTo": {
            "@odata.type": "microsoft.graph.chatMessage"
          },
          "replies": [
            {
              "@odata.type": "microsoft.graph.chatMessage"
            }
          ],
          "from": {
            "@odata.type": "microsoft.graph.user"
          }
        }
      },
      "microsoft.graph.IdentityProvider": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "IdentityProvider",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "clientId": {
                "type": "string",
                "nullable": true
              },
              "clientSecret": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "type": "String",
          "name": "String",
          "clientId": "String",
          "clientSecret": "String"
        }
      },
      "microsoft.graph.synchronizationSecretKeyStringValuePair": {
        "title": "synchronizationSecretKeyStringValuePair",
        "type": "object",
        "properties": {
          "key": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.synchronizationSecret"
              }
            ]
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "key": {
            "@odata.type": "microsoft.graph.synchronizationSecret"
          },
          "value": "String"
        }
      },
      "microsoft.graph.synchronizationJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "synchronizationJob",
            "type": "object",
            "properties": {
              "templateId": {
                "type": "string",
                "nullable": true
              },
              "schedule": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.synchronizationSchedule"
                  }
                ],
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.synchronizationStatus"
                  }
                ],
                "nullable": true
              },
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.synchronizationSchema"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "templateId": "String",
          "schedule": {
            "@odata.type": "microsoft.graph.synchronizationSchedule"
          },
          "status": {
            "@odata.type": "microsoft.graph.synchronizationStatus"
          },
          "schema": {
            "@odata.type": "microsoft.graph.synchronizationSchema"
          }
        }
      },
      "microsoft.graph.synchronizationTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "synchronizationTemplate",
            "type": "object",
            "properties": {
              "applicationId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "format": "uuid"
              },
              "default": {
                "type": "boolean"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "discoverable": {
                "type": "boolean"
              },
              "factoryTag": {
                "type": "string",
                "nullable": true
              },
              "metadata": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.metadataEntry"
                    }
                  ],
                  "nullable": true
                }
              },
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.synchronizationSchema"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "applicationId": "Guid",
          "default": true,
          "description": "String",
          "discoverable": true,
          "factoryTag": "String",
          "metadata": [
            {
              "@odata.type": "microsoft.graph.metadataEntry"
            }
          ],
          "schema": {
            "@odata.type": "microsoft.graph.synchronizationSchema"
          }
        }
      },
      "microsoft.graph.metadataEntry": {
        "title": "metadataEntry",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "key": "String",
          "value": "String"
        }
      },
      "microsoft.graph.synchronizationSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "synchronizationSchema",
            "type": "object",
            "properties": {
              "directories": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.directoryDefinition"
                    }
                  ],
                  "nullable": true
                }
              },
              "synchronizationRules": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.synchronizationRule"
                    }
                  ],
                  "nullable": true
                }
              },
              "version": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "directories": [
            {
              "@odata.type": "microsoft.graph.directoryDefinition"
            }
          ],
          "synchronizationRules": [
            {
              "@odata.type": "microsoft.graph.synchronizationRule"
            }
          ],
          "version": "String"
        }
      },
      "microsoft.graph.synchronizationSchedule": {
        "title": "synchronizationSchedule",
        "type": "object",
        "properties": {
          "expiration": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "interval": {
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string",
            "format": "duration"
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.synchronizationScheduleState"
              }
            ]
          }
        },
        "example": {
          "expiration": "DateTimeOffset (timestamp)",
          "interval": "Duration",
          "state": {
            "@odata.type": "microsoft.graph.synchronizationScheduleState"
          }
        }
      },
      "microsoft.graph.synchronizationStatus": {
        "title": "synchronizationStatus",
        "type": "object",
        "properties": {
          "countSuccessiveCompleteFailures": {
            "type": "integer",
            "format": "int64"
          },
          "escrowsPruned": {
            "type": "boolean"
          },
          "synchronizedEntryCountByType": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.stringKeyLongValuePair"
                }
              ],
              "nullable": true
            }
          },
          "code": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.synchronizationStatusCode"
              }
            ]
          },
          "lastExecution": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.synchronizationTaskExecution"
              }
            ],
            "nullable": true
          },
          "lastSuccessfulExecution": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.synchronizationTaskExecution"
              }
            ],
            "nullable": true
          },
          "lastSuccessfulExecutionWithExports": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.synchronizationTaskExecution"
              }
            ],
            "nullable": true
          },
          "steadyStateFirstAchievedTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "steadyStateLastAchievedTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "quarantine": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.synchronizationQuarantine"
              }
            ],
            "nullable": true
          },
          "troubleshootingUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "countSuccessiveCompleteFailures": "Int64",
          "escrowsPruned": true,
          "synchronizedEntryCountByType": [
            {
              "@odata.type": "microsoft.graph.stringKeyLongValuePair"
            }
          ],
          "code": {
            "@odata.type": "microsoft.graph.synchronizationStatusCode"
          },
          "lastExecution": {
            "@odata.type": "microsoft.graph.synchronizationTaskExecution"
          },
          "lastSuccessfulExecution": {
            "@odata.type": "microsoft.graph.synchronizationTaskExecution"
          },
          "lastSuccessfulExecutionWithExports": {
            "@odata.type": "microsoft.graph.synchronizationTaskExecution"
          },
          "steadyStateFirstAchievedTime": "DateTimeOffset (timestamp)",
          "steadyStateLastAchievedTime": "DateTimeOffset (timestamp)",
          "quarantine": {
            "@odata.type": "microsoft.graph.synchronizationQuarantine"
          },
          "troubleshootingUrl": "String"
        }
      },
      "microsoft.graph.stringKeyLongValuePair": {
        "title": "stringKeyLongValuePair",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int64"
          }
        },
        "example": {
          "key": "String",
          "value": "Int64"
        }
      },
      "microsoft.graph.synchronizationTaskExecution": {
        "title": "synchronizationTaskExecution",
        "type": "object",
        "properties": {
          "activityIdentifier": {
            "type": "string",
            "nullable": true
          },
          "countEntitled": {
            "type": "integer",
            "format": "int64"
          },
          "countEntitledForProvisioning": {
            "type": "integer",
            "format": "int64"
          },
          "countEscrowed": {
            "type": "integer",
            "format": "int64"
          },
          "countEscrowedRaw": {
            "type": "integer",
            "format": "int64"
          },
          "countExported": {
            "type": "integer",
            "format": "int64"
          },
          "countExports": {
            "type": "integer",
            "format": "int64"
          },
          "countImported": {
            "type": "integer",
            "format": "int64"
          },
          "countImportedDeltas": {
            "type": "integer",
            "format": "int64"
          },
          "countImportedReferenceDeltas": {
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.synchronizationTaskExecutionResult"
              }
            ]
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.synchronizationError"
              }
            ],
            "nullable": true
          },
          "timeBegan": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "timeEnded": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "activityIdentifier": "String",
          "countEntitled": "Int64",
          "countEntitledForProvisioning": "Int64",
          "countEscrowed": "Int64",
          "countEscrowedRaw": "Int64",
          "countExported": "Int64",
          "countExports": "Int64",
          "countImported": "Int64",
          "countImportedDeltas": "Int64",
          "countImportedReferenceDeltas": "Int64",
          "state": {
            "@odata.type": "microsoft.graph.synchronizationTaskExecutionResult"
          },
          "error": {
            "@odata.type": "microsoft.graph.synchronizationError"
          },
          "timeBegan": "DateTimeOffset (timestamp)",
          "timeEnded": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.synchronizationError": {
        "title": "synchronizationError",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "tenantActionable": {
            "type": "boolean"
          }
        },
        "example": {
          "code": "String",
          "message": "String",
          "tenantActionable": true
        }
      },
      "microsoft.graph.synchronizationQuarantine": {
        "title": "synchronizationQuarantine",
        "type": "object",
        "properties": {
          "currentBegan": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "nextAttempt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.quarantineReason"
              }
            ]
          },
          "seriesBegan": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "seriesCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "example": {
          "currentBegan": "DateTimeOffset (timestamp)",
          "nextAttempt": "DateTimeOffset (timestamp)",
          "reason": {
            "@odata.type": "microsoft.graph.quarantineReason"
          },
          "seriesBegan": "DateTimeOffset (timestamp)",
          "seriesCount": "Int64"
        }
      },
      "microsoft.graph.synchronizationJobRestartCriteria": {
        "title": "synchronizationJobRestartCriteria",
        "type": "object",
        "properties": {
          "resetScope": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.synchronizationJobRestartScope"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "resetScope": {
            "@odata.type": "microsoft.graph.synchronizationJobRestartScope"
          }
        }
      },
      "microsoft.graph.directoryDefinition": {
        "title": "directoryDefinition",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objects": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.objectDefinition"
                }
              ],
              "nullable": true
            }
          }
        },
        "example": {
          "id": "String",
          "name": "String",
          "objects": [
            {
              "@odata.type": "microsoft.graph.objectDefinition"
            }
          ]
        }
      },
      "microsoft.graph.objectDefinition": {
        "title": "objectDefinition",
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.attributeDefinition"
                }
              ],
              "nullable": true
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.metadataEntry"
                }
              ],
              "nullable": true
            }
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "attributes": [
            {
              "@odata.type": "microsoft.graph.attributeDefinition"
            }
          ],
          "metadata": [
            {
              "@odata.type": "microsoft.graph.metadataEntry"
            }
          ],
          "name": "String"
        }
      },
      "microsoft.graph.attributeDefinition": {
        "title": "attributeDefinition",
        "type": "object",
        "properties": {
          "anchor": {
            "type": "boolean"
          },
          "caseExact": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.metadataEntry"
                }
              ],
              "nullable": true
            }
          },
          "multivalued": {
            "type": "boolean"
          },
          "mutability": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mutability"
              }
            ]
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "referencedObjects": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.referencedObject"
                }
              ],
              "nullable": true
            }
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.attributeType"
              }
            ]
          }
        },
        "example": {
          "anchor": true,
          "caseExact": true,
          "defaultValue": "String",
          "metadata": [
            {
              "@odata.type": "microsoft.graph.metadataEntry"
            }
          ],
          "multivalued": true,
          "mutability": {
            "@odata.type": "microsoft.graph.mutability"
          },
          "name": "String",
          "required": true,
          "referencedObjects": [
            {
              "@odata.type": "microsoft.graph.referencedObject"
            }
          ],
          "type": {
            "@odata.type": "microsoft.graph.attributeType"
          }
        }
      },
      "microsoft.graph.referencedObject": {
        "title": "referencedObject",
        "type": "object",
        "properties": {
          "referencedObjectName": {
            "type": "string",
            "nullable": true
          },
          "referencedProperty": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "referencedObjectName": "String",
          "referencedProperty": "String"
        }
      },
      "microsoft.graph.synchronizationRule": {
        "title": "synchronizationRule",
        "type": "object",
        "properties": {
          "editable": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.stringKeyStringValuePair"
                }
              ],
              "nullable": true
            }
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectMappings": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.objectMapping"
                }
              ],
              "nullable": true
            }
          },
          "priority": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "sourceDirectoryName": {
            "type": "string",
            "nullable": true
          },
          "targetDirectoryName": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "editable": true,
          "id": "String",
          "metadata": [
            {
              "@odata.type": "microsoft.graph.stringKeyStringValuePair"
            }
          ],
          "name": "String",
          "objectMappings": [
            {
              "@odata.type": "microsoft.graph.objectMapping"
            }
          ],
          "priority": "Int32",
          "sourceDirectoryName": "String",
          "targetDirectoryName": "String"
        }
      },
      "microsoft.graph.stringKeyStringValuePair": {
        "title": "stringKeyStringValuePair",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "key": "String",
          "value": "String"
        }
      },
      "microsoft.graph.objectMapping": {
        "title": "objectMapping",
        "type": "object",
        "properties": {
          "attributeMappings": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.attributeMapping"
                }
              ],
              "nullable": true
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "flowTypes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.objectFlowTypes"
              }
            ]
          },
          "metadata": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.metadataEntry"
                }
              ],
              "nullable": true
            }
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.filter"
              }
            ],
            "nullable": true
          },
          "sourceObjectName": {
            "type": "string",
            "nullable": true
          },
          "targetObjectName": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "attributeMappings": [
            {
              "@odata.type": "microsoft.graph.attributeMapping"
            }
          ],
          "enabled": true,
          "flowTypes": {
            "@odata.type": "microsoft.graph.objectFlowTypes"
          },
          "metadata": [
            {
              "@odata.type": "microsoft.graph.metadataEntry"
            }
          ],
          "name": "String",
          "scope": {
            "@odata.type": "microsoft.graph.filter"
          },
          "sourceObjectName": "String",
          "targetObjectName": "String"
        }
      },
      "microsoft.graph.attributeMapping": {
        "title": "attributeMapping",
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "exportMissingReferences": {
            "type": "boolean"
          },
          "flowBehavior": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.attributeFlowBehavior"
              }
            ]
          },
          "flowType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.attributeFlowType"
              }
            ]
          },
          "matchingPriority": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.attributeMappingSource"
              }
            ],
            "nullable": true
          },
          "targetAttributeName": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "defaultValue": "String",
          "exportMissingReferences": true,
          "flowBehavior": {
            "@odata.type": "microsoft.graph.attributeFlowBehavior"
          },
          "flowType": {
            "@odata.type": "microsoft.graph.attributeFlowType"
          },
          "matchingPriority": "Int32",
          "source": {
            "@odata.type": "microsoft.graph.attributeMappingSource"
          },
          "targetAttributeName": "String"
        }
      },
      "microsoft.graph.attributeMappingSource": {
        "title": "attributeMappingSource",
        "type": "object",
        "properties": {
          "expression": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.stringKeyAttributeMappingSourceValuePair"
                }
              ],
              "nullable": true
            }
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.attributeMappingSourceType"
              }
            ]
          }
        },
        "example": {
          "expression": "String",
          "name": "String",
          "parameters": [
            {
              "@odata.type": "microsoft.graph.stringKeyAttributeMappingSourceValuePair"
            }
          ],
          "type": {
            "@odata.type": "microsoft.graph.attributeMappingSourceType"
          }
        }
      },
      "microsoft.graph.stringKeyAttributeMappingSourceValuePair": {
        "title": "stringKeyAttributeMappingSourceValuePair",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.attributeMappingSource"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "key": "String",
          "value": {
            "@odata.type": "microsoft.graph.attributeMappingSource"
          }
        }
      },
      "microsoft.graph.filter": {
        "title": "filter",
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.filterGroup"
                }
              ],
              "nullable": true
            }
          },
          "inputFilterGroups": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.filterGroup"
                }
              ],
              "nullable": true
            }
          },
          "categoryFilterGroups": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.filterGroup"
                }
              ],
              "nullable": true
            }
          }
        },
        "example": {
          "groups": [
            {
              "@odata.type": "microsoft.graph.filterGroup"
            }
          ],
          "inputFilterGroups": [
            {
              "@odata.type": "microsoft.graph.filterGroup"
            }
          ],
          "categoryFilterGroups": [
            {
              "@odata.type": "microsoft.graph.filterGroup"
            }
          ]
        }
      },
      "microsoft.graph.filterGroup": {
        "title": "filterGroup",
        "type": "object",
        "properties": {
          "clauses": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.filterClause"
                }
              ],
              "nullable": true
            }
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "clauses": [
            {
              "@odata.type": "microsoft.graph.filterClause"
            }
          ],
          "name": "String"
        }
      },
      "microsoft.graph.filterClause": {
        "title": "filterClause",
        "type": "object",
        "properties": {
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "sourceOperandName": {
            "type": "string",
            "nullable": true
          },
          "targetOperand": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.filterOperand"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "operatorName": "String",
          "sourceOperandName": "String",
          "targetOperand": {
            "@odata.type": "microsoft.graph.filterOperand"
          }
        }
      },
      "microsoft.graph.filterOperand": {
        "title": "filterOperand",
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          }
        },
        "example": {
          "values": [
            "String"
          ]
        }
      },
      "microsoft.graph.attributeMappingFunctionSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "attributeMappingFunctionSchema",
            "type": "object",
            "properties": {
              "parameters": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.attributeMappingParameterSchema"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "parameters": [
            {
              "@odata.type": "microsoft.graph.attributeMappingParameterSchema"
            }
          ]
        }
      },
      "microsoft.graph.attributeMappingParameterSchema": {
        "title": "attributeMappingParameterSchema",
        "type": "object",
        "properties": {
          "allowMultipleOccurrences": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.attributeType"
              }
            ]
          }
        },
        "example": {
          "allowMultipleOccurrences": true,
          "name": "String",
          "required": true,
          "type": {
            "@odata.type": "microsoft.graph.attributeType"
          }
        }
      },
      "microsoft.graph.filterOperatorSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "filterOperatorSchema",
            "type": "object",
            "properties": {
              "arity": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.scopeOperatorType"
                  }
                ]
              },
              "multivaluedComparisonType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.scopeOperatorMultiValuedComparisonType"
                  }
                ]
              },
              "supportedAttributeTypes": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.attributeType"
                    }
                  ]
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "arity": {
            "@odata.type": "microsoft.graph.scopeOperatorType"
          },
          "multivaluedComparisonType": {
            "@odata.type": "microsoft.graph.scopeOperatorMultiValuedComparisonType"
          },
          "supportedAttributeTypes": [
            {
              "@odata.type": "microsoft.graph.attributeType"
            }
          ]
        }
      },
      "microsoft.graph.expressionInputObject": {
        "title": "expressionInputObject",
        "type": "object",
        "properties": {
          "definition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.objectDefinition"
              }
            ],
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.stringKeyObjectValuePair"
                }
              ],
              "nullable": true
            }
          }
        },
        "example": {
          "definition": {
            "@odata.type": "microsoft.graph.objectDefinition"
          },
          "properties": [
            {
              "@odata.type": "microsoft.graph.stringKeyObjectValuePair"
            }
          ]
        }
      },
      "microsoft.graph.stringKeyObjectValuePair": {
        "title": "stringKeyObjectValuePair",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "key": "String"
        }
      },
      "microsoft.graph.parseExpressionResponse": {
        "title": "parseExpressionResponse",
        "type": "object",
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.publicError"
              }
            ],
            "nullable": true
          },
          "evaluationSucceeded": {
            "type": "boolean"
          },
          "evaluationResult": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "parsedExpression": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.attributeMappingSource"
              }
            ],
            "nullable": true
          },
          "parsingSucceeded": {
            "type": "boolean"
          }
        },
        "example": {
          "error": {
            "@odata.type": "microsoft.graph.publicError"
          },
          "evaluationSucceeded": true,
          "evaluationResult": [
            "String"
          ],
          "parsedExpression": {
            "@odata.type": "microsoft.graph.attributeMappingSource"
          },
          "parsingSucceeded": true
        }
      },
      "microsoft.graph.publicError": {
        "title": "publicError",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.publicErrorDetail"
                }
              ],
              "nullable": true
            }
          },
          "innerError": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.publicInnerError"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "code": "String",
          "message": "String",
          "target": "String",
          "details": [
            {
              "@odata.type": "microsoft.graph.publicErrorDetail"
            }
          ],
          "innerError": {
            "@odata.type": "microsoft.graph.publicInnerError"
          }
        }
      },
      "microsoft.graph.publicErrorDetail": {
        "title": "publicErrorDetail",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "code": "String",
          "message": "String",
          "target": "String"
        }
      },
      "microsoft.graph.publicInnerError": {
        "title": "publicInnerError",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.publicErrorDetail"
                }
              ],
              "nullable": true
            }
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "code": "String",
          "details": [
            {
              "@odata.type": "microsoft.graph.publicErrorDetail"
            }
          ],
          "message": "String",
          "target": "String"
        }
      },
      "microsoft.graph.publicErrorResponse": {
        "title": "publicErrorResponse",
        "type": "object",
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.publicError"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "error": {
            "@odata.type": "microsoft.graph.publicError"
          }
        }
      },
      "microsoft.graph.educationRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationRoot",
            "type": "object",
            "properties": {
              "synchronizationProfiles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationProfile"
                }
              },
              "classes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationClass"
                }
              },
              "schools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSchool"
                }
              },
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationUser"
                }
              },
              "me": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationUser"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "synchronizationProfiles": [
            {
              "@odata.type": "microsoft.graph.educationSynchronizationProfile"
            }
          ],
          "classes": [
            {
              "@odata.type": "microsoft.graph.educationClass"
            }
          ],
          "schools": [
            {
              "@odata.type": "microsoft.graph.educationSchool"
            }
          ],
          "users": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ],
          "me": {
            "@odata.type": "microsoft.graph.educationUser"
          }
        }
      },
      "microsoft.graph.educationSynchronizationProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationSynchronizationProfile",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string"
              },
              "dataProvider": {
                "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationDataProvider"
              },
              "identitySynchronizationConfiguration": {
                "$ref": "#/components/schemas/microsoft.graph.educationIdentitySynchronizationConfiguration"
              },
              "licensesToAssign": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationLicenseAssignment"
                    }
                  ],
                  "nullable": true
                }
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationProfileState"
                  }
                ],
                "nullable": true
              },
              "handleSpecialCharacterConstraint": {
                "type": "boolean",
                "nullable": true
              },
              "termStartDate": {
                "type": "string",
                "nullable": true
              },
              "termEndDate": {
                "type": "string",
                "nullable": true
              },
              "dateFormat": {
                "type": "string",
                "nullable": true
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationError"
                }
              },
              "profileStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationProfileStatus"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "dataProvider": {
            "@odata.type": "microsoft.graph.educationSynchronizationDataProvider"
          },
          "identitySynchronizationConfiguration": {
            "@odata.type": "microsoft.graph.educationIdentitySynchronizationConfiguration"
          },
          "licensesToAssign": [
            {
              "@odata.type": "microsoft.graph.educationSynchronizationLicenseAssignment"
            }
          ],
          "state": {
            "@odata.type": "microsoft.graph.educationSynchronizationProfileState"
          },
          "handleSpecialCharacterConstraint": true,
          "termStartDate": "String",
          "termEndDate": "String",
          "dateFormat": "String",
          "errors": [
            {
              "@odata.type": "microsoft.graph.educationSynchronizationError"
            }
          ],
          "profileStatus": {
            "@odata.type": "microsoft.graph.educationSynchronizationProfileStatus"
          }
        }
      },
      "microsoft.graph.educationClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationClass",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Name of the class."
              },
              "mailNickname": {
                "type": "string",
                "description": "Mail name for sending email to all members, if this is enabled."
              },
              "description": {
                "type": "string",
                "description": "Description of the class.",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Entity who created the class",
                "nullable": true
              },
              "classCode": {
                "type": "string",
                "description": "Class code used by the school to identify the class.",
                "nullable": true
              },
              "externalName": {
                "type": "string",
                "description": "Name of the class in the syncing system.",
                "nullable": true
              },
              "externalId": {
                "type": "string",
                "description": "ID of the class from the syncing system.",
                "nullable": true
              },
              "externalSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationExternalSource"
                  }
                ],
                "description": "How this class was created. Possible values are: sis, manual, unknownFutureValue.",
                "nullable": true
              },
              "term": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationTerm"
                  }
                ],
                "description": "Term for this class.",
                "nullable": true
              },
              "schools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSchool"
                }
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationUser"
                }
              },
              "teachers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationUser"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationAssignment"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "mailNickname": "String",
          "description": "String",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "classCode": "String",
          "externalName": "String",
          "externalId": "String",
          "externalSource": {
            "@odata.type": "microsoft.graph.educationExternalSource"
          },
          "term": {
            "@odata.type": "microsoft.graph.educationTerm"
          },
          "schools": [
            {
              "@odata.type": "microsoft.graph.educationSchool"
            }
          ],
          "members": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ],
          "teachers": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.educationAssignment"
            }
          ]
        }
      },
      "microsoft.graph.educationOrganization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationOrganization",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Organization display name."
              },
              "description": {
                "type": "string",
                "description": "Organization description.",
                "nullable": true
              },
              "externalSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationExternalSource"
                  }
                ],
                "description": "Source where this organization was created from. Possible values are: sis, manual, unknownFutureValue.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "externalSource": {
            "@odata.type": "microsoft.graph.educationExternalSource"
          }
        }
      },
      "microsoft.graph.educationSchool": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationOrganization"
          },
          {
            "title": "educationSchool",
            "type": "object",
            "properties": {
              "principalEmail": {
                "type": "string",
                "description": "Email address of the principal.",
                "nullable": true
              },
              "principalName": {
                "type": "string",
                "description": "Name of the principal.",
                "nullable": true
              },
              "externalPrincipalId": {
                "type": "string",
                "description": "ID of principal in syncing system.",
                "nullable": true
              },
              "lowestGrade": {
                "type": "string",
                "description": "Lowest grade taught.",
                "nullable": true
              },
              "highestGrade": {
                "type": "string",
                "description": "Highest grade taught.",
                "nullable": true
              },
              "schoolNumber": {
                "type": "string",
                "description": "School Number.",
                "nullable": true
              },
              "externalId": {
                "type": "string",
                "description": "ID of school in syncing system.",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "description": "Phone number of school.",
                "nullable": true
              },
              "fax": {
                "type": "string",
                "description": "Fax number of school.",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Entity who created the school.",
                "nullable": true
              },
              "address": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "description": "Address of the school.",
                "nullable": true
              },
              "classes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationClass"
                }
              },
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationUser"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "displayName": "String",
          "description": "String",
          "externalSource": {
            "@odata.type": "microsoft.graph.educationExternalSource"
          },
          "principalEmail": "String",
          "principalName": "String",
          "externalPrincipalId": "String",
          "lowestGrade": "String",
          "highestGrade": "String",
          "schoolNumber": "String",
          "externalId": "String",
          "phone": "String",
          "fax": "String",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "address": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "classes": [
            {
              "@odata.type": "microsoft.graph.educationClass"
            }
          ],
          "users": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ]
        }
      },
      "microsoft.graph.educationUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationUser",
            "type": "object",
            "properties": {
              "primaryRole": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationUserRole"
                  }
                ],
                "description": "Default role for a user. The user's role might be different in an individual class. Possible values are: student, teacher, unknownFutureValue. Supports $filter."
              },
              "middleName": {
                "type": "string",
                "description": "The middle name of user.",
                "nullable": true
              },
              "externalSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationExternalSource"
                  }
                ],
                "description": "Where this user was created from. Possible values are: sis, manual, unkownFutureValue.",
                "nullable": true
              },
              "residenceAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "description": "Address where user lives.",
                "nullable": true
              },
              "mailingAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "description": "Mail address of user.",
                "nullable": true
              },
              "student": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationStudent"
                  }
                ],
                "description": "If the primary role is student, this block will contain student specific data.",
                "nullable": true
              },
              "teacher": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationTeacher"
                  }
                ],
                "description": "If the primary role is teacher, this block will conatin teacher specific data.",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Entity who created the user.",
                "nullable": true
              },
              "accountEnabled": {
                "type": "boolean",
                "description": "True if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter.",
                "nullable": true
              },
              "assignedLicenses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                },
                "description": "The licenses that are assigned to the user. Not nullable."
              },
              "assignedPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.assignedPlan"
                },
                "description": "The plans that are assigned to the user. Read-only. Not nullable."
              },
              "businessPhones": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The telephone numbers for the user. Note: Although this is a string collection, only one number can be set for this property."
              },
              "department": {
                "type": "string",
                "description": "The name for the department in which the user works. Supports $filter.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial, and last name. This property is required when a user is created and it cannot be cleared during updates. Supports $filter and $orderby.",
                "nullable": true
              },
              "givenName": {
                "type": "string",
                "description": "The given name (first name) of the user. Supports $filter.",
                "nullable": true
              },
              "mail": {
                "type": "string",
                "description": "The SMTP address for the user; for example, 'jeff@contoso.onmicrosoft.com'. Read-Only. Supports $filter.",
                "nullable": true
              },
              "mailNickname": {
                "type": "string",
                "description": "The mail alias for the user. This property must be specified when a user is created. Supports $filter.",
                "nullable": true
              },
              "mobilePhone": {
                "type": "string",
                "description": "The primary cellular telephone number for the user.",
                "nullable": true
              },
              "passwordPolicies": {
                "type": "string",
                "description": "Specifies password policies for the user. This value is an enumeration with one possible value being 'DisableStrongPassword', which allows weaker passwords than the default policy to be specified. 'DisablePasswordExpiration' can also be specified. The two can be specified together; for example: 'DisablePasswordExpiration, DisableStrongPassword'.",
                "nullable": true
              },
              "passwordProfile": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.passwordProfile"
                  }
                ],
                "description": "Specifies the password profile for the user. The profile contains the user’s password. This property is required when a user is created. The password in the profile must satisfy minimum requirements as specified by the passwordPolicies property. By default, a strong password is required.",
                "nullable": true
              },
              "officeLocation": {
                "type": "string",
                "nullable": true
              },
              "preferredLanguage": {
                "type": "string",
                "description": "The preferred language for the user. Should follow ISO 639-1 Code; for example, 'en-US'.",
                "nullable": true
              },
              "provisionedPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.provisionedPlan"
                },
                "description": "The plans that are provisioned for the user. Read-only. Not nullable."
              },
              "refreshTokensValidFromDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "showInAddressList": {
                "type": "boolean",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "description": "The user's surname (family name or last name). Supports $filter.",
                "nullable": true
              },
              "usageLocation": {
                "type": "string",
                "description": "A two-letter country code (ISO standard 3166). Required for users who will be assigned licenses due to a legal requirement to check for availability of services in countries or regions. Examples include: 'US', 'JP', and 'GB'. Not nullable. Supports $filter.",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant’s collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization. Supports $filter and $orderby.",
                "nullable": true
              },
              "userType": {
                "type": "string",
                "description": "A string value that can be used to classify user types in your directory, such as 'Member' and 'Guest'. Supports $filter.",
                "nullable": true
              },
              "schools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSchool"
                }
              },
              "classes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationClass"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationAssignment"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "primaryRole": {
            "@odata.type": "microsoft.graph.educationUserRole"
          },
          "middleName": "String",
          "externalSource": {
            "@odata.type": "microsoft.graph.educationExternalSource"
          },
          "residenceAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "mailingAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "student": {
            "@odata.type": "microsoft.graph.educationStudent"
          },
          "teacher": {
            "@odata.type": "microsoft.graph.educationTeacher"
          },
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "accountEnabled": true,
          "assignedLicenses": [
            {
              "@odata.type": "microsoft.graph.assignedLicense"
            }
          ],
          "assignedPlans": [
            {
              "@odata.type": "microsoft.graph.assignedPlan"
            }
          ],
          "businessPhones": [
            "String"
          ],
          "department": "String",
          "displayName": "String",
          "givenName": "String",
          "mail": "String",
          "mailNickname": "String",
          "mobilePhone": "String",
          "passwordPolicies": "String",
          "passwordProfile": {
            "@odata.type": "microsoft.graph.passwordProfile"
          },
          "officeLocation": "String",
          "preferredLanguage": "String",
          "provisionedPlans": [
            {
              "@odata.type": "microsoft.graph.provisionedPlan"
            }
          ],
          "refreshTokensValidFromDateTime": "DateTimeOffset (timestamp)",
          "showInAddressList": true,
          "surname": "String",
          "usageLocation": "String",
          "userPrincipalName": "String",
          "userType": "String",
          "schools": [
            {
              "@odata.type": "microsoft.graph.educationSchool"
            }
          ],
          "classes": [
            {
              "@odata.type": "microsoft.graph.educationClass"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.educationAssignment"
            }
          ]
        }
      },
      "microsoft.graph.educationSynchronizationDataProvider": {
        "title": "educationSynchronizationDataProvider",
        "type": "object"
      },
      "microsoft.graph.educationIdentitySynchronizationConfiguration": {
        "title": "educationIdentitySynchronizationConfiguration",
        "type": "object"
      },
      "microsoft.graph.educationSynchronizationLicenseAssignment": {
        "title": "educationSynchronizationLicenseAssignment",
        "type": "object",
        "properties": {
          "appliesTo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.educationUserRole"
              }
            ],
            "nullable": true
          },
          "skuIds": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          }
        },
        "example": {
          "appliesTo": {
            "@odata.type": "microsoft.graph.educationUserRole"
          },
          "skuIds": [
            "String"
          ]
        }
      },
      "microsoft.graph.educationSynchronizationError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationSynchronizationError",
            "type": "object",
            "properties": {
              "entryType": {
                "type": "string",
                "nullable": true
              },
              "errorCode": {
                "type": "string",
                "nullable": true
              },
              "errorMessage": {
                "type": "string",
                "nullable": true
              },
              "joiningValue": {
                "type": "string",
                "nullable": true
              },
              "recordedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "reportableIdentifier": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "entryType": "String",
          "errorCode": "String",
          "errorMessage": "String",
          "joiningValue": "String",
          "recordedDateTime": "DateTimeOffset (timestamp)",
          "reportableIdentifier": "String"
        }
      },
      "microsoft.graph.educationSynchronizationProfileStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationSynchronizationProfileStatus",
            "type": "object",
            "properties": {
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationStatus"
                  }
                ],
                "nullable": true
              },
              "lastSynchronizationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "status": {
            "@odata.type": "microsoft.graph.educationSynchronizationStatus"
          },
          "lastSynchronizationDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.educationFileSynchronizationVerificationMessage": {
        "title": "educationFileSynchronizationVerificationMessage",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "type": "String",
          "fileName": "String",
          "description": "String"
        }
      },
      "microsoft.graph.educationSynchronizationCustomizationsBase": {
        "title": "educationSynchronizationCustomizationsBase",
        "type": "object"
      },
      "microsoft.graph.educationSynchronizationCustomization": {
        "title": "educationSynchronizationCustomization",
        "type": "object",
        "properties": {
          "optionalPropertiesToSync": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "synchronizationStartDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isSyncDeferred": {
            "type": "boolean",
            "nullable": true
          },
          "allowDisplayNameUpdate": {
            "type": "boolean",
            "nullable": true
          }
        },
        "example": {
          "optionalPropertiesToSync": [
            "String"
          ],
          "synchronizationStartDate": "DateTimeOffset (timestamp)",
          "isSyncDeferred": true,
          "allowDisplayNameUpdate": true
        }
      },
      "microsoft.graph.educationSynchronizationCustomizations": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationCustomizationsBase"
          },
          {
            "title": "educationSynchronizationCustomizations",
            "type": "object",
            "properties": {
              "school": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationCustomization"
                  }
                ],
                "nullable": true
              },
              "section": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationCustomization"
                  }
                ],
                "nullable": true
              },
              "student": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationCustomization"
                  }
                ],
                "nullable": true
              },
              "teacher": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationCustomization"
                  }
                ],
                "nullable": true
              },
              "studentEnrollment": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationCustomization"
                  }
                ],
                "nullable": true
              },
              "teacherRoster": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationCustomization"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "school": {
            "@odata.type": "microsoft.graph.educationSynchronizationCustomization"
          },
          "section": {
            "@odata.type": "microsoft.graph.educationSynchronizationCustomization"
          },
          "student": {
            "@odata.type": "microsoft.graph.educationSynchronizationCustomization"
          },
          "teacher": {
            "@odata.type": "microsoft.graph.educationSynchronizationCustomization"
          },
          "studentEnrollment": {
            "@odata.type": "microsoft.graph.educationSynchronizationCustomization"
          },
          "teacherRoster": {
            "@odata.type": "microsoft.graph.educationSynchronizationCustomization"
          }
        }
      },
      "microsoft.graph.educationPowerSchoolDataProvider": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationDataProvider"
          },
          {
            "title": "educationPowerSchoolDataProvider",
            "type": "object",
            "properties": {
              "connectionUrl": {
                "type": "string"
              },
              "clientId": {
                "type": "string"
              },
              "clientSecret": {
                "type": "string",
                "nullable": true
              },
              "schoolsIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "schoolYear": {
                "type": "string",
                "nullable": true
              },
              "allowTeachersInMultipleSchools": {
                "type": "boolean",
                "nullable": true
              },
              "customizations": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationCustomizations"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "connectionUrl": "String",
          "clientId": "String",
          "clientSecret": "String",
          "schoolsIds": [
            "String"
          ],
          "schoolYear": "String",
          "allowTeachersInMultipleSchools": true,
          "customizations": {
            "@odata.type": "microsoft.graph.educationSynchronizationCustomizations"
          }
        }
      },
      "microsoft.graph.educationCsvDataProvider": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationDataProvider"
          },
          {
            "title": "educationCsvDataProvider",
            "type": "object",
            "properties": {
              "customizations": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationCustomizations"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "customizations": {
            "@odata.type": "microsoft.graph.educationSynchronizationCustomizations"
          }
        }
      },
      "microsoft.graph.educationOneRosterApiDataProvider": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationDataProvider"
          },
          {
            "title": "educationOneRosterApiDataProvider",
            "type": "object",
            "properties": {
              "connectionUrl": {
                "type": "string"
              },
              "clientId": {
                "type": "string"
              },
              "clientSecret": {
                "type": "string",
                "nullable": true
              },
              "customizations": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSynchronizationCustomizations"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "connectionUrl": "String",
          "clientId": "String",
          "clientSecret": "String",
          "customizations": {
            "@odata.type": "microsoft.graph.educationSynchronizationCustomizations"
          }
        }
      },
      "microsoft.graph.educationIdentityMatchingConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationIdentitySynchronizationConfiguration"
          },
          {
            "title": "educationIdentityMatchingConfiguration",
            "type": "object",
            "properties": {
              "matchingOptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationIdentityMatchingOptions"
                }
              }
            }
          }
        ],
        "example": {
          "matchingOptions": [
            {
              "@odata.type": "microsoft.graph.educationIdentityMatchingOptions"
            }
          ]
        }
      },
      "microsoft.graph.educationIdentityMatchingOptions": {
        "title": "educationIdentityMatchingOptions",
        "type": "object",
        "properties": {
          "appliesTo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.educationUserRole"
              }
            ]
          },
          "sourcePropertyName": {
            "type": "string"
          },
          "targetPropertyName": {
            "type": "string"
          },
          "targetDomain": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "appliesTo": {
            "@odata.type": "microsoft.graph.educationUserRole"
          },
          "sourcePropertyName": "String",
          "targetPropertyName": "String",
          "targetDomain": "String"
        }
      },
      "microsoft.graph.educationIdentityDomain": {
        "title": "educationIdentityDomain",
        "type": "object",
        "properties": {
          "appliesTo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.educationUserRole"
              }
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "appliesTo": {
            "@odata.type": "microsoft.graph.educationUserRole"
          },
          "name": "String"
        }
      },
      "microsoft.graph.educationIdentityCreationConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationIdentitySynchronizationConfiguration"
          },
          {
            "title": "educationIdentityCreationConfiguration",
            "type": "object",
            "properties": {
              "userDomains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationIdentityDomain"
                }
              }
            }
          }
        ],
        "example": {
          "userDomains": [
            {
              "@odata.type": "microsoft.graph.educationIdentityDomain"
            }
          ]
        }
      },
      "microsoft.graph.educationStudent": {
        "title": "educationStudent",
        "type": "object",
        "properties": {
          "graduationYear": {
            "type": "string",
            "description": "Year the student is graduating from the school.",
            "nullable": true
          },
          "grade": {
            "type": "string",
            "description": "Current grade level of the student.",
            "nullable": true
          },
          "birthDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "Birth date of the student.",
            "format": "date",
            "nullable": true
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.educationGender"
              }
            ],
            "description": "Possible values are: female, male, other, unknownFutureValue.",
            "nullable": true
          },
          "studentNumber": {
            "type": "string",
            "description": "Student Number.",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "ID of the student in the source system.",
            "nullable": true
          }
        },
        "example": {
          "graduationYear": "String",
          "grade": "String",
          "birthDate": "Date (timestamp)",
          "gender": {
            "@odata.type": "microsoft.graph.educationGender"
          },
          "studentNumber": "String",
          "externalId": "String"
        }
      },
      "microsoft.graph.educationTeacher": {
        "title": "educationTeacher",
        "type": "object",
        "properties": {
          "teacherNumber": {
            "type": "string",
            "description": "Teacher number.",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "ID of the teacher in the source system.",
            "nullable": true
          }
        },
        "example": {
          "teacherNumber": "String",
          "externalId": "String"
        }
      },
      "microsoft.graph.educationAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationAssignment",
            "type": "object",
            "properties": {
              "classId": {
                "type": "string",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "nullable": true
              },
              "instructions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationItemBody"
                  }
                ],
                "nullable": true
              },
              "dueDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "assignDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "assignedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "grading": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationAssignmentGradeType"
                  }
                ],
                "nullable": true
              },
              "assignTo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationAssignmentRecipient"
                  }
                ],
                "nullable": true
              },
              "allowLateSubmissions": {
                "type": "boolean",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "allowStudentsToAddResourcesToSubmission": {
                "type": "boolean",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationAssignmentStatus"
                  }
                ],
                "nullable": true
              },
              "resources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationAssignmentResource"
                }
              },
              "submissions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSubmission"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "classId": "String",
          "displayName": "String",
          "instructions": {
            "@odata.type": "microsoft.graph.educationItemBody"
          },
          "dueDateTime": "DateTimeOffset (timestamp)",
          "assignDateTime": "DateTimeOffset (timestamp)",
          "assignedDateTime": "DateTimeOffset (timestamp)",
          "grading": {
            "@odata.type": "microsoft.graph.educationAssignmentGradeType"
          },
          "assignTo": {
            "@odata.type": "microsoft.graph.educationAssignmentRecipient"
          },
          "allowLateSubmissions": true,
          "createdDateTime": "DateTimeOffset (timestamp)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "allowStudentsToAddResourcesToSubmission": true,
          "status": {
            "@odata.type": "microsoft.graph.educationAssignmentStatus"
          },
          "resources": [
            {
              "@odata.type": "microsoft.graph.educationAssignmentResource"
            }
          ],
          "submissions": [
            {
              "@odata.type": "microsoft.graph.educationSubmission"
            }
          ]
        }
      },
      "microsoft.graph.educationTerm": {
        "title": "educationTerm",
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "ID of term in the syncing system.",
            "nullable": true
          },
          "startDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "Start of the term.",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "End of the term.",
            "format": "date",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "Display name of the term.",
            "nullable": true
          }
        },
        "example": {
          "externalId": "String",
          "startDate": "Date (timestamp)",
          "endDate": "Date (timestamp)",
          "displayName": "String"
        }
      },
      "microsoft.graph.educationItemBody": {
        "title": "educationItemBody",
        "type": "object",
        "properties": {
          "contentType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.bodyType"
              }
            ],
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "contentType": {
            "@odata.type": "microsoft.graph.bodyType"
          },
          "content": "String"
        }
      },
      "microsoft.graph.educationAssignmentGradeType": {
        "title": "educationAssignmentGradeType",
        "type": "object"
      },
      "microsoft.graph.educationAssignmentPointsGradeType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationAssignmentGradeType"
          },
          {
            "title": "educationAssignmentPointsGradeType",
            "type": "object",
            "properties": {
              "maxPoints": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "format": "float",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "maxPoints": "Single"
        }
      },
      "microsoft.graph.educationAssignmentGrade": {
        "title": "educationAssignmentGrade",
        "type": "object",
        "properties": {
          "gradedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          },
          "gradedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "gradedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "gradedDateTime": "DateTimeOffset (timestamp)"
        }
      },
      "microsoft.graph.educationAssignmentPointsGrade": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationAssignmentGrade"
          },
          {
            "title": "educationAssignmentPointsGrade",
            "type": "object",
            "properties": {
              "points": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "format": "float",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "gradedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "gradedDateTime": "DateTimeOffset (timestamp)",
          "points": "Single"
        }
      },
      "microsoft.graph.educationAssignmentRecipient": {
        "title": "educationAssignmentRecipient",
        "type": "object"
      },
      "microsoft.graph.educationAssignmentResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationAssignmentResource",
            "type": "object",
            "properties": {
              "distributeForStudentWork": {
                "type": "boolean",
                "nullable": true
              },
              "resource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationResource"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "distributeForStudentWork": true,
          "resource": {
            "@odata.type": "microsoft.graph.educationResource"
          }
        }
      },
      "microsoft.graph.educationSubmission": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationSubmission",
            "type": "object",
            "properties": {
              "recipient": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSubmissionRecipient"
                  }
                ],
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationSubmissionStatus"
                  }
                ],
                "nullable": true
              },
              "submittedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "submittedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "releasedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "nullable": true
              },
              "releasedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "grade": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationAssignmentGrade"
                  }
                ],
                "nullable": true
              },
              "feedback": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationFeedback"
                  }
                ],
                "nullable": true
              },
              "resourcesFolderUrl": {
                "type": "string",
                "nullable": true
              },
              "resources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSubmissionResource"
                }
              },
              "submittedResources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSubmissionResource"
                }
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "recipient": {
            "@odata.type": "microsoft.graph.educationSubmissionRecipient"
          },
          "status": {
            "@odata.type": "microsoft.graph.educationSubmissionStatus"
          },
          "submittedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "submittedDateTime": "DateTimeOffset (timestamp)",
          "releasedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "releasedDateTime": "DateTimeOffset (timestamp)",
          "grade": {
            "@odata.type": "microsoft.graph.educationAssignmentGrade"
          },
          "feedback": {
            "@odata.type": "microsoft.graph.educationFeedback"
          },
          "resourcesFolderUrl": "String",
          "resources": [
            {
              "@odata.type": "microsoft.graph.educationSubmissionResource"
            }
          ],
          "submittedResources": [
            {
              "@odata.type": "microsoft.graph.educationSubmissionResource"
            }
          ]
        }
      },
      "microsoft.graph.educationAssignmentClassRecipient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationAssignmentRecipient"
          },
          {
            "title": "educationAssignmentClassRecipient",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.educationAssignmentGroupRecipient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationAssignmentRecipient"
          },
          {
            "title": "educationAssignmentGroupRecipient",
            "type": "object"
          }
        ]
      },
      "microsoft.graph.educationResource": {
        "title": "educationResource",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "createdDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "displayName": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          }
        }
      },
      "microsoft.graph.educationSubmissionResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationSubmissionResource",
            "type": "object",
            "properties": {
              "resource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationResource"
                  }
                ],
                "nullable": true
              },
              "assignmentResourceUrl": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "String (identifier)",
          "resource": {
            "@odata.type": "microsoft.graph.educationResource"
          },
          "assignmentResourceUrl": "String"
        }
      },
      "microsoft.graph.educationWordResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationResource"
          },
          {
            "title": "educationWordResource",
            "type": "object",
            "properties": {
              "fileUrl": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "fileUrl": "String"
        }
      },
      "microsoft.graph.educationPowerPointResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationResource"
          },
          {
            "title": "educationPowerPointResource",
            "type": "object",
            "properties": {
              "fileUrl": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "fileUrl": "String"
        }
      },
      "microsoft.graph.educationExcelResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationResource"
          },
          {
            "title": "educationExcelResource",
            "type": "object",
            "properties": {
              "fileUrl": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "fileUrl": "String"
        }
      },
      "microsoft.graph.educationOneNoteResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationResource"
          },
          {
            "title": "educationOneNoteResource",
            "type": "object",
            "properties": {
              "sectionName": {
                "type": "string",
                "nullable": true
              },
              "pageUrl": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "sectionName": "String",
          "pageUrl": "String"
        }
      },
      "microsoft.graph.educationFileResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationResource"
          },
          {
            "title": "educationFileResource",
            "type": "object",
            "properties": {
              "fileUrl": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "fileUrl": "String"
        }
      },
      "microsoft.graph.educationLinkResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationResource"
          },
          {
            "title": "educationLinkResource",
            "type": "object",
            "properties": {
              "link": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "displayName": "String",
          "createdDateTime": "DateTimeOffset (timestamp)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "DateTimeOffset (timestamp)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "link": "String"
        }
      },
      "microsoft.graph.educationSubmissionRecipient": {
        "title": "educationSubmissionRecipient",
        "type": "object"
      },
      "microsoft.graph.educationSubmissionIndividualRecipient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationSubmissionRecipient"
          },
          {
            "title": "educationSubmissionIndividualRecipient",
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "userId": "String"
        }
      },
      "microsoft.graph.educationFeedback": {
        "title": "educationFeedback",
        "type": "object",
        "properties": {
          "text": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.educationItemBody"
              }
            ],
            "nullable": true
          },
          "feedbackDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "feedbackBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "text": {
            "@odata.type": "microsoft.graph.educationItemBody"
          },
          "feedbackDateTime": "DateTimeOffset (timestamp)",
          "feedbackBy": {
            "@odata.type": "microsoft.graph.identitySet"
          }
        }
      },
      "microsoft.graph.auditActor": {
        "title": "auditActor",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Actor Type.",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "List of user permissions when the audit was performed."
          },
          "userPermissions": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "List of user permissions when the audit was performed."
          },
          "applicationId": {
            "type": "string",
            "description": "AAD Application Id.",
            "nullable": true
          },
          "applicationDisplayName": {
            "type": "string",
            "description": "Name of the Application.",
            "nullable": true
          },
          "userPrincipalName": {
            "type": "string",
            "description": "User Principal Name (UPN).",
            "nullable": true
          },
          "servicePrincipalName": {
            "type": "string",
            "description": "Service Principal Name (SPN).",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "description": "IPAddress.",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "User Id.",
            "nullable": true
          }
        },
        "example": {
          "type": "String",
          "permissions": [
            "String"
          ],
          "userPermissions": [
            "String"
          ],
          "applicationId": "String",
          "applicationDisplayName": "String",
          "userPrincipalName": "String",
          "servicePrincipalName": "String",
          "ipAddress": "String",
          "userId": "String"
        }
      },
      "microsoft.graph.auditResource": {
        "title": "auditResource",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name.",
            "nullable": true
          },
          "modifiedProperties": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.auditProperty"
                }
              ],
              "nullable": true
            },
            "description": "List of modified properties."
          },
          "type": {
            "type": "string",
            "description": "Audit resource's type.",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "description": "Audit resource's Id.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "String",
          "modifiedProperties": [
            {
              "@odata.type": "microsoft.graph.auditProperty"
            }
          ],
          "type": "String",
          "resourceId": "String"
        }
      },
      "microsoft.graph.auditProperty": {
        "title": "auditProperty",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name.",
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "description": "Old value.",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "description": "New value.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "String",
          "oldValue": "String",
          "newValue": "String"
        }
      },
      "microsoft.graph.enrollmentTroubleshootingEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent"
          },
          {
            "title": "enrollmentTroubleshootingEvent",
            "type": "object",
            "properties": {
              "managedDeviceIdentifier": {
                "type": "string",
                "description": "Device identifier created or collected by Intune.",
                "nullable": true
              },
              "operatingSystem": {
                "type": "string",
                "description": "Operating System.",
                "nullable": true
              },
              "osVersion": {
                "type": "string",
                "description": "OS Version.",
                "nullable": true
              },
              "userId": {
                "type": "string",
                "description": "Identifier for the user that tried to enroll the device.",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "description": "Azure AD device identifier.",
                "nullable": true
              },
              "enrollmentType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentType"
                  }
                ],
                "description": "Type of the enrollment."
              },
              "failureCategory": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentFailureReason"
                  }
                ],
                "description": "Highlevel failure category."
              },
              "failureReason": {
                "type": "string",
                "description": "Detailed failure reason.",
                "nullable": true
              }
            },
            "description": "Event representing an enrollment failure."
          }
        ],
        "example": {
          "id": "String (identifier)",
          "eventDateTime": "DateTimeOffset (timestamp)",
          "correlationId": "String",
          "managedDeviceIdentifier": "String",
          "operatingSystem": "String",
          "osVersion": "String",
          "userId": "String",
          "deviceId": "String",
          "enrollmentType": {
            "@odata.type": "microsoft.graph.deviceEnrollmentType"
          },
          "failureCategory": {
            "@odata.type": "microsoft.graph.deviceEnrollmentFailureReason"
          },
          "failureReason": "String"
        }
      },
      "microsoft.graph.status": {
        "title": "status",
        "enum": [
          "active",
          "updated",
          "deleted",
          "ignored"
        ],
        "type": "string"
      },
      "microsoft.graph.dayOfWeek": {
        "title": "dayOfWeek",
        "enum": [
          "sunday",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday"
        ],
        "type": "string"
      },
      "microsoft.graph.automaticRepliesStatus": {
        "title": "automaticRepliesStatus",
        "enum": [
          "disabled",
          "alwaysEnabled",
          "scheduled"
        ],
        "type": "string"
      },
      "microsoft.graph.externalAudienceScope": {
        "title": "externalAudienceScope",
        "enum": [
          "none",
          "contactsOnly",
          "all"
        ],
        "type": "string"
      },
      "microsoft.graph.attendeeType": {
        "title": "attendeeType",
        "enum": [
          "required",
          "optional",
          "resource"
        ],
        "type": "string"
      },
      "microsoft.graph.freeBusyStatus": {
        "title": "freeBusyStatus",
        "enum": [
          "free",
          "tentative",
          "busy",
          "oof",
          "workingElsewhere",
          "unknown"
        ],
        "type": "string"
      },
      "microsoft.graph.physicalAddressType": {
        "title": "physicalAddressType",
        "enum": [
          "unknown",
          "home",
          "business",
          "other"
        ],
        "type": "string"
      },
      "microsoft.graph.locationType": {
        "title": "locationType",
        "enum": [
          "default",
          "conferenceRoom",
          "homeAddress",
          "businessAddress",
          "geoCoordinates",
          "streetAddress",
          "hotel",
          "restaurant",
          "localBusiness",
          "postalAddress"
        ],
        "type": "string"
      },
      "microsoft.graph.locationUniqueIdType": {
        "title": "locationUniqueIdType",
        "enum": [
          "unknown",
          "locationStore",
          "directory",
          "private",
          "bing"
        ],
        "type": "string"
      },
      "microsoft.graph.activityDomain": {
        "title": "activityDomain",
        "enum": [
          "unknown",
          "work",
          "personal",
          "unrestricted"
        ],
        "type": "string"
      },
      "microsoft.graph.recipientScopeType": {
        "title": "recipientScopeType",
        "enum": [
          "none",
          "internal",
          "external",
          "externalPartner",
          "externalNonPartner"
        ],
        "type": "string"
      },
      "microsoft.graph.mailTipsType": {
        "title": "mailTipsType",
        "enum": [
          "automaticReplies",
          "mailboxFullStatus",
          "customMailTip",
          "externalMemberCount",
          "totalMemberCount",
          "maxMessageSize",
          "deliveryRestriction",
          "moderationStatus",
          "recipientScope",
          "recipientSuggestions"
        ],
        "type": "string"
      },
      "microsoft.graph.timeZoneStandard": {
        "title": "timeZoneStandard",
        "enum": [
          "windows",
          "iana"
        ],
        "type": "string"
      },
      "microsoft.graph.bodyType": {
        "title": "bodyType",
        "enum": [
          "text",
          "html"
        ],
        "type": "string"
      },
      "microsoft.graph.importance": {
        "title": "importance",
        "enum": [
          "low",
          "normal",
          "high"
        ],
        "type": "string"
      },
      "microsoft.graph.inferenceClassificationType": {
        "title": "inferenceClassificationType",
        "enum": [
          "focused",
          "other"
        ],
        "type": "string"
      },
      "microsoft.graph.followupFlagStatus": {
        "title": "followupFlagStatus",
        "enum": [
          "notFlagged",
          "complete",
          "flagged"
        ],
        "type": "string"
      },
      "microsoft.graph.calendarColor": {
        "title": "calendarColor",
        "enum": [
          "lightBlue",
          "lightGreen",
          "lightOrange",
          "lightGray",
          "lightYellow",
          "lightTeal",
          "lightPink",
          "lightBrown",
          "lightRed",
          "maxColor",
          "auto"
        ],
        "type": "string"
      },
      "microsoft.graph.responseType": {
        "title": "responseType",
        "enum": [
          "none",
          "organizer",
          "tentativelyAccepted",
          "accepted",
          "declined",
          "notResponded"
        ],
        "type": "string"
      },
      "microsoft.graph.sensitivity": {
        "title": "sensitivity",
        "enum": [
          "normal",
          "personal",
          "private",
          "confidential"
        ],
        "type": "string"
      },
      "microsoft.graph.recurrencePatternType": {
        "title": "recurrencePatternType",
        "enum": [
          "daily",
          "weekly",
          "absoluteMonthly",
          "relativeMonthly",
          "absoluteYearly",
          "relativeYearly"
        ],
        "type": "string"
      },
      "microsoft.graph.weekIndex": {
        "title": "weekIndex",
        "enum": [
          "first",
          "second",
          "third",
          "fourth",
          "last"
        ],
        "type": "string"
      },
      "microsoft.graph.recurrenceRangeType": {
        "title": "recurrenceRangeType",
        "enum": [
          "endDate",
          "noEnd",
          "numbered"
        ],
        "type": "string"
      },
      "microsoft.graph.eventType": {
        "title": "eventType",
        "enum": [
          "singleInstance",
          "occurrence",
          "exception",
          "seriesMaster"
        ],
        "type": "string"
      },
      "microsoft.graph.phoneType": {
        "title": "phoneType",
        "enum": [
          "home",
          "business",
          "mobile",
          "other",
          "assistant",
          "homeFax",
          "businessFax",
          "otherFax",
          "pager",
          "radio"
        ],
        "type": "string"
      },
      "microsoft.graph.websiteType": {
        "title": "websiteType",
        "enum": [
          "other",
          "home",
          "work",
          "blog",
          "profile"
        ],
        "type": "string"
      },
      "microsoft.graph.meetingMessageType": {
        "title": "meetingMessageType",
        "enum": [
          "none",
          "meetingRequest",
          "meetingCancelled",
          "meetingAccepted",
          "meetingTentativelyAccepted",
          "meetingDeclined"
        ],
        "type": "string"
      },
      "microsoft.graph.messageActionFlag": {
        "title": "messageActionFlag",
        "enum": [
          "any",
          "call",
          "doNotForward",
          "followUp",
          "fyi",
          "forward",
          "noResponseNecessary",
          "read",
          "reply",
          "replyToAll",
          "review"
        ],
        "type": "string"
      },
      "microsoft.graph.referenceAttachmentProvider": {
        "title": "referenceAttachmentProvider",
        "enum": [
          "other",
          "oneDriveBusiness",
          "oneDriveConsumer",
          "dropbox"
        ],
        "type": "string"
      },
      "microsoft.graph.referenceAttachmentPermission": {
        "title": "referenceAttachmentPermission",
        "enum": [
          "other",
          "view",
          "edit",
          "anonymousView",
          "anonymousEdit",
          "organizationView",
          "organizationEdit"
        ],
        "type": "string"
      },
      "microsoft.graph.groupAccessType": {
        "title": "groupAccessType",
        "enum": [
          "none",
          "private",
          "secret",
          "public"
        ],
        "type": "string"
      },
      "microsoft.graph.categoryColor": {
        "title": "categoryColor",
        "enum": [
          "preset0",
          "preset1",
          "preset2",
          "preset3",
          "preset4",
          "preset5",
          "preset6",
          "preset7",
          "preset8",
          "preset9",
          "preset10",
          "preset11",
          "preset12",
          "preset13",
          "preset14",
          "preset15",
          "preset16",
          "preset17",
          "preset18",
          "preset19",
          "preset20",
          "preset21",
          "preset22",
          "preset23",
          "preset24",
          "none"
        ],
        "type": "string"
      },
      "microsoft.graph.taskStatus": {
        "title": "taskStatus",
        "enum": [
          "notStarted",
          "inProgress",
          "completed",
          "waitingOnOthers",
          "deferred"
        ],
        "type": "string"
      },
      "microsoft.graph.plannerPreviewType": {
        "title": "plannerPreviewType",
        "enum": [
          "automatic",
          "noPreview",
          "checklist",
          "description",
          "reference"
        ],
        "type": "string"
      },
      "microsoft.graph.operationStatus": {
        "title": "operationStatus",
        "enum": [
          "NotStarted",
          "Running",
          "Completed",
          "Failed"
        ],
        "type": "string"
      },
      "microsoft.graph.onenotePatchInsertPosition": {
        "title": "onenotePatchInsertPosition",
        "enum": [
          "After",
          "Before"
        ],
        "type": "string"
      },
      "microsoft.graph.onenotePatchActionType": {
        "title": "onenotePatchActionType",
        "enum": [
          "Replace",
          "Append",
          "Delete",
          "Insert",
          "Prepend"
        ],
        "type": "string"
      },
      "microsoft.graph.onenoteSourceService": {
        "title": "onenoteSourceService",
        "enum": [
          "Unknown",
          "OneDrive",
          "OneDriveForBusiness",
          "OnPremOneDriveForBusiness"
        ],
        "type": "string"
      },
      "microsoft.graph.onenoteUserRole": {
        "title": "onenoteUserRole",
        "enum": [
          "Owner",
          "Contributor",
          "Reader",
          "None"
        ],
        "type": "string"
      },
      "microsoft.graph.riskEventStatus": {
        "title": "riskEventStatus",
        "enum": [
          "active",
          "remediated",
          "dismissedAsFixed",
          "dismissedAsFalsePositive",
          "dismissedAsIgnore",
          "loginBlocked",
          "closedMfaAuto",
          "closedMultipleReasons"
        ],
        "type": "string"
      },
      "microsoft.graph.riskLevel": {
        "title": "riskLevel",
        "enum": [
          "low",
          "medium",
          "high"
        ],
        "type": "string"
      },
      "microsoft.graph.userRiskLevel": {
        "title": "userRiskLevel",
        "enum": [
          "unknown",
          "none",
          "low",
          "medium",
          "high"
        ],
        "type": "string"
      },
      "microsoft.graph.approvalState": {
        "title": "approvalState",
        "enum": [
          "pending",
          "approved",
          "denied",
          "aborted",
          "canceled"
        ],
        "type": "string"
      },
      "microsoft.graph.roleSummaryStatus": {
        "title": "roleSummaryStatus",
        "enum": [
          "ok",
          "bad"
        ],
        "type": "string"
      },
      "microsoft.graph.setupStatus": {
        "title": "setupStatus",
        "enum": [
          "unknown",
          "notRegisteredYet",
          "registeredSetupNotStarted",
          "registeredSetupInProgress",
          "registrationAndSetupCompleted",
          "registrationFailed",
          "registrationTimedOut",
          "disabled"
        ],
        "type": "string"
      },
      "microsoft.graph.androidForWorkBindStatus": {
        "title": "androidForWorkBindStatus",
        "enum": [
          "notBound",
          "bound",
          "boundAndValidated",
          "unbinding"
        ],
        "type": "string"
      },
      "microsoft.graph.androidForWorkSyncStatus": {
        "title": "androidForWorkSyncStatus",
        "enum": [
          "success",
          "credentialsNotValid",
          "androidForWorkApiError",
          "managementServiceError",
          "unknownError",
          "none"
        ],
        "type": "string"
      },
      "microsoft.graph.androidForWorkEnrollmentTarget": {
        "title": "androidForWorkEnrollmentTarget",
        "enum": [
          "none",
          "all",
          "targeted",
          "targetedAsEnrollmentRestrictions"
        ],
        "type": "string"
      },
      "microsoft.graph.androidForWorkAppConfigurationSchemaItemDataType": {
        "title": "androidForWorkAppConfigurationSchemaItemDataType",
        "enum": [
          "bool",
          "integer",
          "string",
          "choice",
          "multiselect",
          "bundle",
          "bundleArray",
          "hidden"
        ],
        "type": "string"
      },
      "microsoft.graph.appInstallIntent": {
        "title": "appInstallIntent",
        "enum": [
          "available",
          "notApplicable",
          "required",
          "uninstall",
          "availableWithoutEnrollment"
        ],
        "type": "string"
      },
      "microsoft.graph.installIntent": {
        "title": "installIntent",
        "enum": [
          "available",
          "required",
          "uninstall",
          "availableWithoutEnrollment"
        ],
        "type": "string"
      },
      "microsoft.graph.resultantAppState": {
        "title": "resultantAppState",
        "enum": [
          "installed",
          "failed",
          "notInstalled",
          "uninstallFailed",
          "pendingInstall",
          "unknown",
          "notApplicable"
        ],
        "type": "string"
      },
      "microsoft.graph.officeProductId": {
        "title": "officeProductId",
        "enum": [
          "o365ProPlusRetail",
          "o365BusinessRetail",
          "visioProRetail",
          "projectProRetail"
        ],
        "type": "string"
      },
      "microsoft.graph.officeUpdateChannel": {
        "title": "officeUpdateChannel",
        "enum": [
          "none",
          "current",
          "deferred",
          "firstReleaseCurrent",
          "firstReleaseDeferred"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsArchitecture": {
        "title": "windowsArchitecture",
        "enum": [
          "none",
          "x86",
          "x64",
          "arm",
          "neutral"
        ],
        "type": "string"
      },
      "microsoft.graph.officeSuiteInstallProgressDisplayLevel": {
        "title": "officeSuiteInstallProgressDisplayLevel",
        "enum": [
          "none",
          "full"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppAvailability": {
        "title": "managedAppAvailability",
        "enum": [
          "global",
          "lineOfBusiness"
        ],
        "type": "string"
      },
      "microsoft.graph.mobileAppContentFileUploadState": {
        "title": "mobileAppContentFileUploadState",
        "enum": [
          "success",
          "transientError",
          "error",
          "unknown",
          "azureStorageUriRequestSuccess",
          "azureStorageUriRequestPending",
          "azureStorageUriRequestFailed",
          "azureStorageUriRequestTimedOut",
          "azureStorageUriRenewalSuccess",
          "azureStorageUriRenewalPending",
          "azureStorageUriRenewalFailed",
          "azureStorageUriRenewalTimedOut",
          "commitFileSuccess",
          "commitFilePending",
          "commitFileFailed",
          "commitFileTimedOut"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsDeviceType": {
        "title": "windowsDeviceType",
        "enum": [
          "none",
          "desktop",
          "mobile",
          "holographic",
          "team"
        ],
        "type": "string"
      },
      "microsoft.graph.microsoftStoreForBusinessLicenseType": {
        "title": "microsoftStoreForBusinessLicenseType",
        "enum": [
          "offline",
          "online"
        ],
        "type": "string"
      },
      "microsoft.graph.volumePurchaseProgramTokenAccountType": {
        "title": "volumePurchaseProgramTokenAccountType",
        "enum": [
          "business",
          "education"
        ],
        "type": "string"
      },
      "microsoft.graph.volumePurchaseProgramTokenState": {
        "title": "volumePurchaseProgramTokenState",
        "enum": [
          "unknown",
          "valid",
          "expired",
          "invalid"
        ],
        "type": "string"
      },
      "microsoft.graph.volumePurchaseProgramTokenSyncStatus": {
        "title": "volumePurchaseProgramTokenSyncStatus",
        "enum": [
          "none",
          "inProgress",
          "completed",
          "failed"
        ],
        "type": "string"
      },
      "microsoft.graph.vppTokenAccountType": {
        "title": "vppTokenAccountType",
        "enum": [
          "business",
          "education"
        ],
        "type": "string"
      },
      "microsoft.graph.certificateStatus": {
        "title": "certificateStatus",
        "enum": [
          "notProvisioned",
          "provisioned"
        ],
        "type": "string"
      },
      "microsoft.graph.complianceStatus": {
        "title": "complianceStatus",
        "enum": [
          "unknown",
          "notApplicable",
          "compliant",
          "remediated",
          "nonCompliant",
          "error",
          "conflict"
        ],
        "type": "string"
      },
      "microsoft.graph.androidPermissionActionType": {
        "title": "androidPermissionActionType",
        "enum": [
          "prompt",
          "autoGrant",
          "autoDeny"
        ],
        "type": "string"
      },
      "microsoft.graph.mdmAppConfigKeyType": {
        "title": "mdmAppConfigKeyType",
        "enum": [
          "stringType",
          "integerType",
          "realType",
          "booleanType",
          "tokenType"
        ],
        "type": "string"
      },
      "microsoft.graph.iTunesPairingMode": {
        "title": "iTunesPairingMode",
        "enum": [
          "disallow",
          "allow",
          "requiresCertificate"
        ],
        "type": "string"
      },
      "microsoft.graph.importedDeviceIdentityType": {
        "title": "importedDeviceIdentityType",
        "enum": [
          "unknown",
          "imei",
          "serialNumber"
        ],
        "type": "string"
      },
      "microsoft.graph.enrollmentState": {
        "title": "enrollmentState",
        "enum": [
          "unknown",
          "enrolled",
          "pendingReset",
          "failed",
          "notContacted"
        ],
        "type": "string"
      },
      "microsoft.graph.platform": {
        "title": "platform",
        "enum": [
          "unknown",
          "ios",
          "android",
          "windows",
          "windowsMobile",
          "macOS"
        ],
        "type": "string"
      },
      "microsoft.graph.discoverySource": {
        "title": "discoverySource",
        "enum": [
          "unknown",
          "adminImport",
          "deviceEnrollmentProgram"
        ],
        "type": "string"
      },
      "microsoft.graph.managedDeviceRemoteAction": {
        "title": "managedDeviceRemoteAction",
        "enum": [
          "retire",
          "delete",
          "fullScan",
          "quickScan",
          "signatureUpdate"
        ],
        "type": "string"
      },
      "microsoft.graph.remoteAction": {
        "title": "remoteAction",
        "enum": [
          "unknown",
          "factoryReset",
          "removeCompanyData",
          "resetPasscode",
          "remoteLock",
          "enableLostMode",
          "disableLostMode",
          "locateDevice",
          "rebootNow",
          "recoverPasscode",
          "cleanWindowsDevice",
          "logoutSharedAppleDeviceActiveUser",
          "quickScan",
          "fullScan",
          "windowsDefenderUpdateSignatures",
          "factoryResetKeepEnrollmentData",
          "updateDeviceAccount",
          "automaticRedeployment",
          "shutDown"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceActionState": {
        "title": "deviceActionState",
        "enum": [
          "none",
          "pending",
          "canceled",
          "active",
          "done",
          "failed",
          "notSupported"
        ],
        "type": "string"
      },
      "microsoft.graph.runAsAccountType": {
        "title": "runAsAccountType",
        "enum": [
          "system",
          "user"
        ],
        "type": "string"
      },
      "microsoft.graph.runState": {
        "title": "runState",
        "enum": [
          "unknown",
          "success",
          "fail"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceGuardVirtualizationBasedSecurityHardwareRequirementState": {
        "title": "deviceGuardVirtualizationBasedSecurityHardwareRequirementState",
        "enum": [
          "meetHardwareRequirements",
          "secureBootRequired",
          "dmaProtectionRequired",
          "hyperVNotSupportedForGuestVM",
          "hyperVNotAvailable"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceGuardVirtualizationBasedSecurityState": {
        "title": "deviceGuardVirtualizationBasedSecurityState",
        "enum": [
          "running",
          "rebootRequired",
          "require64BitArchitecture",
          "notLicensed",
          "notConfigured",
          "doesNotMeetHardwareRequirements",
          "other"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceGuardLocalSystemAuthorityCredentialGuardState": {
        "title": "deviceGuardLocalSystemAuthorityCredentialGuardState",
        "enum": [
          "running",
          "rebootRequired",
          "notLicensed",
          "notConfigured",
          "virtualizationBasedSecurityNotRunning"
        ],
        "type": "string"
      },
      "microsoft.graph.ownerType": {
        "title": "ownerType",
        "enum": [
          "unknown",
          "company",
          "personal"
        ],
        "type": "string"
      },
      "microsoft.graph.managementState": {
        "title": "managementState",
        "enum": [
          "managed",
          "retirePending",
          "retireFailed",
          "wipePending",
          "wipeFailed",
          "unhealthy",
          "deletePending",
          "retireIssued",
          "wipeIssued",
          "wipeCanceled",
          "retireCanceled",
          "discovered"
        ],
        "type": "string"
      },
      "microsoft.graph.chassisType": {
        "title": "chassisType",
        "enum": [
          "unknown",
          "desktop",
          "laptop",
          "worksWorkstation",
          "enterpriseServer",
          "phone",
          "tablet",
          "mobileOther",
          "mobileUnknown"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceType": {
        "title": "deviceType",
        "enum": [
          "desktop",
          "windowsRT",
          "winMO6",
          "nokia",
          "windowsPhone",
          "mac",
          "winCE",
          "winEmbedded",
          "iPhone",
          "iPad",
          "iPod",
          "android",
          "iSocConsumer",
          "unix",
          "macMDM",
          "holoLens",
          "surfaceHub",
          "androidForWork",
          "windowsBlue",
          "windowsPhoneBlue",
          "blackberry",
          "palm",
          "fakeDevice",
          "unknown"
        ],
        "type": "string"
      },
      "microsoft.graph.complianceState": {
        "title": "complianceState",
        "enum": [
          "unknown",
          "compliant",
          "noncompliant",
          "conflict",
          "error",
          "inGracePeriod",
          "configManager"
        ],
        "type": "string"
      },
      "microsoft.graph.managementAgentType": {
        "title": "managementAgentType",
        "enum": [
          "eas",
          "mdm",
          "easMdm",
          "intuneClient",
          "easIntuneClient",
          "configManagerClient",
          "configurationManagerClientMdm",
          "configurationManagerClientMdmEas",
          "unknown",
          "jamf"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceEnrollmentType": {
        "title": "deviceEnrollmentType",
        "enum": [
          "unknown",
          "userEnrollment",
          "deviceEnrollmentManager",
          "appleBulkWithUser",
          "appleBulkWithoutUser",
          "windowsAzureADJoin",
          "windowsBulkUserless",
          "windowsAutoEnrollment",
          "windowsBulkAzureDomainJoin",
          "windowsCoManagement"
        ],
        "type": "string"
      },
      "microsoft.graph.lostModeState": {
        "title": "lostModeState",
        "enum": [
          "disabled",
          "enabled"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceRegistrationState": {
        "title": "deviceRegistrationState",
        "enum": [
          "notRegistered",
          "smsidConflict",
          "registered",
          "revoked",
          "keyConflict",
          "approvalPending",
          "resetCert",
          "notRegisteredPendingEnrollment",
          "unknown"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementExchangeAccessState": {
        "title": "deviceManagementExchangeAccessState",
        "enum": [
          "none",
          "unknown",
          "allowed",
          "blocked",
          "quarantined"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementExchangeAccessStateReason": {
        "title": "deviceManagementExchangeAccessStateReason",
        "enum": [
          "none",
          "unknown",
          "exchangeGlobalRule",
          "exchangeIndividualRule",
          "exchangeDeviceRule",
          "exchangeUpgrade",
          "exchangeMailboxPolicy",
          "other",
          "compliant",
          "notCompliant",
          "notEnrolled",
          "unknownLocation",
          "mfaRequired",
          "azureADBlockDueToAccessPolicy",
          "compromisedPassword",
          "deviceNotKnownWithManagedApp"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsDeviceHealthState": {
        "title": "windowsDeviceHealthState",
        "enum": [
          "clean",
          "fullScanPending",
          "rebootPending",
          "manualStepsPending",
          "offlineScanPending",
          "critical"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsMalwareSeverity": {
        "title": "windowsMalwareSeverity",
        "enum": [
          "unknown",
          "low",
          "moderate",
          "high",
          "severe"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsMalwareCategory": {
        "title": "windowsMalwareCategory",
        "enum": [
          "invalid",
          "adware",
          "spyware",
          "passwordStealer",
          "trojanDownloader",
          "worm",
          "backdoor",
          "remoteAccessTrojan",
          "trojan",
          "emailFlooder",
          "keylogger",
          "dialer",
          "monitoringSoftware",
          "browserModifier",
          "cookie",
          "browserPlugin",
          "aolExploit",
          "nuker",
          "securityDisabler",
          "jokeProgram",
          "hostileActiveXControl",
          "softwareBundler",
          "stealthNotifier",
          "settingsModifier",
          "toolBar",
          "remoteControlSoftware",
          "trojanFtp",
          "potentialUnwantedSoftware",
          "icqExploit",
          "trojanTelnet",
          "exploit",
          "filesharingProgram",
          "malwareCreationTool",
          "remote_Control_Software",
          "tool",
          "trojanDenialOfService",
          "trojanDropper",
          "trojanMassMailer",
          "trojanMonitoringSoftware",
          "trojanProxyServer",
          "virus",
          "known",
          "unknown",
          "spp",
          "behavior",
          "vulnerability",
          "policy"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsMalwareExecutionState": {
        "title": "windowsMalwareExecutionState",
        "enum": [
          "unknown",
          "blocked",
          "allowed",
          "running",
          "notRunning"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsMalwareState": {
        "title": "windowsMalwareState",
        "enum": [
          "unknown",
          "detected",
          "cleaned",
          "quarantined",
          "removed",
          "allowed",
          "blocked",
          "cleanFailed",
          "quarantineFailed",
          "removeFailed",
          "allowFailed",
          "abandoned",
          "blockFailed"
        ],
        "type": "string"
      },
      "microsoft.graph.managedDevicePartnerReportedHealthState": {
        "title": "managedDevicePartnerReportedHealthState",
        "enum": [
          "unknown",
          "activated",
          "deactivated",
          "secured",
          "lowSeverity",
          "mediumSeverity",
          "highSeverity",
          "unresponsive"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementSubscriptionState": {
        "title": "deviceManagementSubscriptionState",
        "enum": [
          "pending",
          "active",
          "warning",
          "disabled",
          "deleted",
          "blocked",
          "lockedOut"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementSubscriptions": {
        "title": "deviceManagementSubscriptions",
        "enum": [
          "none",
          "intune",
          "office365",
          "intunePremium",
          "intune_EDU",
          "intune_SMB"
        ],
        "type": "string"
      },
      "microsoft.graph.adminConsentState": {
        "title": "adminConsentState",
        "enum": [
          "notConfigured",
          "granted",
          "notGranted"
        ],
        "type": "string"
      },
      "microsoft.graph.healthState": {
        "title": "healthState",
        "enum": [
          "unknown",
          "healthy",
          "unhealthy"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsPrivacyDataAccessLevel": {
        "title": "windowsPrivacyDataAccessLevel",
        "enum": [
          "notConfigured",
          "forceAllow",
          "forceDeny",
          "userInControl"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsPrivacyDataCategory": {
        "title": "windowsPrivacyDataCategory",
        "enum": [
          "notConfigured",
          "accountInfo",
          "appsRunInBackground",
          "calendar",
          "callHistory",
          "camera",
          "contacts",
          "diagnosticsInfo",
          "email",
          "location",
          "messaging",
          "microphone",
          "motion",
          "notifications",
          "phone",
          "radios",
          "tasks",
          "syncWithDevices",
          "trustedDevices"
        ],
        "type": "string"
      },
      "microsoft.graph.easAuthenticationMethod": {
        "title": "easAuthenticationMethod",
        "enum": [
          "usernameAndPassword",
          "certificate"
        ],
        "type": "string"
      },
      "microsoft.graph.emailSyncDuration": {
        "title": "emailSyncDuration",
        "enum": [
          "userDefined",
          "oneDay",
          "threeDays",
          "oneWeek",
          "twoWeeks",
          "oneMonth",
          "unlimited"
        ],
        "type": "string"
      },
      "microsoft.graph.userEmailSource": {
        "title": "userEmailSource",
        "enum": [
          "userPrincipalName",
          "primarySmtpAddress"
        ],
        "type": "string"
      },
      "microsoft.graph.subjectNameFormat": {
        "title": "subjectNameFormat",
        "enum": [
          "commonName",
          "commonNameIncludingEmail",
          "commonNameAsEmail",
          "custom",
          "commonNameAsIMEI",
          "commonNameAsSerialNumber"
        ],
        "type": "string"
      },
      "microsoft.graph.subjectAlternativeNameType": {
        "title": "subjectAlternativeNameType",
        "enum": [
          "emailAddress",
          "userPrincipalName",
          "customAzureADAttribute"
        ],
        "type": "string"
      },
      "microsoft.graph.certificateValidityPeriodScale": {
        "title": "certificateValidityPeriodScale",
        "enum": [
          "days",
          "months",
          "years"
        ],
        "type": "string"
      },
      "microsoft.graph.keyUsages": {
        "title": "keyUsages",
        "enum": [
          "keyEncipherment",
          "digitalSignature"
        ],
        "type": "string"
      },
      "microsoft.graph.keySize": {
        "title": "keySize",
        "enum": [
          "size1024",
          "size2048"
        ],
        "type": "string"
      },
      "microsoft.graph.hashAlgorithms": {
        "title": "hashAlgorithms",
        "enum": [
          "sha1",
          "sha2"
        ],
        "type": "string"
      },
      "microsoft.graph.devicePlatformType": {
        "title": "devicePlatformType",
        "enum": [
          "android",
          "androidForWork",
          "iOS",
          "macOS",
          "windowsPhone81",
          "windows81AndLater",
          "windows10AndLater"
        ],
        "type": "string"
      },
      "microsoft.graph.androidUsernameSource": {
        "title": "androidUsernameSource",
        "enum": [
          "username",
          "userPrincipalName"
        ],
        "type": "string"
      },
      "microsoft.graph.emailSyncSchedule": {
        "title": "emailSyncSchedule",
        "enum": [
          "userDefined",
          "asMessagesArrive",
          "manual",
          "fifteenMinutes",
          "thirtyMinutes",
          "sixtyMinutes",
          "basedOnMyUsage"
        ],
        "type": "string"
      },
      "microsoft.graph.androidWiFiSecurityType": {
        "title": "androidWiFiSecurityType",
        "enum": [
          "open",
          "wpaEnterprise"
        ],
        "type": "string"
      },
      "microsoft.graph.wiFiAuthenticationMethod": {
        "title": "wiFiAuthenticationMethod",
        "enum": [
          "certificate",
          "usernameAndPassword"
        ],
        "type": "string"
      },
      "microsoft.graph.androidEapType": {
        "title": "androidEapType",
        "enum": [
          "eapTls",
          "eapTtls",
          "peap"
        ],
        "type": "string"
      },
      "microsoft.graph.nonEapAuthenticationMethodForEapTtlsType": {
        "title": "nonEapAuthenticationMethodForEapTtlsType",
        "enum": [
          "unencryptedPassword",
          "challengeHandshakeAuthenticationProtocol",
          "microsoftChap",
          "microsoftChapVersionTwo"
        ],
        "type": "string"
      },
      "microsoft.graph.nonEapAuthenticationMethodForPeap": {
        "title": "nonEapAuthenticationMethodForPeap",
        "enum": [
          "none",
          "microsoftChapVersionTwo"
        ],
        "type": "string"
      },
      "microsoft.graph.androidForWorkRequiredPasswordType": {
        "title": "androidForWorkRequiredPasswordType",
        "enum": [
          "deviceDefault",
          "lowSecurityBiometric",
          "required",
          "atLeastNumeric",
          "numericComplex",
          "atLeastAlphabetic",
          "atLeastAlphanumeric",
          "alphanumericWithSymbols"
        ],
        "type": "string"
      },
      "microsoft.graph.androidForWorkCrossProfileDataSharingType": {
        "title": "androidForWorkCrossProfileDataSharingType",
        "enum": [
          "deviceDefault",
          "preventAny",
          "allowPersonalToWork",
          "noRestrictions"
        ],
        "type": "string"
      },
      "microsoft.graph.androidForWorkDefaultAppPermissionPolicyType": {
        "title": "androidForWorkDefaultAppPermissionPolicyType",
        "enum": [
          "deviceDefault",
          "prompt",
          "autoGrant",
          "autoDeny"
        ],
        "type": "string"
      },
      "microsoft.graph.androidForWorkVpnConnectionType": {
        "title": "androidForWorkVpnConnectionType",
        "enum": [
          "ciscoAnyConnect",
          "pulseSecure",
          "f5EdgeClient",
          "dellSonicWallMobileConnect",
          "checkPointCapsuleVpn",
          "citrix"
        ],
        "type": "string"
      },
      "microsoft.graph.vpnAuthenticationMethod": {
        "title": "vpnAuthenticationMethod",
        "enum": [
          "certificate",
          "usernameAndPassword"
        ],
        "type": "string"
      },
      "microsoft.graph.appsComplianceListType": {
        "title": "appsComplianceListType",
        "enum": [
          "none",
          "appsInListCompliant",
          "appsNotInListCompliant"
        ],
        "type": "string"
      },
      "microsoft.graph.appListType": {
        "title": "appListType",
        "enum": [
          "none",
          "appsInListCompliant",
          "appsNotInListCompliant"
        ],
        "type": "string"
      },
      "microsoft.graph.androidRequiredPasswordType": {
        "title": "androidRequiredPasswordType",
        "enum": [
          "deviceDefault",
          "alphabetic",
          "alphanumeric",
          "alphanumericWithSymbols",
          "lowSecurityBiometric",
          "numeric",
          "numericComplex",
          "any"
        ],
        "type": "string"
      },
      "microsoft.graph.webBrowserCookieSettings": {
        "title": "webBrowserCookieSettings",
        "enum": [
          "browserDefault",
          "blockAlways",
          "allowCurrentWebSite",
          "allowFromWebsitesVisited",
          "allowAlways"
        ],
        "type": "string"
      },
      "microsoft.graph.androidVpnConnectionType": {
        "title": "androidVpnConnectionType",
        "enum": [
          "ciscoAnyConnect",
          "pulseSecure",
          "f5EdgeClient",
          "dellSonicWallMobileConnect",
          "checkPointCapsuleVpn",
          "citrix"
        ],
        "type": "string"
      },
      "microsoft.graph.appleSubjectNameFormat": {
        "title": "appleSubjectNameFormat",
        "enum": [
          "commonName",
          "commonNameAsEmail",
          "custom",
          "commonNameIncludingEmail",
          "commonNameAsIMEI",
          "commonNameAsSerialNumber"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingAustraliaMoviesType": {
        "title": "ratingAustraliaMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "mature",
          "agesAbove15",
          "agesAbove18"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingAustraliaTelevisionType": {
        "title": "ratingAustraliaTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "preschoolers",
          "children",
          "general",
          "parentalGuidance",
          "mature",
          "agesAbove15",
          "agesAbove15AdultViolence"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingCanadaMoviesType": {
        "title": "ratingCanadaMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "agesAbove14",
          "agesAbove18",
          "restricted"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingCanadaTelevisionType": {
        "title": "ratingCanadaTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "children",
          "childrenAbove8",
          "general",
          "parentalGuidance",
          "agesAbove14",
          "agesAbove18"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingFranceMoviesType": {
        "title": "ratingFranceMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "agesAbove10",
          "agesAbove12",
          "agesAbove16",
          "agesAbove18"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingFranceTelevisionType": {
        "title": "ratingFranceTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "agesAbove10",
          "agesAbove12",
          "agesAbove16",
          "agesAbove18"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingGermanyMoviesType": {
        "title": "ratingGermanyMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "agesAbove6",
          "agesAbove12",
          "agesAbove16",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingGermanyTelevisionType": {
        "title": "ratingGermanyTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "agesAbove6",
          "agesAbove12",
          "agesAbove16",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingIrelandMoviesType": {
        "title": "ratingIrelandMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "agesAbove12",
          "agesAbove15",
          "agesAbove16",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingIrelandTelevisionType": {
        "title": "ratingIrelandTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "children",
          "youngAdults",
          "parentalSupervision",
          "mature"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingJapanMoviesType": {
        "title": "ratingJapanMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "agesAbove15",
          "agesAbove18"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingJapanTelevisionType": {
        "title": "ratingJapanTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "explicitAllowed"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingNewZealandMoviesType": {
        "title": "ratingNewZealandMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "mature",
          "agesAbove13",
          "agesAbove15",
          "agesAbove16",
          "agesAbove18",
          "restricted",
          "agesAbove16Restricted"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingNewZealandTelevisionType": {
        "title": "ratingNewZealandTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingUnitedKingdomMoviesType": {
        "title": "ratingUnitedKingdomMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "universalChildren",
          "parentalGuidance",
          "agesAbove12Video",
          "agesAbove12Cinema",
          "agesAbove15",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingUnitedKingdomTelevisionType": {
        "title": "ratingUnitedKingdomTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "caution"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingUnitedStatesMoviesType": {
        "title": "ratingUnitedStatesMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "parentalGuidance13",
          "restricted",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingUnitedStatesTelevisionType": {
        "title": "ratingUnitedStatesTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "childrenAll",
          "childrenAbove7",
          "general",
          "parentalGuidance",
          "childrenAbove14",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingAppsType": {
        "title": "ratingAppsType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "agesAbove4",
          "agesAbove9",
          "agesAbove12",
          "agesAbove17"
        ],
        "type": "string"
      },
      "microsoft.graph.requiredPasswordType": {
        "title": "requiredPasswordType",
        "enum": [
          "deviceDefault",
          "alphanumeric",
          "numeric"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingRegionType": {
        "title": "ratingRegionType",
        "enum": [
          "noRegion",
          "australia",
          "canada",
          "france",
          "germany",
          "ireland",
          "japan",
          "newZealand",
          "unitedKingdom",
          "unitedStates"
        ],
        "type": "string"
      },
      "microsoft.graph.wiFiSecurityType": {
        "title": "wiFiSecurityType",
        "enum": [
          "open",
          "wpaPersonal",
          "wpaEnterprise",
          "wep"
        ],
        "type": "string"
      },
      "microsoft.graph.wiFiProxySetting": {
        "title": "wiFiProxySetting",
        "enum": [
          "none",
          "manual",
          "automatic"
        ],
        "type": "string"
      },
      "microsoft.graph.eapType": {
        "title": "eapType",
        "enum": [
          "eapTls",
          "leap",
          "eapSim",
          "eapTtls",
          "peap",
          "eapFast"
        ],
        "type": "string"
      },
      "microsoft.graph.eapFastConfiguration": {
        "title": "eapFastConfiguration",
        "enum": [
          "noProtectedAccessCredential",
          "useProtectedAccessCredential",
          "useProtectedAccessCredentialAndProvision",
          "useProtectedAccessCredentialAndProvisionAnonymously"
        ],
        "type": "string"
      },
      "microsoft.graph.iosNotificationAlertType": {
        "title": "iosNotificationAlertType",
        "enum": [
          "deviceDefault",
          "banner",
          "modal",
          "none"
        ],
        "type": "string"
      },
      "microsoft.graph.appleVpnConnectionType": {
        "title": "appleVpnConnectionType",
        "enum": [
          "ciscoAnyConnect",
          "pulseSecure",
          "f5EdgeClient",
          "dellSonicWallMobileConnect",
          "checkPointCapsuleVpn",
          "customVpn",
          "ciscoIPSec",
          "citrix"
        ],
        "type": "string"
      },
      "microsoft.graph.vpnOnDemandRuleConnectionAction": {
        "title": "vpnOnDemandRuleConnectionAction",
        "enum": [
          "connect",
          "evaluateConnection",
          "ignore",
          "disconnect"
        ],
        "type": "string"
      },
      "microsoft.graph.vpnOnDemandRuleConnectionDomainAction": {
        "title": "vpnOnDemandRuleConnectionDomainAction",
        "enum": [
          "connectIfNeeded",
          "neverConnect"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderSecurityCenterNotificationsFromAppType": {
        "title": "defenderSecurityCenterNotificationsFromAppType",
        "enum": [
          "notConfigured",
          "blockNoncriticalNotifications",
          "blockAllNotifications"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderSecurityCenterITContactDisplayType": {
        "title": "defenderSecurityCenterITContactDisplayType",
        "enum": [
          "notConfigured",
          "displayInAppAndInNotifications",
          "displayOnlyInApp",
          "displayOnlyInNotifications"
        ],
        "type": "string"
      },
      "microsoft.graph.firewallPreSharedKeyEncodingMethodType": {
        "title": "firewallPreSharedKeyEncodingMethodType",
        "enum": [
          "deviceDefault",
          "none",
          "utF8"
        ],
        "type": "string"
      },
      "microsoft.graph.firewallCertificateRevocationListCheckMethodType": {
        "title": "firewallCertificateRevocationListCheckMethodType",
        "enum": [
          "deviceDefault",
          "none",
          "attempt",
          "require"
        ],
        "type": "string"
      },
      "microsoft.graph.firewallPacketQueueingMethodType": {
        "title": "firewallPacketQueueingMethodType",
        "enum": [
          "deviceDefault",
          "disabled",
          "queueInbound",
          "queueOutbound",
          "queueBoth"
        ],
        "type": "string"
      },
      "microsoft.graph.stateManagementSetting": {
        "title": "stateManagementSetting",
        "enum": [
          "notConfigured",
          "blocked",
          "allowed"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderAttackSurfaceType": {
        "title": "defenderAttackSurfaceType",
        "enum": [
          "userDefined",
          "block",
          "auditMode"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderProtectionType": {
        "title": "defenderProtectionType",
        "enum": [
          "userDefined",
          "enable",
          "auditMode"
        ],
        "type": "string"
      },
      "microsoft.graph.appLockerApplicationControlType": {
        "title": "appLockerApplicationControlType",
        "enum": [
          "notConfigured",
          "enforceComponentsAndStoreApps",
          "auditComponentsAndStoreApps",
          "enforceComponentsStoreAppsAndSmartlocker",
          "auditComponentsStoreAppsAndSmartlocker"
        ],
        "type": "string"
      },
      "microsoft.graph.applicationGuardBlockFileTransferType": {
        "title": "applicationGuardBlockFileTransferType",
        "enum": [
          "notConfigured",
          "blockImageAndTextFile",
          "blockImageFile",
          "blockNone",
          "blockTextFile"
        ],
        "type": "string"
      },
      "microsoft.graph.applicationGuardBlockClipboardSharingType": {
        "title": "applicationGuardBlockClipboardSharingType",
        "enum": [
          "notConfigured",
          "blockBoth",
          "blockHostToContainer",
          "blockContainerToHost",
          "blockNone"
        ],
        "type": "string"
      },
      "microsoft.graph.bitLockerEncryptionMethod": {
        "title": "bitLockerEncryptionMethod",
        "enum": [
          "aesCbc128",
          "aesCbc256",
          "xtsAes128",
          "xtsAes256"
        ],
        "type": "string"
      },
      "microsoft.graph.configurationUsage": {
        "title": "configurationUsage",
        "enum": [
          "blocked",
          "required",
          "allowed"
        ],
        "type": "string"
      },
      "microsoft.graph.bitLockerRecoveryinformationType": {
        "title": "bitLockerRecoveryinformationType",
        "enum": [
          "passwordAndKey",
          "passwordOnly"
        ],
        "type": "string"
      },
      "microsoft.graph.signInAssistantOptions": {
        "title": "signInAssistantOptions",
        "enum": [
          "notConfigured",
          "disabled"
        ],
        "type": "string"
      },
      "microsoft.graph.diagnosticDataSubmissionMode": {
        "title": "diagnosticDataSubmissionMode",
        "enum": [
          "userDefined",
          "none",
          "basic",
          "enhanced",
          "full"
        ],
        "type": "string"
      },
      "microsoft.graph.inkAccessSetting": {
        "title": "inkAccessSetting",
        "enum": [
          "notConfigured",
          "enabled",
          "disabled"
        ],
        "type": "string"
      },
      "microsoft.graph.edgeCookiePolicy": {
        "title": "edgeCookiePolicy",
        "enum": [
          "userDefined",
          "allow",
          "blockThirdParty",
          "blockAll"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderThreatAction": {
        "title": "defenderThreatAction",
        "enum": [
          "deviceDefault",
          "clean",
          "quarantine",
          "remove",
          "allow",
          "userDefined",
          "block"
        ],
        "type": "string"
      },
      "microsoft.graph.weeklySchedule": {
        "title": "weeklySchedule",
        "enum": [
          "userDefined",
          "everyday",
          "sunday",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderMonitorFileActivity": {
        "title": "defenderMonitorFileActivity",
        "enum": [
          "userDefined",
          "disable",
          "monitorAllFiles",
          "monitorIncomingFilesOnly",
          "monitorOutgoingFilesOnly"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderPotentiallyUnwantedAppAction": {
        "title": "defenderPotentiallyUnwantedAppAction",
        "enum": [
          "deviceDefault",
          "block",
          "audit"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderPromptForSampleSubmission": {
        "title": "defenderPromptForSampleSubmission",
        "enum": [
          "userDefined",
          "alwaysPrompt",
          "promptBeforeSendingPersonalData",
          "neverSendData",
          "sendAllDataWithoutPrompting"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderScanType": {
        "title": "defenderScanType",
        "enum": [
          "userDefined",
          "disabled",
          "quick",
          "full"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderCloudBlockLevelType": {
        "title": "defenderCloudBlockLevelType",
        "enum": [
          "notConfigured",
          "high",
          "highPlus",
          "zeroTolerance"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsStartMenuAppListVisibilityType": {
        "title": "windowsStartMenuAppListVisibilityType",
        "enum": [
          "userDefined",
          "collapse",
          "remove",
          "disableSettingsApp"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsStartMenuModeType": {
        "title": "windowsStartMenuModeType",
        "enum": [
          "userDefined",
          "fullScreen",
          "nonFullScreen"
        ],
        "type": "string"
      },
      "microsoft.graph.visibilitySetting": {
        "title": "visibilitySetting",
        "enum": [
          "notConfigured",
          "hide",
          "show"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsSpotlightEnablementSettings": {
        "title": "windowsSpotlightEnablementSettings",
        "enum": [
          "notConfigured",
          "disabled",
          "enabled"
        ],
        "type": "string"
      },
      "microsoft.graph.automaticUpdateMode": {
        "title": "automaticUpdateMode",
        "enum": [
          "userDefined",
          "notifyDownload",
          "autoInstallAtMaintenanceTime",
          "autoInstallAndRebootAtMaintenanceTime",
          "autoInstallAndRebootAtScheduledTime",
          "autoInstallAndRebootWithoutEndUserControl"
        ],
        "type": "string"
      },
      "microsoft.graph.safeSearchFilterType": {
        "title": "safeSearchFilterType",
        "enum": [
          "userDefined",
          "strict",
          "moderate"
        ],
        "type": "string"
      },
      "microsoft.graph.edgeSearchEngineType": {
        "title": "edgeSearchEngineType",
        "enum": [
          "default",
          "bing"
        ],
        "type": "string"
      },
      "microsoft.graph.prereleaseFeatures": {
        "title": "prereleaseFeatures",
        "enum": [
          "userDefined",
          "settingsOnly",
          "settingsAndExperimentations",
          "notAllowed"
        ],
        "type": "string"
      },
      "microsoft.graph.sharedPCAccountDeletionPolicyType": {
        "title": "sharedPCAccountDeletionPolicyType",
        "enum": [
          "immediate",
          "diskSpaceThreshold",
          "diskSpaceThresholdOrInactiveThreshold"
        ],
        "type": "string"
      },
      "microsoft.graph.sharedPCAllowedAccountType": {
        "title": "sharedPCAllowedAccountType",
        "enum": [
          "guest",
          "domain"
        ],
        "type": "string"
      },
      "microsoft.graph.keyStorageProviderOption": {
        "title": "keyStorageProviderOption",
        "enum": [
          "useTpmKspOtherwiseUseSoftwareKsp",
          "useTpmKspOtherwiseFail",
          "usePassportForWorkKspOtherwiseFail",
          "useSoftwareKsp"
        ],
        "type": "string"
      },
      "microsoft.graph.certificateDestinationStore": {
        "title": "certificateDestinationStore",
        "enum": [
          "computerCertStoreRoot",
          "computerCertStoreIntermediate",
          "userCertStoreIntermediate"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsDeliveryOptimizationMode": {
        "title": "windowsDeliveryOptimizationMode",
        "enum": [
          "userDefined",
          "httpOnly",
          "httpWithPeeringNat",
          "httpWithPeeringPrivateGroup",
          "httpWithInternetPeering",
          "simpleDownload",
          "bypassMode"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsUpdateRestartMode": {
        "title": "windowsUpdateRestartMode",
        "enum": [
          "userDefined",
          "batteryLevelCheckEnabled",
          "batteryLevelCheckDisabled"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsUpdateType": {
        "title": "windowsUpdateType",
        "enum": [
          "userDefined",
          "all",
          "businessReadyOnly"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsUpdateInsiderBuildControl": {
        "title": "windowsUpdateInsiderBuildControl",
        "enum": [
          "userDefined",
          "allowed",
          "notAllowed"
        ],
        "type": "string"
      },
      "microsoft.graph.windows10VpnConnectionType": {
        "title": "windows10VpnConnectionType",
        "enum": [
          "pulseSecure",
          "f5EdgeClient",
          "dellSonicWallMobileConnect",
          "checkPointCapsuleVpn",
          "automatic",
          "ikEv2",
          "l2tp",
          "pptp",
          "citrix"
        ],
        "type": "string"
      },
      "microsoft.graph.windows10VpnAuthenticationMethod": {
        "title": "windows10VpnAuthenticationMethod",
        "enum": [
          "certificate",
          "usernameAndPassword",
          "customEapXml"
        ],
        "type": "string"
      },
      "microsoft.graph.windows10AppType": {
        "title": "windows10AppType",
        "enum": [
          "desktop",
          "universal"
        ],
        "type": "string"
      },
      "microsoft.graph.vpnTrafficRuleAppType": {
        "title": "vpnTrafficRuleAppType",
        "enum": [
          "none",
          "desktop",
          "universal"
        ],
        "type": "string"
      },
      "microsoft.graph.vpnTrafficRuleRoutingPolicyType": {
        "title": "vpnTrafficRuleRoutingPolicyType",
        "enum": [
          "none",
          "splitTunnel",
          "forceTunnel"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsVpnConnectionType": {
        "title": "windowsVpnConnectionType",
        "enum": [
          "pulseSecure",
          "f5EdgeClient",
          "dellSonicWallMobileConnect",
          "checkPointCapsuleVpn"
        ],
        "type": "string"
      },
      "microsoft.graph.internetSiteSecurityLevel": {
        "title": "internetSiteSecurityLevel",
        "enum": [
          "userDefined",
          "medium",
          "mediumHigh",
          "high"
        ],
        "type": "string"
      },
      "microsoft.graph.siteSecurityLevel": {
        "title": "siteSecurityLevel",
        "enum": [
          "userDefined",
          "low",
          "mediumLow",
          "medium",
          "mediumHigh",
          "high"
        ],
        "type": "string"
      },
      "microsoft.graph.updateClassification": {
        "title": "updateClassification",
        "enum": [
          "userDefined",
          "recommendedAndImportant",
          "important",
          "none"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsUserAccountControlSettings": {
        "title": "windowsUserAccountControlSettings",
        "enum": [
          "userDefined",
          "alwaysNotify",
          "notifyOnAppChanges",
          "notifyOnAppChangesWithoutDimming",
          "neverNotify"
        ],
        "type": "string"
      },
      "microsoft.graph.miracastChannel": {
        "title": "miracastChannel",
        "enum": [
          "userDefined",
          "one",
          "two",
          "three",
          "four",
          "five",
          "six",
          "seven",
          "eight",
          "nine",
          "ten",
          "eleven",
          "thirtySix",
          "forty",
          "fortyFour",
          "fortyEight",
          "oneHundredFortyNine",
          "oneHundredFiftyThree",
          "oneHundredFiftySeven",
          "oneHundredSixtyOne",
          "oneHundredSixtyFive"
        ],
        "type": "string"
      },
      "microsoft.graph.welcomeScreenMeetingInformation": {
        "title": "welcomeScreenMeetingInformation",
        "enum": [
          "userDefined",
          "showOrganizerAndTimeOnly",
          "showOrganizerAndTimeAndSubject"
        ],
        "type": "string"
      },
      "microsoft.graph.editionUpgradeLicenseType": {
        "title": "editionUpgradeLicenseType",
        "enum": [
          "productKey",
          "licenseFile"
        ],
        "type": "string"
      },
      "microsoft.graph.windows10EditionType": {
        "title": "windows10EditionType",
        "enum": [
          "windows10Enterprise",
          "windows10EnterpriseN",
          "windows10Education",
          "windows10EducationN",
          "windows10MobileEnterprise",
          "windows10HolographicEnterprise",
          "windows10Professional",
          "windows10ProfessionalN",
          "windows10ProfessionalEducation",
          "windows10ProfessionalEducationN"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceComplianceActionType": {
        "title": "deviceComplianceActionType",
        "enum": [
          "noAction",
          "notification",
          "block",
          "retire",
          "wipe",
          "removeResourceAccessProfiles"
        ],
        "type": "string"
      },
      "microsoft.graph.notificationTemplateBrandingOptions": {
        "title": "notificationTemplateBrandingOptions",
        "enum": [
          "none",
          "includeCompanyLogo",
          "includeCompanyName",
          "includeContactInformation"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceThreatProtectionLevel": {
        "title": "deviceThreatProtectionLevel",
        "enum": [
          "unavailable",
          "secured",
          "low",
          "medium",
          "high",
          "notSet"
        ],
        "type": "string"
      },
      "microsoft.graph.policyPlatformType": {
        "title": "policyPlatformType",
        "enum": [
          "android",
          "androidForWork",
          "iOS",
          "macOS",
          "windowsPhone81",
          "windows81AndLater",
          "windows10AndLater",
          "all"
        ],
        "type": "string"
      },
      "microsoft.graph.iosUpdatesInstallStatus": {
        "title": "iosUpdatesInstallStatus",
        "enum": [
          "success",
          "available",
          "idle",
          "downloading",
          "downloadFailed",
          "downloadRequiresComputer",
          "downloadInsufficientSpace",
          "downloadInsufficientPower",
          "downloadInsufficientNetwork",
          "installing",
          "installInsufficientSpace",
          "installInsufficientPower",
          "installPhoneCallInProgress",
          "installFailed",
          "notSupportedOperation",
          "sharedDeviceUserLoggedInError"
        ],
        "type": "string"
      },
      "microsoft.graph.ndesConnectorState": {
        "title": "ndesConnectorState",
        "enum": [
          "none",
          "active",
          "inactive"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementExchangeConnectorSyncType": {
        "title": "deviceManagementExchangeConnectorSyncType",
        "enum": [
          "fullSync",
          "deltaSync"
        ],
        "type": "string"
      },
      "microsoft.graph.mdmAuthority": {
        "title": "mdmAuthority",
        "enum": [
          "unknown",
          "intune",
          "sccm",
          "office365"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsHelloForBusinessPinUsage": {
        "title": "windowsHelloForBusinessPinUsage",
        "enum": [
          "allowed",
          "required",
          "disallowed"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsHelloForBusinessConfiguration": {
        "title": "windowsHelloForBusinessConfiguration",
        "enum": [
          "disabled",
          "enabled",
          "notConfigured"
        ],
        "type": "string"
      },
      "microsoft.graph.vppTokenState": {
        "title": "vppTokenState",
        "enum": [
          "unknown",
          "valid",
          "expired",
          "invalid"
        ],
        "type": "string"
      },
      "microsoft.graph.vppTokenActionState": {
        "title": "vppTokenActionState",
        "enum": [
          "none",
          "inProgress",
          "successful",
          "failed"
        ],
        "type": "string"
      },
      "microsoft.graph.vppTokenSyncStatus": {
        "title": "vppTokenSyncStatus",
        "enum": [
          "none",
          "inProgress",
          "completed",
          "failed"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementExchangeConnectorStatus": {
        "title": "deviceManagementExchangeConnectorStatus",
        "enum": [
          "connectionPending",
          "connected",
          "disconnected",
          "none"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementExchangeConnectorType": {
        "title": "deviceManagementExchangeConnectorType",
        "enum": [
          "onPremises",
          "hosted",
          "serviceToService",
          "dedicated"
        ],
        "type": "string"
      },
      "microsoft.graph.enablement": {
        "title": "enablement",
        "enum": [
          "notConfigured",
          "enabled",
          "disabled"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementExchangeAccessLevel": {
        "title": "deviceManagementExchangeAccessLevel",
        "enum": [
          "none",
          "allow",
          "block",
          "quarantine"
        ],
        "type": "string"
      },
      "microsoft.graph.exchangeAccessRuleType": {
        "title": "exchangeAccessRuleType",
        "enum": [
          "family",
          "model"
        ],
        "type": "string"
      },
      "microsoft.graph.mobileThreatPartnerTenantState": {
        "title": "mobileThreatPartnerTenantState",
        "enum": [
          "unavailable",
          "available",
          "enabled",
          "unresponsive"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementPartnerTenantState": {
        "title": "deviceManagementPartnerTenantState",
        "enum": [
          "unknown",
          "unavailable",
          "enabled",
          "terminated",
          "rejected",
          "unresponsive"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementPartnerAppType": {
        "title": "deviceManagementPartnerAppType",
        "enum": [
          "unknown",
          "singleTenantApp",
          "multiTenantApp"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppDataTransferLevel": {
        "title": "managedAppDataTransferLevel",
        "enum": [
          "allApps",
          "managedApps",
          "none"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppClipboardSharingLevel": {
        "title": "managedAppClipboardSharingLevel",
        "enum": [
          "allApps",
          "managedAppsWithPasteIn",
          "managedApps",
          "blocked"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppPinCharacterSet": {
        "title": "managedAppPinCharacterSet",
        "enum": [
          "numeric",
          "alphanumericAndSymbol"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppDataStorageLocation": {
        "title": "managedAppDataStorageLocation",
        "enum": [
          "oneDriveForBusiness",
          "sharePoint",
          "localStorage"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppDataEncryptionType": {
        "title": "managedAppDataEncryptionType",
        "enum": [
          "useDeviceSettings",
          "afterDeviceRestart",
          "whenDeviceLockedExceptOpenFiles",
          "whenDeviceLocked"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsInformationProtectionEnforcementLevel": {
        "title": "windowsInformationProtectionEnforcementLevel",
        "enum": [
          "noProtection",
          "encryptAndAuditOnly",
          "encryptAuditAndPrompt",
          "encryptAuditAndBlock"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsInformationProtectionPinCharacterRequirements": {
        "title": "windowsInformationProtectionPinCharacterRequirements",
        "enum": [
          "notAllow",
          "requireAtLeastOne",
          "allow"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppFlaggedReason": {
        "title": "managedAppFlaggedReason",
        "enum": [
          "none",
          "rootedDevice"
        ],
        "type": "string"
      },
      "microsoft.graph.installState": {
        "title": "installState",
        "enum": [
          "notApplicable",
          "installed",
          "failed",
          "notInstalled",
          "uninstallFailed",
          "unknown"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsAutopilotSyncStatus": {
        "title": "windowsAutopilotSyncStatus",
        "enum": [
          "unknown",
          "inProgress",
          "completed",
          "failed"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsUserType": {
        "title": "windowsUserType",
        "enum": [
          "administrator",
          "standard"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsAutopilotProfileAssignmentStatus": {
        "title": "windowsAutopilotProfileAssignmentStatus",
        "enum": [
          "unknown",
          "assignedInSync",
          "assignedOutOfSync",
          "assignedUnkownSyncState",
          "notAssigned",
          "pending",
          "failed"
        ],
        "type": "string"
      },
      "microsoft.graph.depTokenType": {
        "title": "depTokenType",
        "enum": [
          "none",
          "dep",
          "appleSchoolManager"
        ],
        "type": "string"
      },
      "microsoft.graph.remoteAssistanceOnboardingStatus": {
        "title": "remoteAssistanceOnboardingStatus",
        "enum": [
          "notOnboarded",
          "onboarding",
          "onboarded"
        ],
        "type": "string"
      },
      "microsoft.graph.applicationType": {
        "title": "applicationType",
        "enum": [
          "universal",
          "desktop"
        ],
        "type": "string"
      },
      "microsoft.graph.giphyRatingType": {
        "title": "giphyRatingType",
        "enum": [
          "moderate",
          "strict"
        ],
        "type": "string"
      },
      "microsoft.graph.attributeFlowType": {
        "title": "attributeFlowType",
        "enum": [
          "Always",
          "ObjectAddOnly",
          "MultiValueAddOnly"
        ],
        "type": "string"
      },
      "microsoft.graph.attributeFlowBehavior": {
        "title": "attributeFlowBehavior",
        "enum": [
          "FlowWhenChanged",
          "FlowAlways"
        ],
        "type": "string"
      },
      "microsoft.graph.attributeMappingSourceType": {
        "title": "attributeMappingSourceType",
        "enum": [
          "Attribute",
          "Constant",
          "Function"
        ],
        "type": "string"
      },
      "microsoft.graph.entryExportStatus": {
        "title": "entryExportStatus",
        "enum": [
          "Noop",
          "Success",
          "RetryableError",
          "PermanentError",
          "Error"
        ],
        "type": "string"
      },
      "microsoft.graph.attributeType": {
        "title": "attributeType",
        "enum": [
          "Boolean",
          "Binary",
          "Reference",
          "Integer",
          "String"
        ],
        "type": "string"
      },
      "microsoft.graph.entrySyncOperation": {
        "title": "entrySyncOperation",
        "enum": [
          "None",
          "Add",
          "Delete",
          "Update"
        ],
        "type": "string"
      },
      "microsoft.graph.mutability": {
        "title": "mutability",
        "enum": [
          "ReadWrite",
          "ReadOnly",
          "Immutable",
          "WriteOnly"
        ],
        "type": "string"
      },
      "microsoft.graph.objectFlowTypes": {
        "title": "objectFlowTypes",
        "enum": [
          "None",
          "Add",
          "Update",
          "Delete"
        ],
        "type": "string"
      },
      "microsoft.graph.synchronizationSecret": {
        "title": "synchronizationSecret",
        "enum": [
          "None",
          "UserName",
          "Password",
          "SecretToken",
          "AppKey",
          "BaseAddress",
          "ClientIdentifier",
          "ClientSecret",
          "SingleSignOnType",
          "Sandbox",
          "Url",
          "Domain",
          "ConsumerKey",
          "ConsumerSecret",
          "TokenKey",
          "TokenExpiration",
          "Oauth2AccessToken",
          "Oauth2AccessTokenCreationTime",
          "Oauth2RefreshToken",
          "SyncAll",
          "InstanceName",
          "Oauth2ClientId",
          "Oauth2ClientSecret",
          "CompanyId",
          "UpdateKeyOnSoftDelete",
          "SynchronizationSchedule",
          "SystemOfRecord",
          "SandboxName",
          "EnforceDomain",
          "SyncNotificationSettings",
          "Server",
          "PerformInboundEntitlementGrants",
          "HardDeletesEnabled",
          "SyncAgentCompatibilityKey",
          "SyncAgentADContainer",
          "ValidateDomain",
          "TestReferences"
        ],
        "type": "string"
      },
      "microsoft.graph.synchronizationStatusCode": {
        "title": "synchronizationStatusCode",
        "enum": [
          "NotConfigured",
          "NotRun",
          "Active",
          "Paused",
          "Quarantine"
        ],
        "type": "string"
      },
      "microsoft.graph.synchronizationTaskExecutionResult": {
        "title": "synchronizationTaskExecutionResult",
        "enum": [
          "Succeeded",
          "Failed",
          "EntryLevelErrors"
        ],
        "type": "string"
      },
      "microsoft.graph.synchronizationJobRestartScope": {
        "title": "synchronizationJobRestartScope",
        "enum": [
          "Full",
          "QuarantineState",
          "Watermark",
          "Escrows",
          "ConnectorDataStore",
          "None"
        ],
        "type": "string"
      },
      "microsoft.graph.quarantineReason": {
        "title": "quarantineReason",
        "enum": [
          "EncounteredBaseEscrowThreshold",
          "EncounteredTotalEscrowThreshold",
          "EncounteredEscrowProportionThreshold",
          "EncounteredQuarantineException",
          "Unknown"
        ],
        "type": "string"
      },
      "microsoft.graph.synchronizationScheduleState": {
        "title": "synchronizationScheduleState",
        "enum": [
          "Active",
          "Disabled"
        ],
        "type": "string"
      },
      "microsoft.graph.scopeOperatorMultiValuedComparisonType": {
        "title": "scopeOperatorMultiValuedComparisonType",
        "enum": [
          "All",
          "Any"
        ],
        "type": "string"
      },
      "microsoft.graph.scopeOperatorType": {
        "title": "scopeOperatorType",
        "enum": [
          "Binary",
          "Unary"
        ],
        "type": "string"
      },
      "microsoft.graph.educationUserRole": {
        "title": "educationUserRole",
        "enum": [
          "student",
          "teacher",
          "none",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.educationSynchronizationProfileState": {
        "title": "educationSynchronizationProfileState",
        "enum": [
          "deleting",
          "deletionFailed",
          "provisioningFailed",
          "provisioned",
          "provisioning",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.educationSynchronizationStatus": {
        "title": "educationSynchronizationStatus",
        "enum": [
          "paused",
          "inProgress",
          "success",
          "error",
          "validationError",
          "quarantined",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.educationExternalSource": {
        "title": "educationExternalSource",
        "enum": [
          "sis",
          "manual",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.educationGender": {
        "title": "educationGender",
        "enum": [
          "female",
          "male",
          "other",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.educationAssignmentStatus": {
        "title": "educationAssignmentStatus",
        "enum": [
          "draft",
          "published",
          "assigned",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.educationSubmissionStatus": {
        "title": "educationSubmissionStatus",
        "enum": [
          "working",
          "submitted",
          "completed",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceEnrollmentFailureReason": {
        "title": "deviceEnrollmentFailureReason",
        "enum": [
          "unknown",
          "authentication",
          "authorization",
          "accountValidation",
          "userValidation",
          "deviceNotSupported",
          "inMaintenance",
          "badRequest",
          "featureNotSupported",
          "enrollmentRestrictionsEnforced",
          "clientDisconnected"
        ],
        "type": "string"
      },
      "odata.error": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/odata.error.main"
          }
        }
      },
      "odata.error.main": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/odata.error.detail"
            }
          },
          "innererror": {
            "type": "object",
            "description": "The structure of this object is service-specific"
          }
        }
      },
      "odata.error.detail": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "error": {
        "description": "error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/odata.error"
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "schema": {
          "type": "boolean"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "schema": {
          "type": "string"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "DelegatedWork": {
        "type": "oauth2",
        "description": "DelegatedWork",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://graph.microsoft.com/",
            "refreshUrl": "https://graph.microsoft.com/",
            "scopes": {
              "User.ReadAll": "Read all user data",
              "User.WriteAll": "Write all user data",
              "Directory.ReadAll": "Write to directory"
            }
          }
        }
      },
      "DelegatedPersonal": {
        "type": "oauth2",
        "description": "DelegatedPersonal",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://graph.microsoft.com/",
            "refreshUrl": "https://graph.microsoft.com/",
            "scopes": {
              "User.ReadAll": "Read all user data",
              "User.WriteAll": "Write all user data",
              "Directory.ReadAll": "Write to directory"
            }
          }
        }
      },
      "Application": {
        "type": "oauth2",
        "description": "Application",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://graph.microsoft.com/",
            "refreshUrl": "https://graph.microsoft.com/",
            "scopes": {
              "User.ReadAll": "Read all user data",
              "User.WriteAll": "Write all user data",
              "Directory.ReadAll": "Write to directory"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "schemaExtensions.schemaExtension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directoryObjects.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directoryObjects.delta",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.getByIds",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.validateProperties",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.checkMemberGroups",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.getMemberGroups",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.getMemberObjects",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.renew",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.restore",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.assignLicense",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.changePassword",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.invalidateAllRefreshTokens",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.sendMail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.findMeetingTimesOLD",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.findMeetingTimes",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.getMailTips",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.reminderView",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.findRoomLists",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.findRooms",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.subscribeByMail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.unsubscribeByMail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.addFavorite",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.removeFavorite",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.resetUnseenCount",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.removeAllDevicesFromManagement",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.setMobileDeviceManagementAuthority",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.getEncryptionPublicKey",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.uploadDepToken",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.syncWithAppleDeviceEnrollmentProgram",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.getManagedAppDiagnosticStatuses",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.getManagedAppPolicies",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryObjects.wipeManagedAppRegistrationByDeviceTag",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "applications.application",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "administrativeUnits.administrativeUnit",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "administrativeUnits.delta",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "allowedDataLocations.allowedDataLocation",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "appRoleAssignments.appRoleAssignment",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "contacts.orgContact",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "contacts.delta",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "devices.device",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "domains.domain",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "domains.forceDelete",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "domains.verify",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "domainDnsRecords.domainDnsRecord",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.group",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.delta",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groups.validateProperties",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groups.renew",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groups.subscribeByMail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groups.unsubscribeByMail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groups.addFavorite",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groups.removeFavorite",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groups.resetUnseenCount",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryRoles.directoryRole",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directoryRoleTemplates.directoryRoleTemplate",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directorySettingTemplates.directorySettingTemplate",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "organization.organization",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "organization.setMobileDeviceManagementAuthority",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "organization.getEncryptionPublicKey",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "organization.uploadDepToken",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "organization.syncWithAppleDeviceEnrollmentProgram",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "oauth2PermissionGrants.oAuth2PermissionGrant",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "scopedRoleMemberships.scopedRoleMembership",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "servicePrincipals.servicePrincipal",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "settings.directorySetting",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "subscribedSkus.subscribedSku",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.user",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.delta",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.assignLicense",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.changePassword",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.invalidateAllRefreshTokens",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.sendMail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.findMeetingTimesOLD",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.findMeetingTimes",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.getMailTips",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.reminderView",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.findRoomLists",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.findRooms",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.removeAllDevicesFromManagement",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.getManagedAppDiagnosticStatuses",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.getManagedAppPolicies",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.wipeManagedAppRegistrationByDeviceTag",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "policies.policy",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "contracts.contract",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "workbooks.driveItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "workbooks.delta",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "workbooks.search",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "workbooks.checkin",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "workbooks.checkout",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "workbooks.copy",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "workbooks.createLink",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "workbooks.createUploadSession",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "workbooks.invite",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "workbooks.validatePermission",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "drives.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "drives.recent",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "drives.search",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "drives.sharedWithMe",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "shares.sharedDriveItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.site",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.getByPath",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "subscriptions.subscription",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "identityRiskEvents.identityRiskEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "impossibleTravelRiskEvents.impossibleTravelRiskEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "leakedCredentialsRiskEvents.leakedCredentialsRiskEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "anonymousIpRiskEvents.anonymousIpRiskEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "suspiciousIpRiskEvents.suspiciousIpRiskEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "unfamiliarLocationRiskEvents.unfamiliarLocationRiskEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "malwareRiskEvents.malwareRiskEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "privilegedRoles.privilegedRole",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "privilegedRoles.selfActivate",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "privilegedRoles.selfDeactivate",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "privilegedRoleAssignments.privilegedRoleAssignment",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "privilegedRoleAssignments.my",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "privilegedRoleAssignments.makePermanent",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "privilegedRoleAssignments.makeEligible",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "privilegedOperationEvents.privilegedOperationEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "privilegedSignupStatus.privilegedSignupStatus",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "privilegedSignupStatus.signUp",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "privilegedSignupStatus.isSignedUp",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "privilegedSignupStatus.canSignUp",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "privilegedSignupStatus.completeSetup",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "privilegedApproval.privilegedApproval",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "privilegedApproval.myRequests",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "invitations.invitation",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "appConfigurationGroupAssignments.mdmAppConfigGroupAssignment",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "assignments.managedDeviceMobileAppConfigurationAssignment",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "vppTokens.vppToken",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "vppTokens.syncLicenses",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "vppTokens.revokeLicenses",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "enrollmentConfigurationAssignment.enrollmentConfigurationAssignment",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "commands.command",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "payloadResponse.payloadResponse",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "team.team",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "channels.channel",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "chatThreads.chatThread",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groupLifecyclePolicies.groupLifecyclePolicy",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groupLifecyclePolicies.renewGroup",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groupLifecyclePolicies.addGroup",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groupLifecyclePolicies.removeGroup",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "identityProviders.IdentityProvider",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "functions.attributeMappingFunctionSchema",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "filterOperators.filterOperatorSchema",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.user",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.assignLicense",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.changePassword",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.invalidateAllRefreshTokens",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.sendMail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.findMeetingTimesOLD",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.findMeetingTimes",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.getMailTips",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.reminderView",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.findRoomLists",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.findRooms",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.removeAllDevicesFromManagement",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.getManagedAppDiagnosticStatuses",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.getManagedAppPolicies",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.wipeManagedAppRegistrationByDeviceTag",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directory.directory",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "drive.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "drive.recent",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "drive.search",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "drive.sharedWithMe",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "planner.planner",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "deviceManagement.deviceManagement",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "deviceManagement.verifyWindowsEnrollmentAutoDiscovery",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "deviceManagement.getEffectivePermissions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "deviceAppManagement.deviceAppManagement",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "deviceAppManagement.syncMicrosoftStoreForBusinessApps",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.reportRoot",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "reports.deviceConfigurationUserActivity",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.deviceConfigurationDeviceActivity",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOffice365ActivationsUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOffice365ActivationCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOffice365ActivationsUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOffice365ActiveUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOffice365ServicesUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOffice365ActiveUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOffice365GroupsActivityDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOffice365GroupsActivityCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOffice365GroupsActivityGroupCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOffice365GroupsActivityStorage",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOffice365GroupsActivityFileCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getEmailActivityUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getEmailActivityCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getEmailActivityUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getEmailAppUsageUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getEmailAppUsageAppsUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getEmailAppUsageUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getEmailAppUsageVersionsUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getMailboxUsageDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getMailboxUsageMailboxCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getMailboxUsageQuotaStatusMailboxCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getMailboxUsageStorage",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOneDriveActivityUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOneDriveActivityUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOneDriveActivityFileCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOneDriveUsageAccountDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOneDriveUsageAccountCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOneDriveUsageFileCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getOneDriveUsageStorage",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSharePointActivityUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSharePointActivityFileCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSharePointActivityUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSharePointActivityPages",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSharePointSiteUsageDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSharePointSiteUsageFileCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSharePointSiteUsageSiteCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSharePointSiteUsageStorage",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSharePointSiteUsagePages",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessActivityUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessActivityCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessActivityUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessPeerToPeerActivityCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessPeerToPeerActivityUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessPeerToPeerActivityMinuteCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessOrganizerActivityCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessOrganizerActivityUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessOrganizerActivityMinuteCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessParticipantActivityCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessParticipantActivityUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessParticipantActivityMinuteCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessDeviceUsageUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessDeviceUsageDistributionUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getSkypeForBusinessDeviceUsageUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getYammerActivityUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getYammerActivityCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getYammerActivityUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getYammerDeviceUsageUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getYammerDeviceUsageDistributionUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getYammerDeviceUsageUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getYammerGroupsActivityDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getYammerGroupsActivityGroupCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getYammerGroupsActivityCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getTeamsUserActivityUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getTeamsUserActivityCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getTeamsUserActivityUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getTeamsDeviceUsageUserDetail",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getTeamsDeviceUsageUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getTeamsDeviceUsageDistributionUserCounts",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "reports.getTenantSecureScores",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "education.educationRoot",
      "x-ms-docs-toc-type": "page"
    }
  ]
}